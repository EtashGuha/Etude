<tei>
	<teiHeader>
	<fileDesc xml:id="345"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Empirical Study of a Dataflow Language on the CM-5 <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>David E. Culler <lb/>Seth Copen Goldstein <lb/>Klaus Erik Schauser <lb/>Thorsten von Eicken <lb/></docAuthor></byline>
		<byline><affiliation>Computer Science Division <lb/>Department of Electrical Engineering and Computer Sciences <lb/>College of Engineering <lb/>University of California, Berkeley <lb/></affiliation></byline>
		<div type="abstract">Abstract: This paper presents empirical data on the behavior of large dataflow programs on <lb/>a distributed memory multiprocessor. The programs, written in the dataflow language Id90, are <lb/>compiled via a Threaded Abstract Machine (TAM) for the CM-5. TAM refines dataflow execution <lb/>models by addressing critical constraints that modern parallel architectures place on the compilation <lb/>of general-purpose parallel programming languages. It exposes synchronization, scheduling, and <lb/>network access so that the compiler can optimize against the cost of these operations. <lb/>The data presented in this paper evaluates the TAM approach in compiling dataflow languages <lb/>on stock hardware. We present data on the instruction mix, speedup, scheduling behavior, and <lb/>locality of large ID90 programs. It is shown that the TAM scheduling hierarchy is able to tolerate <lb/>long communication latencies, especially when some degree of I-structure locality is present. We investigate how frame allocation strategies, k-bounded loops, and I-structure caching and distribution <lb/>together affect the overall efficiency. Finally we document some scheduling anomalies. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>