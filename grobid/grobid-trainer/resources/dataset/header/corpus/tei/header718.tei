<tei>
	<teiHeader>
	<fileDesc xml:id="719"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Universal Constructions for Large Objects * <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>James H. Anderson and Mark Moir <lb/></docAuthor></byline>
		<byline><affiliation>Dept. of Computer Science, University of North Carolina at Chapel Hill <lb/></affiliation></byline>
		<div type="abstract">Abstract <lb/>We present lock-free and wait-free universal constructions for implementing large <lb/>shared objects. Most previous universal constructions require processes to copy the <lb/>entire object state, which is impractical for large objects. Previous attempts to <lb/>address this problem require programmers to explicitly fragment large objects into <lb/>smaller, more manageable pieces, paying particular attention to how such pieces are <lb/>copied. In contrast, our constructions are designed to largely shield programmers <lb/>from this fragmentation. Furthermore, for many objects, our constructions result <lb/>in lower copying overhead than previous ones. <lb/>Fragmentation is achieved in our constructions through the use of load-linked, <lb/>store-conditional, and validate operations on a &quot;large&quot; multi-word shared variable. <lb/>Before presenting our constructions, we show that these operations can be efficiently <lb/>implemented from similar one-word primitives. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>