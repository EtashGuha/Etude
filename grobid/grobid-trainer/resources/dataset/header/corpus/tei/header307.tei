<tei>
	<teiHeader>
	<fileDesc xml:id="312"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Kinetic Binary Space Partitions for <lb/>Intersecting Segments and Disjoint Triangles <lb/></titlePart>
		</docTitle>
		<note type="other">(Extended Abstract) <lb/></note>
		<byline><docAuthor>Pankaj K. Agarwal Jeff Erickson Leonidas J. Guibas <lb/></docAuthor></byline>
		<div type="abstract">Abstract <lb/>We describe randomized algorithms for efficiently maintaining a binary space partition of continuously moving, possibly <lb/>intersecting, line segments in the plane, and of continuously <lb/>moving but disjoint triangles in space. Our two-dimensional <lb/>BSP has depth O(log n) and size O(n log n + k) and can be <lb/>constructed in expected O(n log 2 n + k log n) time, where k <lb/>is the number of intersecting pairs. We can detect combinatorial changes to our BSP caused by the motion of the segments, and we can update our BSP in expected O(log n) time <lb/>per change. Our three-dimensional BSP has depth O(log n), <lb/>size O(n log 2 n+k 0 ), construction time O(n log 3 n+k 0 log n), <lb/>and update time O(log 2 n) (all expected), where k 0 is the <lb/>number of intersections between pairs of edges in the xy-projection of the triangles. Under reasonable assumptions <lb/>about the motion of the segments or triangles, the expected <lb/>number of number of combinatorial changes to either BSP is <lb/>O(mn s (n)), where m is the number of moving objects and <lb/>s (n) is the maximum length of an (n; s) Davenport-Schinzel <lb/>sequence for some constant s. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>