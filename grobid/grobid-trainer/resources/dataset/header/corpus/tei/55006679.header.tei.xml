<?xml version="1.0" ?>
<tei>
	<teiHeader>
		<fileDesc xml:id="55006679"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	<docTitle>
	<titlePart>Detecting Past and Present Intrusions through<lb/> Vulnerability-Specific Predicates<lb/></titlePart>
	</docTitle>

	<byline>
	<docAuthor>Ashlesha Joshi, Samuel T. King, George W. Dunlap, and Peter M. Chen<lb/></docAuthor>
	</byline>

	<byline>
	<affiliation>Department of Electrical Engineering and Computer Science<lb/> University of Michigan<lb/></affiliation>
	</byline>

	<address>Ann Arbor, MI 48109-2122<lb/></address>

	<email>covirt@umich.edu<lb/></email>

	<div type="abstract">ABSTRACT<lb/> Most systems contain software with yet-to-be-discovered se-<lb/>curity vulnerabilities. When a vulnerability is disclosed,<lb/> administrators face the grim reality that they have been<lb/> running software which was open to attack. Sites that<lb/> value availability may be forced to continue running this<lb/> vulnerable software until the accompanying patch has been<lb/> tested. Our goal is to improve security by detecting intru-<lb/>sions that occurred before the vulnerability was disclosed<lb/> and by detecting and responding to intrusions that are at-<lb/>tempted after the vulnerability is disclosed. We detect when<lb/> a vulnerability is triggered by executing vulnerability-specific<lb/> predicates as the system runs or replays. This paper de-<lb/>scribes the design, implementation and evaluation of a sys-<lb/>tem that supports the construction and execution of these<lb/> vulnerability-specific predicates. Our system, called Intro-<lb/>Virt, uses virtual-machine introspection to monitor the exe-<lb/>cution of application and operating system software. Intro-<lb/>Virt executes predicates over past execution periods by com-<lb/>bining virtual-machine introspection with virtual-machine<lb/> replay. IntroVirt eases the construction of powerful predi-<lb/>cates by allowing predicates to run existing target code in<lb/> the context of the target system, and it uses checkpoints<lb/> so that predicates can execute target code without perturb-<lb/>ing the state of the target system. IntroVirt allows pred-<lb/>icates to refresh themselves automatically so they work in<lb/> the presence of preemptions. We show that vulnerability-<lb/>specific predicates can be written easily for a wide variety<lb/> of real vulnerabilities, can detect and respond to intrusions<lb/> over both the past and present time intervals, and add little<lb/> overhead for most vulnerabilities.<lb/></div>

	<keyword>Categories and Subject Descriptors<lb/></keyword>

		</front>
	</text>
</tei>
