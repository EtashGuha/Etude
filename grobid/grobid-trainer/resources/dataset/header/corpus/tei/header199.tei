<tei>
	<teiHeader>
	<fileDesc xml:id="200"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Efficient PRAM Simulation on a <lb/>Distributed Memory Machine <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Richard M. Karp <lb/></docAuthor></byline>
		<byline><affiliation>University of California at Berkeley and <lb/>International Computer Science Institute,</affiliation></byline>
		<address>Berkeley, CA <lb/></address>
		<byline><docAuthor>Michael Luby <lb/></docAuthor></byline>
		<byline><affiliation>International Computer Science Institute,</affiliation></byline>
		<address>Berkeley, CA</address>
		<byline><affiliation>and UC Berkeley <lb/></affiliation></byline>
		<byline><docAuthor>Friedhelm Meyer auf der Heide <lb/></docAuthor></byline>
		<byline><affiliation>Heinz Nixdorf Institute and Computer Science Department, <lb/></affiliation></byline>
		<byline><affiliation>University of Paderborn,</affiliation></byline>
		<address>Germany <lb/></address>
		<idno>TR-93-040 <lb/></idno>
		<date>August 1993 <lb/></date>
		<div type="abstract">Abstract <lb/>We present algorithms for the randomized simulation of a shared memory machine <lb/>(PRAM) on a Distributed Memory Machine (DMM). In a PRAM, memory conflicts <lb/>occur only through concurrent access to the same cell, whereas the memory of a <lb/>DMM is divided into modules, one for each processor, and concurrent accesses to <lb/>the same module create a conflict. The delay of a simulation is the time needed to <lb/>simulate a parallel memory access of the PRAM. Any general simulation of an m <lb/>processor PRAM on a n processor DMM will necessarily have delay at least m=n. A <lb/>randomized simulation is called time-processor optimal if the delay is O(m=n) with <lb/>high probability. Using a novel simulation scheme based on hashing we obtain a <lb/>time-processor optimal simulation with delay O(loglog(n)log (n)). The best previous <lb/>simulations use a simpler scheme based on hashing and have much larger delay: <lb/>fi(log(n)= loglog(n)) for the simulation of an n processor PRAM on an n processor <lb/>DMM, and fi(log(n)) in the case where the simulation is time-processor optimal. <lb/></div>
		<note type="grant">Research partially supported by NSF/DARPA Grant CCR-9005448 <lb/>Research partially supported by NSF operating grant CCR-9016468 and by grant No. 89-00312 from <lb/>the United States-Israel Binational Science Foundation (BSF), Jerusalem, Israel. <lb/>Part of work was done during a visit at the International Computer Science Institute at Berkeley; <lb/>supported in part by DFG-Forschergruppe &quot;Effiziente Nutzung massiv paralleler Systeme, Teilprojekt 4&quot;, <lb/>and by the Esprit Basic Research Action Nr. 7141 (ALCOM II). <lb/></note>
		<pb/>
		</front>
</text>
</tei>