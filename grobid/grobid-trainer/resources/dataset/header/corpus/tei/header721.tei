<tei>
	<teiHeader>
	<fileDesc xml:id="722"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">A Dossier Driven Persistent Objects Facility <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Robert Mecklenburg, Charles Clark, Gary Lindstrom and Benny Yih <lb/></docAuthor></byline>
		<byline><affiliation>University of Utah Center for Software Science <lb/>Department of Computer Science <lb/></affiliation></byline>
		<address>Salt Lake City, UT 84112 <lb/></address>
		<email>E-mail: {mecklen,clark,gary,yih}@cs.utah.edu <lb/></email>
		<div type="abstract">Abstract <lb/>We describe the design and implementation of a persistent object storage facility <lb/>based on a dossier driven approach. Objects are characterized by dossiers which describe both their language defined and &quot;extra-linguistic&quot; properties. These dossiers are <lb/>generated by a C++ preprocessor in concert with an augmented, but completely C++ <lb/>compatible, class description language. The design places very few burdens on the application programmer and can be used without altering the data member layout of application objects or inheriting from special classes. The storage format is kept simple to allow <lb/>the use of a variety of data storage backends. In addition, these dossiers can be used to <lb/>implement (or augment) a run-time typing facility compatible with the proposed ANSI <lb/>C++ standard. Finally, by providing a generic object to byte stream conversion the persistent object facility can also be used in conjunction with an interprocess communication <lb/>facility to provide object-level communication between processes. 1 <lb/></div>
		<div type="intro">1 Motivation</div>
		</front>
</text>
</tei>