<tei>
	<teiHeader>
	<fileDesc xml:id="490"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Dynamic Procedure Placement Through Cache Windowing <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Carleton Miyamoto <lb/></docAuthor></byline>
		<idno>CS 252/265</idno>
		<date>Spring 98 <lb/></date>
		<byline><affiliation>University of California, Berkeley <lb/></affiliation></byline>
		<div type="abstract">Abstract <lb/>The relative slowdown of DRAMs with respect to <lb/>processor speeds and the widespread use of SMP <lb/>machines have bolstered the reliance on processor caches <lb/>to provide good performance. As a result, optimizing <lb/>machines and software for caches have recently received <lb/>more attention. In addition, with the popularity of <lb/>extensible computing, which includes the object oriented <lb/>programming style, shared libraries, and Java based <lb/>computing, creating effective compilers has become <lb/>more challenging, with an increased reliance on more <lb/>dynamic techniques, such as profiling and runtime code <lb/>generation. This paper proposes a dynamic optimization <lb/>method called cache windowing to reduce conflict misses <lb/>in L1 instruction caches. Using a combination of <lb/>hardware and software support, cache windowing <lb/>integrates a RollCache (a direct-mapped cache enhanced <lb/>to support dynamic cache configuration) and a software <lb/>implemented FIFO caching policy. Together, both allow <lb/>a program to reposition procedures, dynamically and <lb/>efficiently, to eliminate cache conflicts. Experiments <lb/>show that this type of caching scheme can achieve miss <lb/>rates competitive to a 2-way set associative cache for <lb/>various programs. Currently, a high software overhead <lb/>exists to support a software caching policy, though <lb/>different compiler optimizations, such as inlining, may <lb/>help to reduce this. Such a system provides a more robust <lb/>runtime architecture that, potentially, may adapt better to <lb/>a wider variety of environments. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>