<tei>
	<teiHeader>
	<fileDesc xml:id="131"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Strange Bedfellows: Issues in Object Naming Under Unix <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Douglas B. Orr, Robert W. Mecklenburg and Ravindra Kuramkote <lb/></docAuthor></byline>
		<byline><affiliation>Department of Computer Science <lb/>University of Utah <lb/></affiliation></byline>
		<address>Salt Lake City, UT 84112 USA <lb/></address>
		<email>E-mail: dbo@cs.utah.edu, mecklen@cs.utah.edu, kuramkot@cs.utah.edu <lb/></email>
		<div type="abstract">Abstract <lb/>Naming plays a key role in the design of any system that exports services or resources. Object systems <lb/>may export many different categories of names: instances, components of records, types, etc. Operating <lb/>systems export the names of files, devices, and services. Integrating an object base with existing operating system facilities can improve accessibility of the <lb/>object base resources. We consider the benefits and <lb/>pitfalls of integrating an object base namespace with <lb/>the Unix namespace. 1 <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>