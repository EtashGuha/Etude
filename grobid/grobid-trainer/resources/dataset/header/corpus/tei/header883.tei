<tei>
	<teiHeader>
	<fileDesc xml:id="unknown"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<note type="other">Chapter 1 <lb/></note>
		<docTitle>
			<titlePart type="main">Scheduling To Minimize Average Completion Time: <lb/>Off-line and On-line Algorithms <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Leslie A. Hall David B. Shmoys Joel Wein <lb/></docAuthor></byline>
		<div type="abstract">Abstract <lb/>Time-indexed linear programming formulations have recently received a great deal of attention for their practical <lb/>effectiveness in solving a number of single-machine scheduling problems. We show that these formulations are also an <lb/>important tool in the design of approximation algorithms <lb/>with good worst-case performance guarantees. We give simple new rounding techniques to convert an optimal fractional <lb/>solution into a feasible schedule for which we can prove a <lb/>constant-factor performance guarantee, thereby giving the <lb/>first theoretical evidence of the strength of these relaxations. <lb/>Specifically, we consider the problem of minimizing the <lb/>total weighted job completion time on a single machine <lb/>subject to precedence constraints, and give a polynomial-time (4 + *)-approximation algorithm, for any * &amp;gt; 0; <lb/>the best previously known guarantee for this problem was <lb/>superlogarithmic. With somewhat larger constants, we also <lb/>show how to extend this result to the case with release date <lb/>constraints, and still more generally, to the case with m <lb/>identical parallel machines. We give two other techniques for <lb/>problems in which there are release dates, but no precedence <lb/>constraints: the first is based on other new LP rounding <lb/>algorithms, whereas the second is a general framework for <lb/>designing on-line algorithms to minimize the total weighted <lb/>completion time. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>