<?xml version="1.0" ?>
<tei>
	<teiHeader>
		<fileDesc xml:id="55002783"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	<note type="page">1<lb/> </note>
	<date>Quality Week 1995<lb/></date>

	<docTitle>
	<titlePart>TESSY --<lb/>An Overall Unit Testing Tool<lb/></titlePart>
	</docTitle>

	<byline>
	<docAuthor>Joachim Wegener<lb/> Roman Pitschinetz<lb/></docAuthor>
	</byline>

	<byline>
	<affiliation>Daimler-Benz AG<lb/> Research and Technology<lb/></affiliation>
	</byline>

	<address>Alt-Moabit 96 a<lb/> D-10559 Berlin, Germany<lb/></address>

	<phone>Tel: +49 (0)30 39982-232<lb/> Fax: +49 (0)30 39982-107<lb/></phone>

	<email>email: wegener@DBresearch-berlin.de<lb/></email>

	<div type="abstract">Abstract<lb/> Until now, a lot of computer-aided software testing tools have been developed. Most of them<lb/> aim at the special support of several distinct test activities like test execution, monitoring, and<lb/> test evaluation. Tools which cover a wider range of activities and test phases have the decisive<lb/> shortcoming that there is no methodological support for the systematic design of test cases,<lb/> particularly for the functional test. In summary, there is no sufficient overall support for all<lb/> test activities.<lb/> In order to overcome these shortcomings, the testing tool TESSY was developed. The most im-<lb/>portant strength of TESSY is that it provides support for the whole testing life cycle, with the<lb/> main emphasis on computer-aided test case determination, test data selection, expected results<lb/> prediction, test execution, and test evaluation. Furthermore, there is powerful support for test<lb/> organization and test documentation. An integral part of TESSY is the classification-tree edi-<lb/>tor CTE, a graphical editor for the descriptive and systematic design of black-box test cases<lb/> following the classification-tree method. Several other substantial components of TESSY are,<lb/> for example, special window-based editors for the provision of essential environment informa-<lb/>tion, for the graphical visualization of the test object&apos;s interface as well as for the interactive<lb/> input of test data and expected results. During test execution, several basic activities, such as<lb/> test driver generation, coverage analysis, and regression testing, are performed automatically.<lb/> For the test evaluation, different criteria can be defined for the comparison of actual and ex-<lb/>pected results.<lb/> Practical trials of the test system started in 1994. First promising results indicate that the test<lb/> efficiency is enhanced significantly by using TESSY. Future work will focus on extensions of<lb/> TESSY with respect to integration testing and automatic generation of test cases and test data.<lb/> 2<lb/></div>

		</front>
	</text>
</tei>
