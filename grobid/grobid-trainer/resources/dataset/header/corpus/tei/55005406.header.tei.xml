<?xml version="1.0" ?>
<tei>
	<teiHeader>
		<fileDesc xml:id="55005406"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	<note type="page">1<lb/></note>
	
	<note type="other">Technical Article<lb/></note>

	<date>November 2009<lb/></date>

	<docTitle>
	<titlePart>AUTOSAR: New Paths to ECU Software<lb/> </titlePart>
	</docTitle>
	
	<div type="introduction">Each OEM has its own functional requirements for the ECUs in its<lb/> vehicles, especially when it comes to communication and diagnos-<lb/>tics. These requirements are implemented in OEM-specific software.<lb/> If a TIER1 supplies an ECU to several OEMs, it must manually modify<lb/> the ECU software for each project. Even if the functional software is<lb/> already decoupled quite well from the software, so that it can be<lb/> adapted to the OEM-specific requirements, this modification effort<lb/> is still work intensive and prone to errors. Figure 1 shows how<lb/> unmodified functional software is adapted to different vehicle<lb/> projects without AUTOSAR.<lb/> One goal of AUTOSAR is to minimize these adaptation efforts in<lb/> software integration. Therefore, AUTOSAR focuses on consistent<lb/> abstraction of the software from the hardware and partitioning of<lb/> the software into modules with defined functional scope and pre-<lb/>cise interfaces. These modules may be combined and, most signifi-<lb/>cantly, they can be substantially configured to cover the require-<lb/>ments of different OEMs. This eliminates manual modification of<lb/> the software and facilitates its reuse. Defined interfaces make it<lb/> possible to replace OEM-specific software components (e.g. for<lb/> diagnostics) with just minimal effort.<lb/></div>

		</front>
	</text>
</tei>
