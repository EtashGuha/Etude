<tei>
	<teiHeader>
	<fileDesc xml:id="732"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">The Cost of Recovery in Message Logging Protocols <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Sriram Rao, Lorenzo Alvisi, and Harrick M. Vin <lb/></docAuthor></byline>
		<byline><affiliation>Department of Computer Sciences <lb/>The University of Texas at Austin <lb/></affiliation></byline>
		<address>Taylor Hall 2.124, Austin, Texas 78712-1188, USA <lb/></address>
		<email>E-mail: {sriram,lorenzo,vin}@cs.utexas.edu,</email>
		<note type="phone">Telephone: (512) 471-9792, Fax: (512) 471-8885 <lb/></note>
		<ptr type="web">URL: http://www.cs.utexas.edu/users/{sriram,lorenzo,vin} <lb/></ptr>
		<div type="abstract">Abstract <lb/>Message logging is a popular technique for building low-overhead protocols that tolerate <lb/>process crash failures. Past research in message logging has focused on studying the relative <lb/>overhead imposed by pessimistic, optimistic, and causal protocols during failure-free executions. In this paper, we give the first experimental evaluation of the performance of these <lb/>protocols during recovery. We discover that, if a single failure is to be tolerated, pessimistic <lb/>and causal protocols perform best, because they avoid rollbacks of correct processes. For <lb/>multiple failures, however, the dominant factor in determining performance becomes where <lb/>the recovery information is logged (i.e. at the sender, at the receiver, or replicated at a <lb/>subset of the processes in the system) rather than when this information is logged (i.e. if <lb/>logging is synchronous or asynchronous). From our results, we distil a few lessons that can <lb/>guide the design of message-logging protocols that combine low-overhead during failure-free <lb/>executions with fast recovery. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>