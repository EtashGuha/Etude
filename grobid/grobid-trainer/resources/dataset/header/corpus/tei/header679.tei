<tei>
	<teiHeader>
	<fileDesc xml:id="681"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">A Concurrency Mechanism For Sequential Eiffel <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Murat Karaorman John Bruno <lb/></docAuthor></byline>
		<byline><affiliation>Department of Computer Science <lb/>University of California <lb/></affiliation></byline>
		<address>Santa Barbara, CA 93106 <lb/></address>
		<email>Email: murat@cs.ucsb.edu, bruno@cs.ucsb.edu <lb/></email>
		<div type="abstract">Abstract <lb/>This paper describes a set of classes designed to <lb/>facilitate concurrent programming using the sequential object-oriented language EIFFEL. The design and <lb/>implementation presented here is the application of a <lb/>more general Concurrency Model we have built to introduce concurrency to sequential OOPLs. The model <lb/>views concurrency as a well-defined, inheritable property of objects specified in the class CONCURRENCY, <lb/>and provides a methodology using inheritance to write <lb/>concurrent object-orient applications. Key ideas involved in the methodology are: active objects, extensibility of protocols, synchronization programming, <lb/>data-driven synchronization with asynchronous message passing. <lb/>The novel feature of our work is in its describing <lb/>concurrency in the context of sequential programming <lb/>and using a object-oriented design methodology to describe and implement it. <lb/>We illustrate the usefulness and expressiveness of <lb/>the concurrency mechanism by presenting examples <lb/>and analyzing them. The ability to express powerful <lb/>synchronization constraints as reusable software components emerges as a strong point of our implementation. <lb/></div>
		<note type="grant">This research has been supported by the Lawrence Liver-more National Labs; grant no: ISCR/LLNL 89-22,90-22 <lb/></note>
		<div type="intro">1 INTRODUCTION</div>
		</front>
</text>
</tei>