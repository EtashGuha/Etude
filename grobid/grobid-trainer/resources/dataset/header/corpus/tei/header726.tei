<tei>
	<teiHeader>
	<fileDesc xml:id="727"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Programming the Web: <lb/>An Application-oriented Language for Hypermedia Services <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>David A. Ladd J. Christopher Ramming <lb/></docAuthor></byline>
		<email>ladd@research.att.com jcr@research.att.com <lb/></email>
		<byline><affiliation>AT&amp;T Bell Laboratories <lb/></affiliation></byline>
		<date>October 9, 1995 <lb/></date>
		<div type="abstract">Abstract <lb/>MAWL is an application language for programming interactive services in the context of the Worldwide <lb/>Web. The language is small, because no construct was introduced without compelling justification; as with <lb/>yacc [8], general-purpose computation is done in a host language. MAWL offers conveniences such as control <lb/>abstraction, persistent state management, synchronization, and shared memory. In addition, the MAWL <lb/>compiler performs static checking designed to prevent common Web programming errors. In this paper we <lb/>discuss the design and engineering of MAWL. <lb/>We describe the problems MAWL is intended to solve, and then discuss our design choices in the context <lb/>of our general language design philosophy, We also include an appendix of commentary on several short <lb/>MAWL programs. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>