<?xml version="1.0" ?>
<tei>
	<teiHeader>
		<fileDesc xml:id="55000431"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	<note type="other">Field-programmable gate array<lb/></note>
	
	<note type="page"> 1<lb/></note>
	
	<docTitle>
	<titlePart>Field-programmable gate array<lb/> </titlePart>
	</docTitle>


	<div type="introduction">
An Altera Stratix IV GX FPGA<lb/> An example of a Xilinx Spartan 6 FPGA programming/evaluation board<lb/>
	A Field-programmable Gate Array<lb/> (FPGA) is an integrated circuit designed to<lb/> be configured by the customer or designer<lb/> after manufacturing—hence<lb/> &quot;field-programmable&quot;.<lb/> The FPGA<lb/> configuration is generally specified using a<lb/> hardware description language (HDL),<lb/> similar to<lb/> that used<lb/> for an<lb/> application-specific<lb/> integrated circuit<lb/> (ASIC) (circuit diagrams were previously<lb/> used to specify the configuration, as they<lb/> were for ASICs, but this is increasingly<lb/> rare). FPGAs can be used to implement any<lb/> logical function that an ASIC could<lb/> perform. The ability to update the<lb/> functionality after<lb/> shipping,<lb/> partial<lb/> re-configuration of the portion of the<lb/> design [1] and the low non-recurring<lb/> engineering costs relative to an ASIC design<lb/> (notwithstanding the generally higher unit<lb/> cost), offer advantages for many<lb/> applications.<lb/> [2]<lb/> FPGAs contain programmable logic<lb/> components called &quot;logic blocks&quot;, and a<lb/> hierarchy of reconfigurable interconnects<lb/> that allow the blocks to be &quot;wired<lb/> together&quot;—somewhat<lb/> like many<lb/> (changeable) logic gates that can be<lb/> inter-wired<lb/> in (many)<lb/> different<lb/> configurations. Logic blocks can be configured to perform complex combinational functions, or merely simple logic<lb/> gates like AND and XOR. In most FPGAs, the logic blocks also include memory elements, which may be simple<lb/> flip-flops or more complete blocks of memory.<lb/> [2]<lb/> In addition to digital functions, some FPGAs have analog features. The most common analog feature is<lb/> programmable slew rate and drive strength on each output pin, allowing the engineer to set slow rates on lightly<lb/> loaded pins that would otherwise ring unacceptably, and to set stronger, faster rates on heavily loaded pins on<lb/> high-speed channels that would otherwise run too slow.<lb/> [3] [4] Another relatively common analog feature is<lb/> differential comparators on input pins designed to be connected to differential signaling channels. A few &quot;mixed<lb/> signal FPGAs&quot; have integrated peripheral Analog-to-Digital Converters (ADCs) and Digital-to-Analog Converters<lb/> (DACs) with analog signal conditioning blocks allowing them to operate as a system-on-a-chip.<lb/> [5] Such devices blur<lb/> the line between an FPGA, which carries digital ones and zeros on its internal programmable interconnect fabric, and<lb/> field-programmable analog array (FPAA), which carries analog values on its internal programmable interconnect<lb/> fabric.
	</div>

		</front>
	</text>
</tei>
