<tei>
	<teiHeader>
	<fileDesc xml:id="336"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Register Windows and User-Space Threads on the SPARC <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>David Keppel <lb/></docAuthor></byline>
		<idno>Technical Report #91-08-01 <lb/></idno>
		<byline><affiliation>Department of Computer Science and Engineering <lb/>University of Washington <lb/></affiliation></byline>
		<address>Seattle, Washington 98195 <lb/></address>
		<date>1 August 1991 <lb/></date>
		<div type="abstract">Abstract <lb/>Multiple lightweight processes or threads have multiple stacks, and a thread context switch moves <lb/>execution from one stack to another. On the SPARC 1 architecture, parts of a thread&apos;s stack can be <lb/>cached in register windows while the thread is running. The cached data must be flushed to memory <lb/>when the thread is suspended. Doing the flushing both efficiently and correctly can be tricky. This <lb/>document discusses the implementation of a non-preemptive user-space threads package under SunOS 2 . <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>