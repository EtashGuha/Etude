<tei>
	<teiHeader>
	<fileDesc xml:id="392"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Revisiting the Paxos algorithm * <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Roberto De Prisco a , Butler Lampson a, Nancy Lynch a <lb/></docAuthor></byline>
		<byline><affiliation>a MIT Laboratory for Computer Science</affiliation></byline>
		<address>545 Technology Square NE43, Cambridge, <lb/> MA 02139, USA.</address>
		<email>Email: frobdep,lampson,lynchg@theory.lcs.mit.edu. <lb/></email>
		<div type="abstract">Abstract. <lb/> The paxos algorithm is an efficient and highly fault-tolerant algorithm, devised by <lb/>Lamport, for reaching consensus in a distributed system. Although it appears to be <lb/>practical, seems to be not widely known or understood. This paper contains a new <lb/>presentation of the paxos algorithm, based on a formal decomposition into several <lb/>interacting components. It also contains a correctness proof and a time performance <lb/>and fault-tolerance analysis. <lb/>The formal framework used for the presentation of the algorithm is provided by <lb/>the Clock General Timed Automaton (Clock GTA) model. The Clock GTA provides <lb/>a systematic way of describing timing-based systems in which there is a notion of <lb/>&quot;normal&quot; timing behavior, but that do not necessarily always exhibit this &quot;normal&quot; <lb/>timing behavior. <lb/></div>
		<keywords>Keywords: I/O automata models, formal verification, distributed consensus, <lb/>partially synchronous systems, fault-tolerance <lb/></keywords>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>