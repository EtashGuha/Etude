<tei>
	<teiHeader>
	<fileDesc xml:id="143"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Software Engineering <lb/>Beginning In <lb/>The First Computer Science Course 1 <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Jane C. Prey James P. Cohoon Greg Fife <lb/></docAuthor></byline>
		<byline><affiliation>Department of Computer Science <lb/>School of Engineering and Applied Sciences <lb/>University of Virginia <lb/></affiliation></byline>
		<address>Charlottesville, VA 22903 <lb/></address>
		<div type="abstract">Abstract. The demand for computing and computing power is increasing at a rapid pace. With this demand, <lb/>the ability to develop, enhance and maintain software is a top priority. Educating students to do competent <lb/>work in software development, enhancement and maintenance has become a complex problem. Software <lb/>engineering concepts are typically not introduced in beginning computer science courses. Students do not see <lb/>software engineering until the third or fourth year of the curriculum. We do not believe students can acquire <lb/>an adequate software engineering foundation with the present approach. We believe an emphasis on software <lb/>engineering should begin in the very first course and continue throughout the curriculum. We are redesigning <lb/>our curriculum to reect this. The first course of the new curriculum is complete. This article focuses on two <lb/>of the laboratory activities we have developed which deal with specific software engineering concepts. <lb/></div>
		<div type="intro">Introduction</div>
		</front>
</text>
</tei>