<tei>
	<teiHeader>
	<fileDesc xml:id="535"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">TIGHT ANALYSES OF TWO LOCAL LOAD BALANCING ALGORITHMS <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>BHASKAR GHOSH 1 F. T. LEIGHTON 2 BRUCE M. MAGGS 3;4 <lb/>S. MUTHUKRISHNAN 5 C. GREG PLAXTON 6;7 R. RAJARAMAN 6;7 <lb/>ANDR EA W. RICHA 3;4 ROBERT E. TARJAN 8 DAVID ZUCKERMAN 6;9 <lb/></docAuthor></byline>
		<div type="abstract">Abstract. <lb/>This paper presents an analysis of the following load balancing algorithm. At each step, each node in a network examines the number <lb/>of tokens at each of its neighbors and sends a token to each neighbor with at least 2d + 1 fewer tokens, where d is the maximum degree <lb/>of any node in the network. We show that within O(=ff) steps, the algorithm reduces the maximum difference in tokens between any <lb/>two nodes to at most O((d 2 log n)=ff), where is the global imbalance in tokens (i.e., the maximum difference between the number of <lb/>tokens at any node initially and the average number of tokens), n is the number of nodes in the network, and ff is the edge expansion of <lb/>the network. The time bound is tight in the sense that for any graph with edge expansion ff, and for any value , there exists an initial <lb/>distribution of tokens with imbalance for which the time to reduce the imbalance to even =2 is at least (=ff). The bound on the <lb/>final imbalance is tight in the sense that there exists a class of networks that can be locally balanced everywhere (i.e., the maximum <lb/>difference in tokens between any two neighbors is at most 2d), while the global imbalance remains ((d 2 log n)=ff). Furthermore, we show <lb/>that upon reaching a state with a global imbalance of O((d 2 log n)=ff), the time for this algorithm to locally balance the network can be <lb/>as large as (n 1=2 ). We extend our analysis to a variant of this algorithm for dynamic and asynchronous networks. We also present tight <lb/>bounds for a randomized algorithm in which each node sends at most one token in each step. <lb/></div>
		<keywords>Keywords: load balancing, distributed network algorithms. <lb/></keywords>
		<keywords type="classes">AMS subject classification: 68Q22 <lb/></keywords>
		<div type="intro">1. Introduction. A natural way to balance the workload in a distributed system is to have each work station</div>
		</front>
</text>
</tei>