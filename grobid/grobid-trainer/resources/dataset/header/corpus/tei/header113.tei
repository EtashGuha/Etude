<tei>
	<teiHeader>
	<fileDesc xml:id="114"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Interprocedural Transformations for Parallel Code Generation <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Mary W. Hall Ken Kennedy Kathryn S. M c Kinley <lb/></docAuthor></byline>
		<byline><affiliation>Department of Computer Science, Rice University,</affiliation></byline>
		<address>Houston, TX 77251-1892 <lb/></address>
		<div type="abstract">Abstract <lb/>We present a new approach that enables compiler <lb/>optimization of procedure calls and loop nests containing procedure calls. We introduce two inter-procedural transformations that move loops across procedure boundaries, exposing them to traditional optimizations on loop nests. These transformations are <lb/>incorporated into a code generation algorithm for a <lb/>shared-memory multiprocessor. The code generator relies on a machine model to estimate the expected benefits of loop parallelization and parallelism-enhancing <lb/>transformations. Several transformation strategies are <lb/>explored and one that minimizes total execution time is <lb/>selected. Efficient support of this strategy is provided <lb/>by an existing interprocedural compilation system. We <lb/>demonstrate the potential of these techniques by applying this code generation strategy to two scientific <lb/>applications programs. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>