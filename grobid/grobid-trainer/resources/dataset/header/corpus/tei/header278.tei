<tei>
	<teiHeader>
	<fileDesc xml:id="283"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Finding pattern matchings for permutations <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Louis Ibarra <lb/></docAuthor></byline>
		<byline><affiliation>Dept. of Computer Science <lb/>Hill Center, Busch Campus <lb/>Rutgers University <lb/></affiliation></byline>
		<address>Piscataway, NJ 08855 <lb/></address>
		<email>ibarra@paul.rutgers.edu <lb/></email>
		<date>January 19, 1995 <lb/></date>
		<div type="abstract">Abstract <lb/>Given a permutation P of f1; : : : ; kg and T of f1; : : : ; ng, the pattern matching problem for per <lb/>mutations is to determine whether there is a length k subsequence of T whose elements are ordered <lb/>in the same way as the elements of P . We present an O(kn 4 ) time and O(kn 3 ) space algorithm <lb/>for finding a match of P into T or determining that no match exists, given that P is separable, i.e. <lb/>contains neither (2, 4, 1, 3) nor (3, 1, 4, 2) as a subpattern. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>