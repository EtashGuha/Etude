<tei>
	<teiHeader>
	<fileDesc xml:id="577"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<byline><affiliation>Dartmouth College Computer Science </affiliation></byline><idno>Technical Report <lb/>PCSTR96-294 <lb/></idno>
		<note type="other">(Revised September 1996) <lb/></note>
		<docTitle>
			<titlePart type="main">Performing Out-of-Core FFTs on Parallel Disk Systems <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Thomas H. Cormen <lb/>David M. Nicol <lb/></docAuthor></byline>
		<byline><affiliation>Dartmouth College <lb/>Department of Computer Science <lb/></affiliation></byline>
		<div type="abstract">Abstract <lb/>The Fast Fourier Transform (FFT) plays a key role in many areas of computational science <lb/>and engineering. Although most one-dimensional FFT problems can be entirely solved entirely in <lb/>main memory, some important classes of applications require out-of-core techniques. For these, <lb/>use of parallel I/O systems can improve performance considerably. This paper shows how to <lb/>perform one-dimensional FFTs using a parallel disk system with independent disk accesses. We <lb/>present both analytical and experimental results for performing out-of-core FFTs in two ways: <lb/>using traditional virtual memory with demand paging, and using a provably asymptotically <lb/>optimal algorithm for the Parallel Disk Model (PDM) of Vitter and Shriver. When run on a <lb/>DEC 2100 server with a large memory and eight parallel disks, the optimal algorithm for the <lb/>PDM runs up to 144.7 times faster than in-core methods under demand paging. Moreover, even <lb/>including I/O costs, the normalized times for the optimal PDM algorithm are competitive, or <lb/>better than, those for in-core methods even when they run entirely in memory. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>