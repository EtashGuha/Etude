<tei>
	<teiHeader>
	<fileDesc xml:id="330"/>
	</teiHeader>
<text xml:lang="en">
		<front>
		<docTitle>
			<titlePart type="main">Implementing Parallel Shortest Paths Algorithms <lb/></titlePart>
		</docTitle>
		<byline><docAuthor>Marios Papaefthymiou <lb/></docAuthor></byline>
		<byline><affiliation>Department of Electrical Engineering and <lb/>Department of Computer Science <lb/>Yale University <lb/></affiliation></byline>
		<byline><docAuthor>Joe Rodrigue <lb/></docAuthor></byline>
		<byline><affiliation>Department of Computer Science <lb/>Yale University <lb/></affiliation></byline>
		<div type="abstract">Abstract <lb/>We have implemented a parallel version of the Bellman-Ford algorithm for the single-source shortest paths <lb/>problem. Our software has been developed on the CM-5 using C with CMMD communication primitives. <lb/>We have empirically compared the efficiency of our implementation with a sequential implementation of <lb/>the Bellman-Ford-Moore algorithm developed by Cherkassky, Goldberg and Radzik. We have performed <lb/>our experiments using fifty randomly generated graphs with vertex counts in the range between 2 10 and <lb/>2 15 and edge counts in the range between 2 11 and 2 21 . In our experiments, the parallel implementation <lb/>becomes faster than the sequential implementation when the average degree of the input graphs exceeds <lb/>2 5 or 2 6 . For the dense graphs in our test suite, we obtain speedups of up to 3.3 on 32 processors and up <lb/>to 8.3 on 128 processors. <lb/>In the implementation we discuss in this paper, several design decisions were taken in view of the limited <lb/>time we had to complete a working version of our software. For example, instead of performing any kind <lb/>of dynamic load balancing, we try to keep the computation load balanced by applying a straightforward <lb/>data distribution scheme at the beginning of the computation. Moreover, in the code that runs on <lb/>each processor, we avoid any sophisticated data structures and only use linear arrays. We are currently <lb/>experimenting with alternative implementations that may lead to improved speedups, particularly on the <lb/>denser graphs of our test suite. <lb/></div>
		<div type="intro">1 Introduction</div>
		</front>
</text>
</tei>