# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := hummus
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=hummus' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/etashguha/.electron-gyp/4.1.4/include/node \
	-I/Users/etashguha/.electron-gyp/4.1.4/src \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/openssl/config \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/openssl/openssl/include \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/uv/include \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/zlib \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/src/deps/PDFWriter \
	-I$(srcdir)/src/deps/FreeType/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=hummus' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/etashguha/.electron-gyp/4.1.4/include/node \
	-I/Users/etashguha/.electron-gyp/4.1.4/src \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/openssl/config \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/openssl/openssl/include \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/uv/include \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/zlib \
	-I/Users/etashguha/.electron-gyp/4.1.4/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/src/deps/PDFWriter \
	-I$(srcdir)/src/deps/FreeType/include

OBJS := \
	$(obj).target/$(TARGET)/src/ConstructorsHolder.o \
	$(obj).target/$(TARGET)/src/PDFStreamDriver.o \
	$(obj).target/$(TARGET)/src/DictionaryContextDriver.o \
	$(obj).target/$(TARGET)/src/PDFTextStringDriver.o \
	$(obj).target/$(TARGET)/src/PDFDateDriver.o \
	$(obj).target/$(TARGET)/src/PDFArrayDriver.o \
	$(obj).target/$(TARGET)/src/PDFDictionaryDriver.o \
	$(obj).target/$(TARGET)/src/PDFStreamInputDriver.o \
	$(obj).target/$(TARGET)/src/PDFIndirectObjectReferenceDriver.o \
	$(obj).target/$(TARGET)/src/PDFBooleanDriver.o \
	$(obj).target/$(TARGET)/src/PDFLiteralStringDriver.o \
	$(obj).target/$(TARGET)/src/PDFHexStringDriver.o \
	$(obj).target/$(TARGET)/src/PDFNullDriver.o \
	$(obj).target/$(TARGET)/src/PDFNameDriver.o \
	$(obj).target/$(TARGET)/src/PDFIntegerDriver.o \
	$(obj).target/$(TARGET)/src/PDFRealDriver.o \
	$(obj).target/$(TARGET)/src/PDFSymbolDriver.o \
	$(obj).target/$(TARGET)/src/PDFObjectDriver.o \
	$(obj).target/$(TARGET)/src/PDFReaderDriver.o \
	$(obj).target/$(TARGET)/src/DocumentCopyingContextDriver.o \
	$(obj).target/$(TARGET)/src/ObjectsContextDriver.o \
	$(obj).target/$(TARGET)/src/DocumentContextDriver.o \
	$(obj).target/$(TARGET)/src/ImageXObjectDriver.o \
	$(obj).target/$(TARGET)/src/UsedFontDriver.o \
	$(obj).target/$(TARGET)/src/ResourcesDictionaryDriver.o \
	$(obj).target/$(TARGET)/src/XObjectContentContextDriver.o \
	$(obj).target/$(TARGET)/src/FormXObjectDriver.o \
	$(obj).target/$(TARGET)/src/AbstractContentContextDriver.o \
	$(obj).target/$(TARGET)/src/PageContentContextDriver.o \
	$(obj).target/$(TARGET)/src/PDFPageDriver.o \
	$(obj).target/$(TARGET)/src/PDFPageModifierDriver.o \
	$(obj).target/$(TARGET)/src/PDFWriterDriver.o \
	$(obj).target/$(TARGET)/src/PDFPageInputDriver.o \
	$(obj).target/$(TARGET)/src/InputFileDriver.o \
	$(obj).target/$(TARGET)/src/OutputFileDriver.o \
	$(obj).target/$(TARGET)/src/InfoDictionaryDriver.o \
	$(obj).target/$(TARGET)/src/ByteReaderDriver.o \
	$(obj).target/$(TARGET)/src/ByteReaderWithPositionDriver.o \
	$(obj).target/$(TARGET)/src/ByteWriterDriver.o \
	$(obj).target/$(TARGET)/src/ByteWriterWithPositionDriver.o \
	$(obj).target/$(TARGET)/src/ObjectByteReader.o \
	$(obj).target/$(TARGET)/src/ObjectByteReaderWithPosition.o \
	$(obj).target/$(TARGET)/src/ObjectByteWriter.o \
	$(obj).target/$(TARGET)/src/ObjectByteWriterWithPosition.o \
	$(obj).target/$(TARGET)/src/PDFObjectParserDriver.o \
	$(obj).target/$(TARGET)/src/hummus.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/pdfwriter.a $(builddir)/aesgm.a $(builddir)/freetype.a $(builddir)/jpeg.a $(builddir)/zlib.a $(builddir)/tiff.a $(builddir)/png.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS :=

$(builddir)/hummus.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/hummus.node: LIBS := $(LIBS)
$(builddir)/hummus.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/hummus.node: TOOLSET := $(TOOLSET)
$(builddir)/hummus.node: $(OBJS) $(builddir)/pdfwriter.a $(builddir)/aesgm.a $(builddir)/freetype.a $(builddir)/jpeg.a $(builddir)/zlib.a $(builddir)/tiff.a $(builddir)/png.a FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/hummus.node
# Add target alias
.PHONY: hummus
hummus: $(builddir)/hummus.node

# Short alias for building this executable.
.PHONY: hummus.node
hummus.node: $(builddir)/hummus.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/hummus.node

