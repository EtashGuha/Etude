Notebook[
 {
  Cell[
   "PositionLargest",
   "Title",
   CellTags -> {"Title", "TabNext"},
   CellID -> 607032701
  ],
  Cell[
   "The position of the largest elements in a list",
   "Text",
   CellTags -> {"Description", "TabNext"},
   CellID -> 591011394
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Definition",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Definition",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Define your function using the name above. All definitions, including dependencies, will be included in the resource function when it is generated. Additional cells can be added and definitions can be given for multiple input cases.\n\nThis section should be evaluated before evaluating creating the Examples section below.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoDefinition"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Section",
      Deletable -> False,
      DefaultNewCellStyle -> "Input",
      CellTags -> "Definition",
      CellID -> 608264297
     ],
     Cell[
      BoxData[
       RowBox[
        {
         RowBox[
          {
           RowBox[{"PositionLargest", "[", "list_List", "]"}],
           "/;",
           RowBox[
            {"AllTrue", "[", RowBox[{"list", ",", "NumericQ"}], "]"}
           ]
          }
         ],
         ":=",
         RowBox[
          {
           "First",
           "[",
           RowBox[
            {
             "FirstPosition",
             "[",
             RowBox[{"list", ",", RowBox[{"Max", "[", "list", "]"}]}],
             "]"
            }
           ],
           "]"
          }
         ]
        }
       ]
      ],
      "Input",
      CellTags -> "TabNext",
      CellID -> 52350700
     ],
     Cell[
      BoxData[
       RowBox[
        {
         RowBox[
          {
           RowBox[
            {
             "PositionLargest",
             "[",
             RowBox[
              {
               "list_List",
               ",",
               RowBox[
                {
                 "n",
                 ":",
                 RowBox[
                  {
                   "(",
                   RowBox[
                    {
                     "_Integer",
                     "|",
                     RowBox[
                      {
                       RowBox[{"HoldPattern", "[", "UpTo", "]"}],
                       "[",
                       "_Integer",
                       "]"
                      }
                     ]
                    }
                   ],
                   ")"
                  }
                 ]
                }
               ]
              }
             ],
             "]"
            }
           ],
           "/;",
           RowBox[
            {"AllTrue", "[", RowBox[{"list", ",", "NumericQ"}], "]"}
           ]
          }
         ],
         ":=",
         RowBox[
          {
           "Take",
           "[",
           RowBox[
            {
             RowBox[
              {
               "Flatten",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   RowBox[{"Position", "[", RowBox[{"list", ",", "#"}], "]"}],
                   "&"
                  }
                 ],
                 "/@",
                 RowBox[
                  {
                   "DeleteDuplicates",
                   "[",
                   RowBox[
                    {"TakeLargest", "[", RowBox[{"list", ",", "n"}], "]"}
                   ],
                   "]"
                  }
                 ]
                }
               ],
               "]"
              }
             ],
             ",",
             "n"
            }
           ],
           "]"
          }
         ]
        }
       ]
      ],
      "Input",
      CellID -> 138327819
     ]
    },
    Open
   ]
  ],
  Cell[
   "Documentation",
   "Section",
   Deletable -> False,
   CellTags -> "Documentation",
   CellID -> 855965831
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Usage",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Usage",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Document every accepted input usage case. Use Enter to create new cases as needed.\n\nEach usage should contain a brief explanation saying what the function does for the given input structure.\n\nSee existing documentation pages for examples.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoUsage"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Subsection",
      Deletable -> False,
      DefaultNewCellStyle -> "UsageInputs",
      CellTags -> "Usage",
      CellID -> 694807545
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {"PositionLargest", "[", StyleBox["list", "TI"], "]"}
          ]
         ],
         "UsageInputs",
         CellID -> 168670966
        ],
        Cell[
         TextData[
          {
           "gives the position of the first element that has the largest value in ",
           Cell[
            BoxData[StyleBox["list", "TI"]],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           "."
          }
         ],
         "UsageDescription",
         CellID -> 787114373
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          RowBox[
           {
            "PositionLargest",
            "[",
            RowBox[{StyleBox["list", "TI"], ",", StyleBox["n", "TI"]}],
            "]"
           }
          ]
         ],
         "UsageInputs",
         CellID -> 165436870
        ],
        Cell[
         TextData[
          {
           "gives the positions of the first ",
           Cell[
            BoxData[StyleBox["n", "TI"]],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " largest values."
          }
         ],
         "UsageDescription",
         CellID -> 915704355
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Details & Options",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Details & Options",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Give a detailed explanation of how the function is used. Add multiple cells including tables and hyperlinks as needed. Typical information includes: acceptable inputs, result formats, options specifications, and background information.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoDetailsOptions"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Subsection",
      Deletable -> False,
      DefaultNewCellStyle -> "Notes",
      CellTags -> "Details & Options",
      CellID -> 29639701
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "All elements of ",
           Cell[
            BoxData[StyleBox["list", "TI"]],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " must be numeric."
          }
         ],
         "Notes",
         CellID -> 173867316
        ],
        Cell[
         TextData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "PositionLargest",
               "[",
               RowBox[
                {
                 StyleBox["list", "TI"],
                 ",",
                 RowBox[
                  {
                   TagBox[
                    ButtonBox[
                     StyleBox[
                      "UpTo",
                      "SymbolsRefLink",
                      ShowStringCharacters -> True,
                      FontFamily -> "Source Sans Pro"
                     ],
                     BaseStyle -> Dynamic[
                      FEPrivate`If[
                       CurrentValue["MouseOver"],
                       {
                        "Link",
                        FontColor -> RGBColor[0.854902, 0.396078, 0.145098]
                       },
                       {"Link"}
                      ]
                     ],
                     ButtonData -> "paclet:ref/UpTo"
                    ],
                    MouseAppearanceTag["LinkHand"]
                   ],
                   "[",
                   StyleBox["n", "TI"],
                   "]"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " is supported."
          }
         ],
         "Notes",
         CellID -> 736243998
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Examples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Demonstrate how to use the function. Examples should start with the most basic use case. Each example should be described using text cells. Use \"Subsection\" and \"Subsubsection\" cells to group examples as needed.\n\nSee existing documentation pages for examples.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoExamples"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Section",
      Deletable -> False,
      CellTags -> "Examples",
      CellID -> 224042445
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Basic Examples",
         "Subsection",
         CellLabel -> "In[1]:=",
         CellID -> 644364796
        ],
        Cell[
         "Find the position of the largest element in a list:",
         "Text",
         CellID -> 935217348
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "PositionLargest",
               "[",
               RowBox[
                {
                 "{",
                 RowBox[
                  {"100", ",", "200", ",", "100", ",", "200", ",", "50"}
                 ],
                 "}"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 942942336
           ],
           Cell[
            BoxData["2"],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 344312334
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "",
            "PageBreak",
            PageBreakBelow -> True,
            CellID -> 624876871
           ],
           Cell[
            "Specify a number of positions to get in a list:",
            "Text",
            CellID -> 390827642
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "PositionLargest",
                  "[",
                  RowBox[
                   {
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {"100", ",", "200", ",", "100", ",", "200", ",", "50"}
                      ],
                      "}"
                     }
                    ],
                    ",",
                    "1"
                   }
                  ],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[1]:=",
               CellID -> 441827423
              ],
              Cell[
               BoxData[RowBox[{"{", "2", "}"}]],
               "Output",
               CellLabel -> "Out[1]=",
               CellID -> 394719176
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "",
            "PageBreak",
            PageBreakBelow -> True,
            CellID -> 624876872
           ],
           Cell[
            "Find the positions of the three largest elements in order:",
            "Text",
            CellID -> 627814721
           ],
           Cell[
            CellGroupData[
             {
              Cell[
               BoxData[
                RowBox[
                 {
                  "PositionLargest",
                  "[",
                  RowBox[
                   {
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {"100", ",", "200", ",", "100", ",", "200", ",", "50"}
                      ],
                      "}"
                     }
                    ],
                    ",",
                    "3"
                   }
                  ],
                  "]"
                 }
                ]
               ],
               "Input",
               CellLabel -> "In[1]:=",
               CellID -> 596691370
              ],
              Cell[
               BoxData[
                RowBox[{"{", RowBox[{"2", ",", "4", ",", "1"}], "}"}]
               ],
               "Output",
               CellLabel -> "Out[1]=",
               CellID -> 701759460
              ]
             },
             Open
            ]
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Scope",
         "Subsection",
         CellLabel -> "In[2]:=",
         CellID -> 623932659
        ],
        Cell[
         TextData[
          {
           "Use ",
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
                "UpTo",
                "SymbolsRefLink",
                ShowStringCharacters -> True,
                FontFamily -> "Source Sans Pro"
               ],
               BaseStyle -> Dynamic[
                FEPrivate`If[
                 CurrentValue["MouseOver"],
                 {
                  "Link",
                  FontColor -> RGBColor[0.854902, 0.396078, 0.145098]
                 },
                 {"Link"}
                ]
               ],
               ButtonData -> "paclet:ref/UpTo"
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            ],
            "InlineFormula",
            FontFamily -> "Source Sans Pro"
           ],
           " to find the position of the two largest moons orbiting each planet:"
          }
         ],
         "Text",
         CellID -> 972309873
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "moons",
               "=",
               RowBox[
                {
                 "Values",
                 "/@",
                 RowBox[
                  {
                   RowBox[
                    {
                     "ResourceData",
                     "[",
                     "\"Sample Data: Solar System Planets and Moons\"",
                     "]"
                    }
                   ],
                   "[",
                   RowBox[
                    {
                     "All",
                     ",",
                     "\"Moons\"",
                     ",",
                     RowBox[{"QuantityMagnitude", "/*", "DeleteMissing"}],
                     ",",
                     "\"Mass\""
                    }
                   ],
                   "]"
                  }
                 ]
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 950414306
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               TagBox[
                DynamicModuleBox[
                 {
                  TypeSystem`NestedGrid`PackagePrivate`$state$$ = Data`UnorderedAssociation[
                   "RowCount" -> 8,
                   "Length" -> 8,
                   "InitialType" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Vector[
                     TypeSystem`Atom[Real],
                     TypeSystem`AnyLength
                    ],
                    8
                   ],
                   "Shape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                     TypeSystem`PackageScope`KeyValueShape[
                      TypeSystem`PackageScope`AtomShape[67.20000000000002],
                      TypeSystem`PackageScope`UnknownShape
                     ]
                    ],
                    8,
                    { }
                   ],
                   "InitialData" -> TypeSystem`PackageScope`CacheHandle[862884463],
                   "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Vector[
                     TypeSystem`Atom[Real],
                     TypeSystem`AnyLength
                    ],
                    8
                   ],
                   "HandleQ" -> True,
                   "RowTarget" -> 20,
                   "Data" -> TypeSystem`PackageScope`CacheHandle[862884463]
                  ],
                  TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1,
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$ = DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                     Style[
                      Grid[
                       {
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Mercury",
                               Style[
                                "Mercury",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Mercury"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Mercury"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         { }
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Venus",
                               Style[
                                "Venus",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Venus"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Venus"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         { }
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Earth",
                               Style[
                                "Earth",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Earth"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Earth"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[
                               {7.3459006322855173653772`4.995678626217362*^22},
                               ShowStringCharacters -> False
                              ],
                              Style[
                               Style[
                                {7.3459006322855173653772`4.995678626217362*^22},
                                ShowStringCharacters -> False
                               ],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                             {Key["Earth"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                            GeneralUtilities`Slice[Key["Earth"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Mars",
                               Style[
                                "Mars",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Mars"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Mars"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[
                               {
                                1.468340774924336`1.9995659225206786*^15,
                                1.0724880884600402`3.9586073148417724*^16
                               },
                               ShowStringCharacters -> False
                              ],
                              Style[
                               Style[
                                {
                                 1.468340774924336`1.9995659225206786*^15,
                                 1.0724880884600402`3.9586073148417724*^16
                                },
                                ShowStringCharacters -> False
                               ],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                             {Key["Mars"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                            GeneralUtilities`Slice[Key["Mars"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Jupiter",
                               Style[
                                "Jupiter",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Jupiter"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Jupiter"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Row[{"  { ", Subscript["\[Ellipsis]", 42], " }  "}],
                              Style[
                               Row[{"  { ", Subscript["\[Ellipsis]", 42], " }  "}],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                             {Key["Jupiter"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                            GeneralUtilities`Slice[Key["Jupiter"]]
                           ],
                           "Mouse"
                          ],
                          BaseStyle -> {GrayLevel[0.5]}
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Saturn",
                               Style[
                                "Saturn",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Saturn"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Saturn"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Row[{"  { ", Subscript["\[Ellipsis]", 33], " }  "}],
                              Style[
                               Row[{"  { ", Subscript["\[Ellipsis]", 33], " }  "}],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                             {Key["Saturn"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                            GeneralUtilities`Slice[Key["Saturn"]]
                           ],
                           "Mouse"
                          ],
                          BaseStyle -> {GrayLevel[0.5]}
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Uranus",
                               Style[
                                "Uranus",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Uranus"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Uranus"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Row[{"  { ", Subscript["\[Ellipsis]", 21], " }  "}],
                              Style[
                               Row[{"  { ", Subscript["\[Ellipsis]", 21], " }  "}],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                             {Key["Uranus"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                            GeneralUtilities`Slice[Key["Uranus"]]
                           ],
                           "Mouse"
                          ],
                          BaseStyle -> {GrayLevel[0.5]}
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Neptune",
                               Style[
                                "Neptune",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                              {Key["Neptune"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                             GeneralUtilities`Slice[Key["Neptune"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{67.20000000000002, Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Row[{"  { ", Subscript["\[Ellipsis]", 9], " }  "}],
                              Style[
                               Row[{"  { ", Subscript["\[Ellipsis]", 9], " }  "}],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                             {Key["Neptune"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                            GeneralUtilities`Slice[Key["Neptune"]]
                           ],
                           "Mouse"
                          ],
                          BaseStyle -> {GrayLevel[0.5]}
                         ]
                        }
                       },
                       BaseStyle -> {
                        ContextMenu -> {
                         MenuItem[
                          "Copy position to clipboard",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                            TypeSystem`NestedGrid`PackagePrivate`copyClip
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ],
                         MenuItem[
                          "Copy data to clipboard",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                            TypeSystem`NestedGrid`PackagePrivate`$state$$,
                            TypeSystem`NestedGrid`PackagePrivate`copyClip
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ],
                         Delimiter,
                         MenuItem[
                          "Paste position in new cell",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                            TypeSystem`NestedGrid`PackagePrivate`cellPaste
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ],
                         MenuItem[
                          "Paste data in new cell",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                            TypeSystem`NestedGrid`PackagePrivate`$state$$,
                            TypeSystem`NestedGrid`PackagePrivate`cellPaste
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ]
                        },
                        FontFamily -> "Verdana",
                        FontSize -> 12
                       },
                       Alignment -> Left,
                       RowMinHeight -> 1.5,
                       Dividers -> All,
                       FrameStyle -> GrayLevel[0.85],
                       BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}
                      ],
                      LineBreakWithin -> False,
                      ContextMenu -> { },
                      NumberMarks -> False,
                      ShowAutoStyles -> False
                     ]
                    ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True,
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                         TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]
                        ]
                       },
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[ SameQ[
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$,
                        TypeSystem`NestedGrid`PackagePrivate`$NotCached
                       ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                        TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1824496670][
                         TypeSystem`NestedGrid`PackagePrivate`tmpData$
                        ]
                       ];
                       If[ Not[
                        FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                       ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                       Null
                      ]
                     ];
                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$pos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      If[ GeneralUtilities`$DebugMode,
                       Row[
                        {
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         "  ",
                         TypeSystem`NestedGrid`PackagePrivate`formatState[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$,
                          TypeSystem`NestedGrid`PackagePrivate`$path$$,
                          TypeSystem`NestedGrid`PackagePrivate`$pos$$
                         ]
                        }
                       ],
                       TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                      ]
                     ]
                    ],
                    TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}
                   ],
                   DynamicModuleValues :> { }
                  ],
                  TypeSystem`NestedGrid`PackagePrivate`$posCell$$,
                  TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                     TypeSystem`PackageScope`Pathbar[
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`updateState[
                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                       TypeSystem`NestedGrid`PackagePrivate`$pos$$,
                       TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                       1824496670
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                  TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                   Dynamic[
                    Replace[
                     MouseAnnotation[Null],
                     {
                      TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                       Null
                      ] -> "",
                      TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1824496670][
                       Pattern[TypeSystem`NestedGrid`PackagePrivate`path, Blank[]]
                      ] :> (TypeSystem`NestedGrid`PackagePrivate`$lastPath = TypeSystem`NestedGrid`PackagePrivate`path;
                      TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                       TypeSystem`NestedGrid`PackagePrivate`path,
                       TypeSystem`NestedGrid`PackagePrivate`makePathElements
                      ]),
                      Null :> Spacer[10],
                      _ :> Spacer[10]
                     }
                    ],
                    TrackedSymbols :> { }
                   ],
                   FrameStyle -> None,
                   ImageMargins -> 0,
                   FrameMargins -> 0,
                   Alignment -> Top,
                   ImageSize -> {Automatic, 14}
                  ]
                 },
                 DynamicBox[
                  ToBoxes[
                   Column[
                    If[ TypeSystem`NestedGrid`PackagePrivate`$path$$ == {},
                     {
                      TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                       TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                       TypeSystem`NestedGrid`PackagePrivate`$pos$$
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                       TypeSystem`NestedGrid`PackagePrivate`alignBar[TypeSystem`NestedGrid`PackagePrivate`$state$$][
                        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$
                       ]
                      ]
                     },
                     {
                      TypeSystem`NestedGrid`PackagePrivate`$topBar$$,
                      TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                       TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                       TypeSystem`NestedGrid`PackagePrivate`$pos$$
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                       TypeSystem`NestedGrid`PackagePrivate`alignBar[TypeSystem`NestedGrid`PackagePrivate`$state$$][
                        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$
                       ]
                      ]
                     }
                    ],
                    Spacings -> If[ TypeSystem`NestedGrid`PackagePrivate`$path$$ == {},
                     0,
                     {{}, {0, 0.05, 0}}
                    ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {328., {154., 163.}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 BaseStyle -> {LineBreakWithin -> False},
                 Deinitialization :> TypeSystem`NestedGrid`PackagePrivate`deleteState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                 ],
                 DynamicModuleValues :> { },
                 Initialization :> Block[{$ContextPath = $ContextPath},
                  Needs["TypeSystem`"]
                 ]
                ],
                Deploy,
                DefaultBaseStyle -> "Deploy"
               ]
              },
              "CopyTag",
              DisplayFunction -> (#1 &),
              InterpretationFunction -> ("Dataset[<>]" &)
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 35353316
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               RowBox[
                {
                 RowBox[
                  {
                   "PositionLargest",
                   "[",
                   RowBox[{"#", ",", RowBox[{"UpTo", "[", "2", "]"}]}],
                   "]"
                  }
                 ],
                 "&"
                }
               ],
               "/@",
               "moons"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 541766826
           ],
           Cell[
            BoxData[
             TemplateBox[
              {
               TagBox[
                DynamicModuleBox[
                 {
                  TypeSystem`NestedGrid`PackagePrivate`$state$$ = Data`UnorderedAssociation[
                   "RowCount" -> 8,
                   "Length" -> 8,
                   "InitialType" -> TypeSystem`Assoc[
                    TypeSystem`Atom[
                     TypeSystem`Enumeration[
                      "Earth",
                      "Jupiter",
                      "Mars",
                      "Mercury",
                      "Neptune",
                      "Saturn",
                      "Uranus",
                      "Venus"
                     ]
                    ],
                    TypeSystem`Vector[
                     TypeSystem`Atom[Integer],
                     TypeSystem`AnyLength
                    ],
                    8
                   ],
                   "Shape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                     TypeSystem`PackageScope`KeyValueShape[
                      TypeSystem`PackageScope`AtomShape[63.],
                      TypeSystem`PackageScope`UnknownShape
                     ]
                    ],
                    8,
                    { }
                   ],
                   "InitialData" -> TypeSystem`PackageScope`CacheHandle[417114698],
                   "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[
                     TypeSystem`Enumeration[
                      "Earth",
                      "Jupiter",
                      "Mars",
                      "Mercury",
                      "Neptune",
                      "Saturn",
                      "Uranus",
                      "Venus"
                     ]
                    ],
                    TypeSystem`Vector[
                     TypeSystem`Atom[Integer],
                     TypeSystem`AnyLength
                    ],
                    8
                   ],
                   "HandleQ" -> True,
                   "RowTarget" -> 20,
                   "Data" -> TypeSystem`PackageScope`CacheHandle[417114698]
                  ],
                  TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1,
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$ = DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                     Style[
                      Grid[
                       {
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Mercury",
                               Style[
                                "Mercury",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Mercury"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Mercury"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         { }
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Venus",
                               Style[
                                "Venus",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Venus"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Venus"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         { }
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Earth",
                               Style[
                                "Earth",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Earth"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Earth"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[{1}, ShowStringCharacters -> False],
                              Style[
                               Style[{1}, ShowStringCharacters -> False],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                             {Key["Earth"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                            GeneralUtilities`Slice[Key["Earth"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Mars",
                               Style[
                                "Mars",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Mars"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Mars"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[{2, 1}, ShowStringCharacters -> False],
                              Style[
                               Style[{2, 1}, ShowStringCharacters -> False],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                             {Key["Mars"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                            GeneralUtilities`Slice[Key["Mars"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Jupiter",
                               Style[
                                "Jupiter",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Jupiter"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Jupiter"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[{16, 7}, ShowStringCharacters -> False],
                              Style[
                               Style[{16, 7}, ShowStringCharacters -> False],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                             {Key["Jupiter"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                            GeneralUtilities`Slice[Key["Jupiter"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Saturn",
                               Style[
                                "Saturn",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Saturn"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Saturn"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[{32, 23}, ShowStringCharacters -> False],
                              Style[
                               Style[{32, 23}, ShowStringCharacters -> False],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                             {Key["Saturn"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                            GeneralUtilities`Slice[Key["Saturn"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Uranus",
                               Style[
                                "Uranus",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Uranus"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Uranus"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[{19, 10}, ShowStringCharacters -> False],
                              Style[
                               Style[{19, 10}, ShowStringCharacters -> False],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                             {Key["Uranus"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                            GeneralUtilities`Slice[Key["Uranus"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        },
                        {
                         Item[
                          Pane[
                           Annotation[
                            EventHandler[
                             MouseAppearance[
                              Mouseover[
                               "Neptune",
                               Style[
                                "Neptune",
                                FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                               ]
                              ],
                              "LinkHand"
                             ],
                             {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                              {Key["Neptune"]}
                             ]
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                             GeneralUtilities`Slice[Key["Neptune"]]
                            ],
                            "Mouse"
                           ],
                           ImageSize -> {{63., Full}, Automatic}
                          ],
                          Background -> GrayLevel[0.95],
                          Alignment -> {Left, Baseline}
                         ],
                         Item[
                          Annotation[
                           EventHandler[
                            MouseAppearance[
                             Mouseover[
                              Style[{9, 6}, ShowStringCharacters -> False],
                              Style[
                               Style[{9, 6}, ShowStringCharacters -> False],
                               FontColor -> RGBColor[0.27451, 0.537255, 0.792157]
                              ]
                             ],
                             "LinkHand"
                            ],
                            {"MouseClicked", 1} :> TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                             {Key["Neptune"]}
                            ]
                           ],
                           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                            GeneralUtilities`Slice[Key["Neptune"]]
                           ],
                           "Mouse"
                          ]
                         ]
                        }
                       },
                       BaseStyle -> {
                        ContextMenu -> {
                         MenuItem[
                          "Copy position to clipboard",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                            TypeSystem`NestedGrid`PackagePrivate`copyClip
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ],
                         MenuItem[
                          "Copy data to clipboard",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                            TypeSystem`NestedGrid`PackagePrivate`$state$$,
                            TypeSystem`NestedGrid`PackagePrivate`copyClip
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ],
                         Delimiter,
                         MenuItem[
                          "Paste position in new cell",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                            TypeSystem`NestedGrid`PackagePrivate`cellPaste
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ],
                         MenuItem[
                          "Paste data in new cell",
                          KernelExecute[
                           TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                            TypeSystem`NestedGrid`PackagePrivate`$state$$,
                            TypeSystem`NestedGrid`PackagePrivate`cellPaste
                           ]
                          ],
                          MenuEvaluator -> Automatic
                         ]
                        },
                        FontFamily -> "Verdana",
                        FontSize -> 12
                       },
                       Alignment -> Left,
                       RowMinHeight -> 1.5,
                       Dividers -> All,
                       FrameStyle -> GrayLevel[0.85],
                       BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}
                      ],
                      LineBreakWithin -> False,
                      ContextMenu -> { },
                      NumberMarks -> False,
                      ShowAutoStyles -> False
                     ]
                    ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True,
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                         TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]
                        ]
                       },
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[ SameQ[
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$,
                        TypeSystem`NestedGrid`PackagePrivate`$NotCached
                       ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                        TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$pos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, 636340120][
                         TypeSystem`NestedGrid`PackagePrivate`tmpData$
                        ]
                       ];
                       If[ Not[
                        FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                       ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                       Null
                      ]
                     ];
                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$pos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      If[ GeneralUtilities`$DebugMode,
                       Row[
                        {
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         "  ",
                         TypeSystem`NestedGrid`PackagePrivate`formatState[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$,
                          TypeSystem`NestedGrid`PackagePrivate`$path$$,
                          TypeSystem`NestedGrid`PackagePrivate`$pos$$
                         ]
                        }
                       ],
                       TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                      ]
                     ]
                    ],
                    TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}
                   ],
                   DynamicModuleValues :> { }
                  ],
                  TypeSystem`NestedGrid`PackagePrivate`$posCell$$,
                  TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                     TypeSystem`PackageScope`Pathbar[
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`updateState[
                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                       TypeSystem`NestedGrid`PackagePrivate`$path$$,
                       TypeSystem`NestedGrid`PackagePrivate`$pos$$,
                       TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                       636340120
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                  TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                   Dynamic[
                    Replace[
                     MouseAnnotation[Null],
                     {
                      TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                       Null
                      ] -> "",
                      TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[636340120][
                       Pattern[TypeSystem`NestedGrid`PackagePrivate`path, Blank[]]
                      ] :> (TypeSystem`NestedGrid`PackagePrivate`$lastPath = TypeSystem`NestedGrid`PackagePrivate`path;
                      TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                       TypeSystem`NestedGrid`PackagePrivate`path,
                       TypeSystem`NestedGrid`PackagePrivate`makePathElements
                      ]),
                      Null :> Spacer[10],
                      _ :> Spacer[10]
                     }
                    ],
                    TrackedSymbols :> { }
                   ],
                   FrameStyle -> None,
                   ImageMargins -> 0,
                   FrameMargins -> 0,
                   Alignment -> Top,
                   ImageSize -> {Automatic, 14}
                  ]
                 },
                 DynamicBox[
                  ToBoxes[
                   Column[
                    If[ TypeSystem`NestedGrid`PackagePrivate`$path$$ == {},
                     {
                      TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                       TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                       TypeSystem`NestedGrid`PackagePrivate`$pos$$
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                       TypeSystem`NestedGrid`PackagePrivate`alignBar[TypeSystem`NestedGrid`PackagePrivate`$state$$][
                        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$
                       ]
                      ]
                     },
                     {
                      TypeSystem`NestedGrid`PackagePrivate`$topBar$$,
                      TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                       TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                       TypeSystem`NestedGrid`PackagePrivate`$state$$,
                       TypeSystem`NestedGrid`PackagePrivate`$pos$$
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                       TypeSystem`NestedGrid`PackagePrivate`alignBar[TypeSystem`NestedGrid`PackagePrivate`$state$$][
                        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$
                       ]
                      ]
                     }
                    ],
                    Spacings -> If[ TypeSystem`NestedGrid`PackagePrivate`$path$$ == {},
                     0,
                     {{}, {0, 0.05, 0}}
                    ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {176., {153., 162.}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 BaseStyle -> {LineBreakWithin -> False},
                 Deinitialization :> TypeSystem`NestedGrid`PackagePrivate`deleteState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                 ],
                 DynamicModuleValues :> { },
                 Initialization :> Block[{$ContextPath = $ContextPath},
                  Needs["TypeSystem`"]
                 ]
                ],
                Deploy,
                DefaultBaseStyle -> "Deploy"
               ]
              },
              "CopyTag",
              DisplayFunction -> (#1 &),
              InterpretationFunction -> ("Dataset[<>]" &)
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 865737986
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Source & Additional Information",
      "Section",
      Deletable -> False,
      CellTags -> "Source & Additional Information",
      CellID -> 318391102
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Contributed By",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Contributed By",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Name of the person, people or organization that should be publicly credited with contributing the function.",
                   "MoreInfoText"
                  ],
                  Background -> GrayLevel[0.95],
                  FrameMargins -> 20,
                  FrameStyle -> GrayLevel[0.9],
                  RoundingRadius -> 5
                 ]
                ],
                "MoreInfoText",
                Deletable -> True,
                CellTags -> {"SectionMoreInfoContributedBy"},
                CellMargins -> {{66, 66}, {15, 15}}
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "Subsection",
         Deletable -> False,
         DefaultNewCellStyle -> "Text",
         CellTags -> "Contributed By",
         CellID -> 757508554
        ],
        Cell[
         "Stephen Wolfram",
         "Text",
         CellTags -> "TabNext",
         CellID -> 982241000
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Keywords",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Keywords",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "List relevant terms that should be used to include this resource in search results.",
                   "MoreInfoText"
                  ],
                  Background -> GrayLevel[0.95],
                  FrameMargins -> 20,
                  FrameStyle -> GrayLevel[0.9],
                  RoundingRadius -> 5
                 ]
                ],
                "MoreInfoText",
                Deletable -> True,
                CellTags -> {"SectionMoreInfoKeywords"},
                CellMargins -> {{66, 66}, {15, 15}}
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "Subsection",
         Deletable -> False,
         DefaultNewCellStyle -> "Item",
         CellTags -> "Keywords",
         CellID -> 246422893
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            "Position",
            "Item",
            CellTags -> "TabNext",
            CellID -> 122838079
           ],
           Cell["Largest", "Item", CellID -> 663278115],
           Cell["Find", "Item", CellID -> 864674510],
           Cell["Locate", "Item", CellID -> 331294703],
           Cell["Max", "Item", CellID -> 513872779],
           Cell["Index", "Item", CellID -> 199608072]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Related Symbols",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Related Symbols",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "List related Wolfram Language symbols. Include up to twenty documented, system-level symbols.",
                   "MoreInfoText"
                  ],
                  Background -> GrayLevel[0.95],
                  FrameMargins -> 20,
                  FrameStyle -> GrayLevel[0.9],
                  RoundingRadius -> 5
                 ]
                ],
                "MoreInfoText",
                Deletable -> True,
                CellTags -> {"SectionMoreInfoRelatedSymbols"},
                CellMargins -> {{66, 66}, {15, 15}}
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "Subsection",
         Deletable -> False,
         DefaultNewCellStyle -> "Item",
         CellTags -> "Related Symbols",
         CellID -> 911170439
        ],
        Cell[
         CellGroupData[
          {
           Cell["Position", "Item", CellID -> 452023058],
           Cell["FirstPosition", "Item", CellID -> 844045712],
           Cell["PositionIndex", "Item", CellID -> 928795946],
           Cell["TakeLargest", "Item", CellID -> 852462482],
           Cell["TakeLargestBy", "Item", CellID -> 764861830]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Related Resource Objects",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Related Resource Objects",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Names of published resource objects from any Wolfram repository that are related to this resource.",
                   "MoreInfoText"
                  ],
                  Background -> GrayLevel[0.95],
                  FrameMargins -> 20,
                  FrameStyle -> GrayLevel[0.9],
                  RoundingRadius -> 5
                 ]
                ],
                "MoreInfoText",
                Deletable -> True,
                CellTags -> {"SectionMoreInfoRelatedResourceObjects"},
                CellMargins -> {{66, 66}, {15, 15}}
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "Subsection",
         Deletable -> False,
         DefaultNewCellStyle -> "Item",
         CellTags -> "Related Resource Objects",
         CellID -> 217060377
        ],
        Cell[
         "PositionLargestBy",
         "Item",
         CellTags -> "TabNext",
         CellID -> 107409501
        ]
       },
       Open
      ]
     ],
     Cell[
      TextData[
       {
        "Source/Reference Citation",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Source/Reference Citation",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Citation for original source of the function or its components. For example, original publication of an algorithm or public code repository.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoSourceReferenceCitation"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Subsection",
      Deletable -> False,
      DefaultNewCellStyle -> "Text",
      CellTags -> "Source/Reference Citation",
      CellID -> 967310595
     ],
     Cell[
      TextData[
       {
        "Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Links",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "URLs or hyperlinks for external information related to the function.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoLinks"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Subsection",
      Deletable -> False,
      DefaultNewCellStyle -> "Item",
      CellTags -> "Links",
      CellID -> 593846556
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Tests",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Tests",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Optional list of tests that can be used to verify that the function is working properly in any environment.\nTests can be specified as Input/Output cell pairs or as literal VerificationTest expressions if you need to specify options.",
                   "MoreInfoText"
                  ],
                  Background -> GrayLevel[0.95],
                  FrameMargins -> 20,
                  FrameStyle -> GrayLevel[0.9],
                  RoundingRadius -> 5
                 ]
                ],
                "MoreInfoText",
                Deletable -> True,
                CellTags -> {"SectionMoreInfoTests"},
                CellMargins -> {{66, 66}, {15, 15}}
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "Subsection",
         Deletable -> False,
         DefaultNewCellStyle -> "Input",
         CellTags -> "Tests",
         CellID -> 16051757
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "PositionLargest",
               "[",
               RowBox[{"Range", "[", "100", "]"}],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 549444864
           ],
           Cell[
            BoxData["100"],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 618644339
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "PositionLargest",
               "[",
               RowBox[
                {
                 "{",
                 RowBox[
                  {"100", ",", "200", ",", "100", ",", "200", ",", "50"}
                 ],
                 "}"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 647181048
           ],
           Cell[
            BoxData["2"],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 675126350
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "PositionLargest",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"100", ",", "200", ",", "100", ",", "200", ",", "50"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 "1"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 358982677
           ],
           Cell[
            BoxData[RowBox[{"{", "2", "}"}]],
            "Output",
            CellLabel -> "Out[3]=",
            CellID -> 65366866
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "PositionLargest",
               "[",
               RowBox[
                {
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {"100", ",", "200", ",", "100", ",", "200", ",", "50"}
                   ],
                   "}"
                  }
                 ],
                 ",",
                 "3"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:=",
            CellID -> 596210691
           ],
           Cell[
            BoxData[
             RowBox[{"{", RowBox[{"2", ",", "4", ",", "1"}], "}"}]
            ],
            "Output",
            CellLabel -> "Out[4]=",
            CellID -> 253649991
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Closed
   ]
  ],
  Cell[
   "Author Notes",
   "Section",
   Deletable -> False,
   DefaultNewCellStyle -> "Text",
   CellTags -> "Author Notes",
   CellID -> 795110225
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Submission Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "Submission Notes",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Enter any additional information that you would like to communicate to the reviewer here. This section will not be included in the published resource.",
                "MoreInfoText"
               ],
               Background -> GrayLevel[0.95],
               FrameMargins -> 20,
               FrameStyle -> GrayLevel[0.9],
               RoundingRadius -> 5
              ]
             ],
             "MoreInfoText",
             Deletable -> True,
             CellTags -> {"SectionMoreInfoSubmissionNotes"},
             CellMargins -> {{66, 66}, {15, 15}}
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "Section",
      Deletable -> False,
      DefaultNewCellStyle -> "Text",
      CellTags -> "Submission Notes",
      CellID -> 843283583
     ],
     Cell[
      "Should have error cases when there is no way to compute a definite Max in the list",
      "Text",
      CellID -> 800404381
     ]
    },
    Open
   ]
  ]
 },
 NotebookDynamicExpression :> Dynamic[
  Symbol["System`ResourceFunction"],
  SynchronousUpdating -> False
 ],
 TaggingRules -> {
  "ResourceType" -> "Function",
  "ResourceCreateNotebook" -> True,
  "TemplateVersion" -> "1.2.13"
 },
 CreateCellID -> True,
 FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (April 19, 2018)",
 StyleDefinitions -> Notebook[
  {
   Cell[StyleData[StyleDefinitions -> "Default.nb"]],
   Cell[
    StyleData[All, "Working"],
    DockedCells -> {
     Cell[
      BoxData[
       TagBox[
        GridBox[
         {
          {
           TagBox[
            GridBox[
             {
              {
               GraphicsBox[
                {
                 Thickness[0.022222222222222223],
                 {
                  FaceForm[
                   {
                    RGBColor[0.87451, 0.278431, 0.03137260000000001],
                    Opacity[1.]
                   }
                  ],
                  FilledCurveBox[
                   {{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}},
                   {
                    {
                     {45., 22.5},
                     {45., 10.073999999999998},
                     {34.926, 0.},
                     {22.5, 0.},
                     {10.074, 0.},
                     {0., 10.073999999999998},
                     {0., 22.5},
                     {0., 34.926},
                     {10.074, 45.},
                     {22.5, 45.},
                     {34.926, 45.},
                     {45., 34.926},
                     {45., 22.5}
                    }
                   }
                  ]
                 },
                 {
                  FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}],
                  FilledCurveBox[
                   {
                    {
                     {0, 2, 0},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {1, 3, 3},
                     {0, 1, 0},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0}
                    },
                    {
                     {0, 2, 0},
                     {0, 1, 0},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0}
                    },
                    {
                     {0, 2, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3}
                    },
                    {
                     {0, 2, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {1, 3, 3},
                     {0, 1, 0},
                     {0, 1, 0},
                     {0, 1, 0}
                    }
                   },
                   {
                    CompressedData[
                     "\n1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e\nULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa\n4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB\n9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2\ncNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1\n2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh\nQ1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e\nPEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx\n71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP\niW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h\nI9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A\npeOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=\n                    \n                    "
                    ],
                    {
                     {19.051000000000002, 14.242},
                     {19.051000000000002, 27.594},
                     {23.828, 27.594},
                     {23.828, 26.543},
                     {21.426, 26.308999999999997},
                     {21.375, 26.258000000000003},
                     {21.375, 24.219},
                     {21.375, 17.535000000000004},
                     {21.375, 15.602},
                     {21.426, 15.547},
                     {23.828, 15.315999999999999},
                     {23.828, 14.242}
                    },
                    {
                     {24.578, 18.75},
                     {24.578, 23.078000000000003},
                     {24.578, 23.539},
                     {24.953, 23.914},
                     {25.418, 23.91},
                     {29.746, 23.91},
                     {30.203, 23.91},
                     {30.578, 23.539},
                     {30.578, 23.078000000000003},
                     {30.578, 18.75},
                     {30.581999999999997, 18.288999999999998},
                     {30.207, 17.91},
                     {29.746, 17.91},
                     {25.418, 17.91},
                     {24.953, 17.906},
                     {24.574, 18.285},
                     {24.578, 18.75}
                    },
                    {
                     {31.328, 14.242},
                     {31.328, 15.315999999999999},
                     {33.684, 15.539000000000001},
                     {33.789, 15.602},
                     {33.789, 17.641},
                     {33.789, 24.188},
                     {33.789, 26.227},
                     {33.684, 26.281},
                     {31.328, 26.512000000000004},
                     {31.328, 27.586},
                     {36.113, 27.586},
                     {36.113, 14.234000000000002}
                    }
                   }
                  ]
                 }
                },
                {
                 Background -> RGBColor[0.988235, 0.419608, 0.203922],
                 AspectRatio -> Automatic,
                 ImageSize -> {45., 45.},
                 PlotRange -> {{0., 45.}, {0., 45.}}
                }
               ],
               StyleBox[
                "\"Function Resource Definition Notebook\"",
                FontFamily -> "Source Sans Pro",
                FontWeight -> Bold,
                FontSize -> 22,
                FontColor -> GrayLevel[1],
                StripOnInput -> False
               ]
              }
             },
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False,
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
            ],
            "Grid"
           ],
           "\[SpanFromLeft]",
           "\[SpanFromLeft]",
           "\[SpanFromLeft]",
           "\[SpanFromLeft]",
           "\[SpanFromLeft]",
           "\[SpanFromLeft]",
           "\[SpanFromLeft]",
           ItemBox[
            TemplateBox[
             {
              StyleBox[
               "\"Function Repository \[RightGuillemet]\"",
               "Text",
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "https://resources.wolframcloud.com/FunctionRepository/"
             },
             "HyperlinkURL"
            ],
            Alignment -> {Right, Bottom},
            StripOnInput -> False
           ]
          },
          {
           ButtonBox[
            TemplateBox[
             {
              StyleBox[
               "\"Open Sample\"",
               "Text",
               FontFamily -> "Source Sans Pro SemiBold",
               FontWeight -> "SemiBold",
               FontSize -> 13,
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "\"View a completed sample definition notebook\""
             },
             "PrettyTooltipTemplate"
            ],
            ButtonFunction :> (Symbol["System`ResourceFunction"];
            FunctionResource`DefinitionNotebook`Private`showProgress[
             FunctionResource`DefinitionNotebook`Private`viewExampleNotebook[

             ]
            ]),
            FrameMargins -> {{1, 1}, {0, 0}},
            Appearance -> {
             "Default" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Hover" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Pressed" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ]
            },
            Background -> RGBColor[0.921569, 0.341176, 0.105882],
            Method -> "Queued",
            ImageSize -> {All, 25},
            Evaluator -> Automatic
           ],
           ButtonBox[
            TemplateBox[
             {
              StyleBox[
               "\"Style Guidelines\"",
               "Text",
               FontFamily -> "Source Sans Pro SemiBold",
               FontWeight -> "SemiBold",
               FontSize -> 13,
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "\"View general guidelines for authoring resource functions\""
             },
             "PrettyTooltipTemplate"
            ],
            ButtonFunction :> (Symbol["System`ResourceFunction"];
            FunctionResource`DefinitionNotebook`Private`showProgress[
             FunctionResource`DefinitionNotebook`Private`viewStyleGuidelines[

             ]
            ]),
            FrameMargins -> {{1, 1}, {0, 0}},
            Appearance -> {
             "Default" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Hover" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Pressed" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ]
            },
            Background -> RGBColor[0.921569, 0.341176, 0.105882],
            Method -> "Queued",
            ImageSize -> {All, 25},
            Evaluator -> Automatic
           ],
           ButtonBox[
            TemplateBox[
             {
              StyleBox[
               "\"Tools\"",
               "Text",
               FontFamily -> "Source Sans Pro SemiBold",
               FontWeight -> "SemiBold",
               FontSize -> 13,
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "\"Toggle documentation toolbar\""
             },
             "PrettyTooltipTemplate"
            ],
            ButtonFunction :> (Symbol["System`ResourceFunction"];
            FunctionResource`DefinitionNotebook`Private`showProgress[
             FunctionResource`DefinitionNotebook`Private`getResource[
              ButtonNotebook[],
              "Tools"
             ]
            ]),
            FrameMargins -> {{1, 1}, {0, 0}},
            Appearance -> {
             "Default" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Hover" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Pressed" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ]
            },
            Background -> RGBColor[0.921569, 0.341176, 0.105882],
            Method -> "Queued",
            ImageSize -> {All, 25},
            Evaluator -> Automatic
           ],
           TagBox[
            GridBox[
             {{"\"\"", "\"\""}},
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False,
             GridBoxDividers -> {"ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}},
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
             FrameStyle -> RGBColor[0.994118, 0.709804, 0.601961]
            ],
            "Grid"
           ],
           ButtonBox[
            TemplateBox[
             {
              StyleBox[
               "\"Check\"",
               "Text",
               FontFamily -> "Source Sans Pro SemiBold",
               FontWeight -> "SemiBold",
               FontSize -> 13,
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "\"Check notebook for potential errors\""
             },
             "PrettyTooltipTemplate"
            ],
            ButtonFunction :> (Symbol["System`ResourceFunction"];
            FunctionResource`DefinitionNotebook`Private`showProgress[
             FunctionResource`DefinitionNotebook`Private`checkNotebook[
              ButtonNotebook[]
             ]
            ]),
            FrameMargins -> {{1, 1}, {0, 0}},
            Appearance -> {
             "Default" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Hover" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Pressed" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ]
            },
            Background -> RGBColor[0.921569, 0.341176, 0.105882],
            Method -> "Queued",
            ImageSize -> {All, 25},
            Evaluator -> Automatic
           ],
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              "\"Preview \[FilledDownTriangle]\"",
              "Text",
              FontFamily -> "Source Sans Pro SemiBold",
              FontWeight -> "SemiBold",
              FontSize -> 13,
              FontColor -> GrayLevel[1],
              StripOnInput -> False
             ],
             ButtonFunction :> (Symbol["System`ResourceFunction"];
             FunctionResource`DefinitionNotebook`Private`showProgress[
              Null
             ]),
             FrameMargins -> {{1, 1}, {0, 0}},
             Appearance -> {
              "Default" -> Image[
               CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              "Hover" -> Image[
               CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              "Pressed" -> Image[
               CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ]
             },
             Background -> RGBColor[0.921569, 0.341176, 0.105882],
             Method -> "Queued",
             ImageSize -> {All, 25},
             Evaluator -> Automatic
            ],
            {
             "\"In a notebook\"" :> ToExpression[
              "System`ResourceFunction; FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[], \"Preview\"]",
              InputForm
             ],
             "\"On the cloud\"" :> ToExpression[
              "System`ResourceFunction; FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[], \"Cloud\"]",
              InputForm
             ]
            },
            Appearance -> None,
            Method -> "Queued"
           ],
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              "\"Deploy \[FilledDownTriangle]\"",
              "Text",
              FontFamily -> "Source Sans Pro SemiBold",
              FontWeight -> "SemiBold",
              FontSize -> 13,
              FontColor -> GrayLevel[1],
              StripOnInput -> False
             ],
             ButtonFunction :> (Symbol["System`ResourceFunction"];
             FunctionResource`DefinitionNotebook`Private`showProgress[
              Null
             ]),
             FrameMargins -> {{1, 1}, {0, 0}},
             Appearance -> {
              "Default" -> Image[
               CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              "Hover" -> Image[
               CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              "Pressed" -> Image[
               CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ]
             },
             Background -> RGBColor[0.921569, 0.341176, 0.105882],
             Method -> "Queued",
             ImageSize -> {All, 25},
             Evaluator -> Automatic
            ],
            {
             "\"Locally on this computer\"" :> ToExpression[
              "System`ResourceFunction; FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[], \"Local\"]",
              InputForm
             ],
             "\"For my cloud account\"" :> ToExpression[
              "System`ResourceFunction; FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[], \"Cloud\"]",
              InputForm
             ],
             "\"Publicly in the cloud\"" :> ToExpression[
              "System`ResourceFunction; FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[], \"CloudPublic\"]",
              InputForm
             ],
             "\"In this session only (without documentation)\"" :> ToExpression[
              "System`ResourceFunction; FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[], \"KernelSession\"]",
              InputForm
             ]
            },
            Appearance -> None,
            Method -> "Queued"
           ],
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[],
                {TaggingRules, "StatusMessage"},
                ""
               ],
               StandardForm
              ]
             ],
             "Text",
             GrayLevel[1],
             StripOnInput -> False
            ],
            ItemSize -> Fit,
            StripOnInput -> False
           ],
           ButtonBox[
            TemplateBox[
             {
              StyleBox[
               TagBox[
                GridBox[
                 {
                  {
                   GraphicsBox[
                    {
                     Thickness[0.06349206349206349],
                     StyleBox[
                      {
                       FilledCurveBox[
                        {
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        CompressedData[
                         "\n1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP\np2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=\n\n                    "
                        ]
                       ]
                      },
                      FaceForm[RGBColor[0.960784, 0.705882, 0.498039, 1.]],
                      StripOnInput -> False
                     ],
                     StyleBox[
                      {
                       FilledCurveBox[
                        {
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        CompressedData[
                         "\n1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+\nHw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG\nQUPVNSjgp+HmIWgAG/wcEg==\n                    "
                        ]
                       ],
                       FilledCurveBox[
                        {
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        CompressedData[
                         "\n1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO\nu3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H\neU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==\n                    "
                        ]
                       ]
                      },
                      FaceForm[RGBColor[1., 1., 1., 1.]],
                      StripOnInput -> False
                     ]
                    },
                    ImageSize -> 18,
                    PlotRange -> {{0., 15.75}, {0., 16.5}},
                    AspectRatio -> Automatic
                   ],
                   "\"Submit to Repository\""
                  }
                 },
                 GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
                 AutoDelete -> False,
                 GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                 GridBoxSpacings -> {
                  "Columns" -> {{0}},
                  "ColumnsIndexed" -> {2 -> 0.25},
                  "Rows" -> {{0}}
                 }
                ],
                "Grid"
               ],
               "Text",
               FontFamily -> "Source Sans Pro SemiBold",
               FontWeight -> "SemiBold",
               FontSize -> 13,
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "\"Submit your function to the Wolfram Function Repository\""
             },
             "PrettyTooltipTemplate"
            ],
            ButtonFunction :> (Symbol["System`ResourceFunction"];
            FunctionResource`DefinitionNotebook`Private`showProgress[
             FunctionResource`DefinitionNotebook`Private`submitRepository[
              ButtonNotebook[]
             ]
            ]),
            FrameMargins -> {{1, 1}, {0, 0}},
            Appearance -> {
             "Default" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0hQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89GAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A+GMDZA=="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Hover" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvLCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM86iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pfAJBwAV4="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Pressed" -> Image[
              CompressedData["1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIzUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/E9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBcCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JCjIx4IS/2yUhjJKVkUvMLAMWzMVI="],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ]
            },
            Background -> RGBColor[0.921569, 0.341176, 0.105882],
            Method -> "Queued",
            ImageSize -> {All, 25},
            Evaluator -> Automatic
           ]
          }
         },
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
         AutoDelete -> False,
         GridBoxBackground -> {
          "Columns" -> {{None}},
          "Rows" -> {
           RGBColor[0.988235, 0.419608, 0.203922],
           RGBColor[0.921569, 0.341176, 0.105882]
          }
         },
         GridBoxFrame -> {
          "Columns" -> False,
          "RowsIndexed" -> {
           1 -> RGBColor[0.988235, 0.419608, 0.203922],
           2 -> RGBColor[0.921569, 0.341176, 0.105882]
          }
         },
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}},
          "RowsIndexed" -> {1 -> 6, 2 -> 4}
         },
         GridBoxSpacings -> {"Columns" -> {5, {}, 5}, "Rows" -> {{Automatic}}},
         FrameStyle -> RGBColor[0.988235, 0.419608, 0.203922]
        ],
        "Grid"
       ]
      ],
      "DockedCell",
      CellMargins -> {{-10, -10}, {-8, -8}},
      CellFrame -> 0
     ]
    }
   ],
   Cell[StyleData["Item"], DefaultNewCellStyle -> "Item"],
   Cell[
    StyleData[
     "MoreInfoText",
     StyleDefinitions -> StyleData["Text"]
    ],
    FontColor -> GrayLevel[0.25]
   ],
   Cell[
    StyleData[
     "ErrorText",
     StyleDefinitions -> StyleData["Text"]
    ],
    ShowCellBracket -> False,
    CellMargins -> {{66, Inherited}, {0, 0}},
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0},
    FontWeight -> Bold,
    FontColor -> RGBColor[1, 0, 0]
   ],
   Cell[
    StyleData[
     "WarningText",
     StyleDefinitions -> StyleData["Text"]
    ],
    ShowCellBracket -> False,
    CellMargins -> {{66, Inherited}, {0, 0}},
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0},
    FontWeight -> Bold,
    FontColor -> RGBColor[1, 1, 0]
   ],
   Cell[
    StyleData["ButtonText"],
    FontFamily -> "Sans Serif",
    FontSize -> 11,
    FontWeight -> Bold,
    FontColor -> RGBColor[0.458824, 0.458824, 0.458824]
   ],
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"],
    TemplateBoxOptions -> {
     DisplayFunction -> (Function[
      PaneSelectorBox[
       {
        False -> GraphicsBox[
         {
          Thickness[0.07142857142857142],
          StyleBox[
           {
            JoinedCurveBox[
             {
              {
               {1, 4, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3}
              }
             },
             CompressedData[
              "\n1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz\njygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G\nbHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c\n5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28\n               "
             ],
             CurveClosed -> {1}
            ]
           },
           JoinForm[{"Miter", 3.25}],
           Thickness[0.049999999999999996],
           RGBColor[0.627441, 0.627441, 0.627441, 1.],
           StripOnInput -> False
          ],
          StyleBox[
           {
            FilledCurveBox[
             {
              {
               {1, 4, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3}
              },
              {
               {0, 2, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {1, 3, 3},
               {1, 3, 3},
               {0, 1, 0},
               {1, 3, 3},
               {1, 3, 3},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {1, 3, 3},
               {1, 3, 3},
               {0, 1, 0}
              }
             },
             {
              CompressedData[
               "\n1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6\neve8lMOjwkBdpVlKDtNeMcWlaUg5rLeT+/XumZKDfHH3s3cNkhD1xsoOydvP\naxnrSjrM0+V9eXcqgi+2tCUhlFcFzu+R+XP9TIsKXD/Y/GcqcPPB6g1V4fZ7\n3Ng+uaNGFe4+sPpFqg4w98P4b+wjNu/OlYXzwerN5eD6T8maTZx5Ww7V/Hp5\nuP0GLXO+/78oD3cfjA9zP4wP8x9MP8z/MPNh4QOzHxZ+MPfBwhc9/AFZSbHT\n\n                "
              ],
              CompressedData[
               "\n1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOe35VvNh9m88Bxg+bItQUGsrtcErW\nbOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfN0f78Zk/gnC+\nthfnwVVSwnC+lOWP9TMtReD8Z6xHa9LMROH8SRvy1QUFxdD4EnA+p8bzeR0a\nknD+ooMNFkpCUnB+XK3Nl7tnpVDt65RGlfeVQXOfLIQvKe7wQ+xab3k5gn/0\n8aIolz9yDinbz2sZ35VzWG8n9+vdKQWIfKK8Qw3362O7pyP4EP3ScD6Kf4B8\nFP8C+Q3z48QYLETgfLD7RIXhfHD4fhaE88HueSIA58PiAz1+AUR/638=\n                \n                "
              ]
             }
            ]
           },
           FaceForm[RGBColor[0.627441, 0.627441, 0.627441, 1.]],
           StripOnInput -> False
          ]
         },
         ImageSize -> {14., 14.},
         PlotRange -> {{0., 14.}, {0., 14.}},
         AspectRatio -> Automatic
        ],
        True -> GraphicsBox[
         {
          Thickness[0.07142857142857142],
          StyleBox[
           {
            JoinedCurveBox[
             {
              {
               {1, 4, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3}
              }
             },
             CompressedData[
              "\n1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz\njygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G\nbHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c\n5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28\n               "
             ],
             CurveClosed -> {1}
            ]
           },
           JoinForm[{"Miter", 3.25}],
           Thickness[0.049999999999999996],
           RGBColor[0.5, 0.5, 0.5, 1.],
           StripOnInput -> False
          ],
          StyleBox[
           {
            FilledCurveBox[
             {
              {
               {1, 4, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3}
              }
             },
             CompressedData[
              "\n1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz\njygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G\nbHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+DB7YPph9sDMh9EwcZg6mD5c\n5qLbC3MXTD/M3TDzYf6C2YMrHGD2AAAVXK28\n               "
             ]
            ]
           },
           FaceForm[RGBColor[0.5, 0.5, 0.5, 1.]],
           StripOnInput -> False
          ],
          StyleBox[
           {
            FilledCurveBox[
             {
              {
               {1, 4, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3},
               {1, 3, 3}
              },
              {
               {0, 2, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {1, 3, 3},
               {1, 3, 3},
               {0, 1, 0},
               {1, 3, 3},
               {1, 3, 3},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {0, 1, 0},
               {1, 3, 3},
               {1, 3, 3},
               {0, 1, 0}
              }
             },
             {
              CompressedData[
               "\n1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6\neve8lMOjwkBdpVlKDtNeMcWlaUg5rLeT+/XumZKDfHH3s3cNkhD1xsoOydvP\naxnrSjrM0+V9eXcqgi+2tCUhlFcFzu+R+XP9TIsKXD/Y/GcqcPPB6g1V4fZ7\n3Ng+uaNGFe4+sPpFqg4w98P4b+wjNu/OlYXzwerN5eD6T8maTZx5Ww7V/Hp5\nuP0GLXO+/78oD3cfjA9zP4wP8x9MP8z/MPNh4QOzHxZ+MPfBwhc9/AFZSbHT\n\n                "
              ],
              CompressedData[
               "\n1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOe35VvNh9m88Bxg+bItQUGsrtcErW\nbOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfN0f78Zk/gnC+\nthfnwVVSwnC+lOWP9TMtReD8Z6xHa9LMROH8SRvy1QUFxdD4EnA+p8bzeR0a\nknD+ooMNFkpCUnB+XK3Nl7tnpVDt65RGlfeVQXOfLIQvKe7wQ+xab3k5gn/0\n8aIolz9yDinbz2sZ35VzWG8n9+vdKQWIfKK8Qw3362O7pyP4EP3ScD6Kf4B8\nFP8C+Q3z48QYLETgfLD7RIXhfHD4fhaE88HueSIA58PiAz1+AUR/638=\n                \n                "
              ]
             }
            ]
           },
           FaceForm[RGBColor[0.999985, 0.999985, 0.999985, 1.]],
           StripOnInput -> False
          ]
         },
         ImageSize -> {14., 14.},
         PlotRange -> {{0., 14.}, {0., 14.}},
         AspectRatio -> Automatic
        ]
       },
       Dynamic[CurrentValue["MouseOver"]],
       ImageSize -> Automatic,
       FrameMargins -> 0
      ]
     ])
    }
   ],
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"],
    TemplateBoxOptions -> {
     DisplayFunction -> (Function[
      AdjustmentBox[
       ButtonBox[
        TemplateBox[
         {
          TemplateBox[{}, "MoreInfoOpenerIconTemplate"],
          "\"Click for more information\""
         },
         "PrettyTooltipTemplate"
        ],
        ButtonFunction :> (If[ MatchQ[
         CurrentValue[
          ButtonNotebook[],
          {TaggingRules, "AttachedCells", #1}
         ],
         _CellObject
        ],
         NotebookDelete[
          CurrentValue[
           ButtonNotebook[],
           {TaggingRules, "AttachedCells", #1}
          ]
         ];
         CurrentValue[
          ButtonNotebook[],
          {TaggingRules, "AttachedCells", #1}
         ] = Inherited,
         CurrentValue[
          ButtonNotebook[],
          {TaggingRules, "AttachedCells", #1}
         ] = MathLink`CallFrontEnd[
          FrontEnd`AttachCell[
           ParentCell[EvaluationCell[]],
           #2,
           "Inline",
           "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}
          ]
         ];
         Null
        ];
        Null),
        Appearance -> None,
        Evaluator -> Automatic,
        Method -> "Preemptive"
       ],
       BoxBaselineShift -> -0.5,
       BoxMargins -> 0.2
      ]
     ])
    }
   ],
   Cell[
    StyleData["ClickToCopyTemplate"],
    TemplateBoxOptions -> {
     DisplayFunction -> (Function[
      PaneSelectorBox[
       {
        False -> TagBox[
         GridBox[
          {
           {
            #1,
            ButtonBox[
             GraphicsBox[
              {
               GrayLevel[0.85],
               Thickness[NCache[2/45, 0.044444444444444446]],
               FilledCurveBox[
                {
                 {
                  {0, 2, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0}
                 },
                 {
                  {0, 2, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0},
                  {0, 1, 0}
                 },
                 {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                },
                {
                 {
                  {10.5, 18.75},
                  {10.5, 18.},
                  {9., 18.},
                  {9., 15.75},
                  {13.5, 15.75},
                  {13.5, 18.},
                  {12., 18.},
                  {12., 18.75}
                 },
                 {
                  {6., 18.},
                  {6., 4.5},
                  {16.5, 4.5},
                  {16.5, 18.},
                  {14.25, 18.},
                  {14.25, 17.25},
                  {15.75, 17.25},
                  {15.75, 5.25},
                  {6.75, 5.25},
                  {6.75, 17.25},
                  {8.25, 17.25},
                  {8.25, 18.}
                 },
                 {
                  {9.75, 17.25},
                  {12.75, 17.25},
                  {12.75, 16.5},
                  {9.75, 16.5}
                 }
                }
               ],
               FilledCurveBox[
                {
                 {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                 {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                 {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                 {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                },
                {
                 {
                  {8.25, 14.25},
                  {14.25, 14.25},
                  {14.25, 13.5},
                  {8.25, 13.5}
                 },
                 {{8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}},
                 {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}},
                 {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}
                }
               ]
              },
              ImageSize -> 12
             ],
             ButtonFunction :> Null,
             Appearance -> {"Default" -> None, "Hover" -> None, "Pressed" -> None},
             Evaluator -> Automatic,
             Method -> "Preemptive"
            ]
           }
          },
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
          AutoDelete -> False,
          GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings -> {"Columns" -> {{0.4}}}
         ],
         "Grid"
        ],
        True -> DynamicModuleBox[
         {
          FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$ = 0.,
          FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$$ = 3.
         },
         TagBox[
          GridBox[
           {
            {
             #1,
             TagBox[
              ButtonBox[
               DynamicBox[
                ToBoxes[
                 Refresh[
                  If[ Greater[
                   Plus[
                    AbsoluteTime[],
                    Times[
                     -1,
                     FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$
                    ]
                   ],
                   FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$$
                  ],
                   RawBoxes[TemplateBox[{ToBoxes[#1], ToBoxes[#2]}, "PrettyTooltipTemplate"]] &[
                    Mouseover[
                     Graphics[
                      {
                       GrayLevel[0.65],
                       Thickness[2/45],
                       FilledCurve[
                        {
                         {
                          {0, 2, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0}
                         },
                         {
                          {0, 2, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0}
                         },
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        {
                         {
                          {10.5, 18.75},
                          {10.5, 18.},
                          {9., 18.},
                          {9., 15.75},
                          {13.5, 15.75},
                          {13.5, 18.},
                          {12., 18.},
                          {12., 18.75}
                         },
                         {
                          {6., 18.},
                          {6., 4.5},
                          {16.5, 4.5},
                          {16.5, 18.},
                          {14.25, 18.},
                          {14.25, 17.25},
                          {15.75, 17.25},
                          {15.75, 5.25},
                          {6.75, 5.25},
                          {6.75, 17.25},
                          {8.25, 17.25},
                          {8.25, 18.}
                         },
                         {
                          {9.75, 17.25},
                          {12.75, 17.25},
                          {12.75, 16.5},
                          {9.75, 16.5}
                         }
                        }
                       ],
                       FilledCurve[
                        {
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        {
                         {
                          {8.25, 14.25},
                          {14.25, 14.25},
                          {14.25, 13.5},
                          {8.25, 13.5}
                         },
                         {{8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}},
                         {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}},
                         {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}
                        }
                       ]
                      },
                      ImageSize -> 12
                     ],
                     Graphics[
                      {
                       RGBColor[0.988235, 0.419608, 0.203922],
                       Thickness[2/45],
                       FilledCurve[
                        {
                         {
                          {0, 2, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0}
                         },
                         {
                          {0, 2, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0},
                          {0, 1, 0}
                         },
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        {
                         {
                          {10.5, 18.75},
                          {10.5, 18.},
                          {9., 18.},
                          {9., 15.75},
                          {13.5, 15.75},
                          {13.5, 18.},
                          {12., 18.},
                          {12., 18.75}
                         },
                         {
                          {6., 18.},
                          {6., 4.5},
                          {16.5, 4.5},
                          {16.5, 18.},
                          {14.25, 18.},
                          {14.25, 17.25},
                          {15.75, 17.25},
                          {15.75, 5.25},
                          {6.75, 5.25},
                          {6.75, 17.25},
                          {8.25, 17.25},
                          {8.25, 18.}
                         },
                         {
                          {9.75, 17.25},
                          {12.75, 17.25},
                          {12.75, 16.5},
                          {9.75, 16.5}
                         }
                        }
                       ],
                       FilledCurve[
                        {
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                         {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                        },
                        {
                         {
                          {8.25, 14.25},
                          {14.25, 14.25},
                          {14.25, 13.5},
                          {8.25, 13.5}
                         },
                         {{8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}},
                         {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}},
                         {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}
                        }
                       ]
                      },
                      ImageSize -> 12
                     ]
                    ],
                    "Click to copy to the clipboard"
                   ],
                   RawBoxes[TemplateBox[{ToBoxes[#1], ToBoxes[#2]}, "PrettyTooltipTemplate"]] &[
                    Graphics[
                     {
                      RGBColor[0, 2/3, 0],
                      Thickness[2/45],
                      FilledCurve[
                       {
                        {
                         {0, 2, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0}
                        },
                        {
                         {0, 2, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0},
                         {0, 1, 0}
                        },
                        {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                       },
                       {
                        {
                         {10.5, 18.75},
                         {10.5, 18.},
                         {9., 18.},
                         {9., 15.75},
                         {13.5, 15.75},
                         {13.5, 18.},
                         {12., 18.},
                         {12., 18.75}
                        },
                        {
                         {6., 18.},
                         {6., 4.5},
                         {16.5, 4.5},
                         {16.5, 18.},
                         {14.25, 18.},
                         {14.25, 17.25},
                         {15.75, 17.25},
                         {15.75, 5.25},
                         {6.75, 5.25},
                         {6.75, 17.25},
                         {8.25, 17.25},
                         {8.25, 18.}
                        },
                        {
                         {9.75, 17.25},
                         {12.75, 17.25},
                         {12.75, 16.5},
                         {9.75, 16.5}
                        }
                       }
                      ],
                      FilledCurve[
                       {
                        {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                        {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                        {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}},
                        {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}
                       },
                       {
                        {
                         {8.25, 14.25},
                         {14.25, 14.25},
                         {14.25, 13.5},
                         {8.25, 13.5}
                        },
                        {{8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}},
                        {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}},
                        {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}
                       }
                      ]
                     },
                     ImageSize -> 12
                    ],
                    "Copied"
                   ]
                  ],
                  UpdateInterval -> 1,
                  TrackedSymbols :> {
                   FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$
                  }
                 ],
                 StandardForm
                ]
               ],
               ButtonFunction :> (FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$ = AbsoluteTime[];
               CopyToClipboard[#2]),
               Appearance -> {"Default" -> None, "Hover" -> None, "Pressed" -> None},
               Method -> "Queued",
               Evaluator -> Automatic
              ],
              MouseAppearanceTag["LinkHand"]
             ]
            }
           },
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           AutoDelete -> False,
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings -> {"Columns" -> {{0.4}}}
          ],
          "Grid"
         ],
         DynamicModuleValues :> { }
        ]
       },
       Dynamic[CurrentValue["MouseOver"]],
       ImageSize -> Automatic,
       FrameMargins -> 0
      ]
     ])
    }
   ],
   Cell[
    StyleData["PrettyTooltipTemplate"],
    TemplateBoxOptions -> {
     DisplayFunction -> (Function[
      TagBox[
       TooltipBox[
        #1,
        FrameBox[
         StyleBox[
          #2,
          "Text",
          FontColor -> RGBColor[0.537255, 0.537255, 0.537255],
          FontSize -> 12,
          FontWeight -> "Plain",
          StripOnInput -> False
         ],
         Background -> RGBColor[0.960784, 0.960784, 0.960784],
         FrameStyle -> RGBColor[0.898039, 0.898039, 0.898039],
         FrameMargins -> 8,
         StripOnInput -> False
        ],
        TooltipDelay -> 0.1,
        TooltipStyle -> {Background -> None, CellFrame -> 0}
       ],
       Function[
        Annotation[
         #1,
         Framed[
          Style[
           FunctionResourceTools`BuildDefinitionNotebook`Private`$$tooltip,
           "Text",
           FontColor -> RGBColor[0.537255, 0.537255, 0.537255],
           FontSize -> 12,
           FontWeight -> "Plain"
          ],
          Background -> RGBColor[0.960784, 0.960784, 0.960784],
          FrameStyle -> RGBColor[0.898039, 0.898039, 0.898039],
          FrameMargins -> 8
         ],
         "Tooltip"
        ]
       ]
      ]
     ])
    }
   ],
   Cell[
    StyleData["ExampleGroupOpenerTemplate"],
    TemplateBoxOptions -> {
     DisplayFunction -> (Function[
      DynamicBox[
       ToBoxes[
        If[ MatchQ[
         CurrentValue[
          EvaluationNotebook[],
          {TaggingRules, "Openers", #1, #2},
          Closed
         ],
         Alternatives[True, Open]
        ],
         Style[
          Graphics[
           {
            Thickness[0.18],
            RGBColor[0.8509803921568627, 0.396078431372549, 0],
            Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]
           },
           AspectRatio -> 1,
           PlotRange -> {{-3, 4}, {-1, 1}},
           ImageSize -> 20
          ],
          Magnification -> 0.68*Inherited
         ],
         Rotate[
          Style[
           Graphics[
            {
             Thickness[0.18],
             RGBColor[0.8509803921568627, 0.396078431372549, 0],
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]
            },
            AspectRatio -> 1,
            PlotRange -> {{-3, 4}, {-1, 1}},
            ImageSize -> 20
           ],
           Magnification -> 0.68*Inherited
          ],
          Pi/2,
          {-1.65, -1}
         ]
        ],
        StandardForm
       ]
      ]
     ])
    }
   ],
   Cell[
    StyleData["ToolsGridTemplate"],
    TemplateBoxOptions -> {
     DisplayFunction -> (Function[
      TagBox[
       GridBox[
        {
         {
          ButtonBox[
           TemplateBox[
            {
             StyleBox[
              "\"Template Input\"",
              "Text",
              FontFamily -> "Source Sans Pro SemiBold",
              FontWeight -> "SemiBold",
              FontSize -> 13,
              FontColor -> GrayLevel[1],
              StripOnInput -> False
             ],
             "\"Format selection automatically using appropriate documentation styles\""
            },
            "PrettyTooltipTemplate"
           ],
           ButtonFunction :> (Symbol["System`ResourceFunction"];
           Identity[
            FunctionResource`DocuToolsTemplate`FunctionTemplateToggle[]
           ]),
           FrameMargins -> {{1, 1}, {0, 0}},
           Appearance -> {
            "Default" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h\nQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89\nGAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A\n+GMDZA==\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            "Hover" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL\nCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8\n6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf\nAJBwAV4=\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            "Pressed" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/\nE9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc\nCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC\njIx4IS/2yUhjJKVkUvMLAMWzMVI=\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ]
           },
           Background -> RGBColor[0.921569, 0.341176, 0.105882],
           Method -> "Queued",
           ImageSize -> {All, 25},
           Evaluator -> Automatic
          ],
          ButtonBox[
           TemplateBox[
            {
             StyleBox[
              "\"Literal Input\"",
              "Text",
              FontFamily -> "Source Sans Pro SemiBold",
              FontWeight -> "SemiBold",
              FontSize -> 13,
              FontColor -> GrayLevel[1],
              StripOnInput -> False
             ],
             "\"Format selection as literal Wolfram Language code\""
            },
            "PrettyTooltipTemplate"
           ],
           ButtonFunction :> (Symbol["System`ResourceFunction"];
           Identity[
            FunctionResource`DocuToolsTemplate`FunctionTemplateLiteralInput[

            ]
           ]),
           FrameMargins -> {{1, 1}, {0, 0}},
           Appearance -> {
            "Default" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h\nQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89\nGAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A\n+GMDZA==\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            "Hover" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL\nCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8\n6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf\nAJBwAV4=\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            "Pressed" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/\nE9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc\nCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC\njIx4IS/2yUhjJKVkUvMLAMWzMVI=\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ]
           },
           Background -> RGBColor[0.921569, 0.341176, 0.105882],
           Method -> "Queued",
           ImageSize -> {All, 25},
           Evaluator -> Automatic
          ],
          ButtonBox[
           TemplateBox[
            {
             StyleBox[
              "\"Insert Delimiter\"",
              "Text",
              FontFamily -> "Source Sans Pro SemiBold",
              FontWeight -> "SemiBold",
              FontSize -> 13,
              FontColor -> GrayLevel[1],
              StripOnInput -> False
             ],
             "\"Insert example delimiter\""
            },
            "PrettyTooltipTemplate"
           ],
           ButtonFunction :> (Symbol["System`ResourceFunction"];
           Identity[FunctionResource`DocuToolsTemplate`DocDelimiter[]]),
           FrameMargins -> {{1, 1}, {0, 0}},
           Appearance -> {
            "Default" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h\nQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89\nGAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A\n+GMDZA==\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            "Hover" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL\nCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8\n6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf\nAJBwAV4=\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ],
            "Pressed" -> Image[
             CompressedData[
              "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/\nE9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc\nCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC\njIx4IS/2yUhjJKVkUvMLAMWzMVI=\n                "
             ],
             "Byte",
             ColorSpace -> "RGB",
             Interleaving -> True
            ]
           },
           Background -> RGBColor[0.921569, 0.341176, 0.105882],
           Method -> "Queued",
           ImageSize -> {All, 25},
           Evaluator -> Automatic
          ],
          ActionMenuBox[
           ButtonBox[
            TemplateBox[
             {
              StyleBox[
               "\"Tables \[FilledDownTriangle]\"",
               "Text",
               FontFamily -> "Source Sans Pro SemiBold",
               FontWeight -> "SemiBold",
               FontSize -> 13,
               FontColor -> GrayLevel[1],
               StripOnInput -> False
              ],
              "\"Table Functions\""
             },
             "PrettyTooltipTemplate"
            ],
            ButtonFunction :> (Symbol["System`ResourceFunction"];
            FunctionResource`DefinitionNotebook`Private`showProgress[
             Null
            ]),
            FrameMargins -> {{1, 1}, {0, 0}},
            Appearance -> {
             "Default" -> Image[
              CompressedData[
               "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PImSfFdud67eiMoKtcDiuDUEiHzNk/zXY0h\nQj0E1RgCxYGymFreFmq9qzVCVw9BtUZAWTQtIPdgmo9qF8SFkGABWVFlgE89\nGAHVILREyLyrw2sFBNUZAlUygAGpWsiwhUy/kBViZMQLebFPThojJSWTml8A\n+GMDZA==\n                 "
              ],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Hover" -> Image[
              CompressedData[
               "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PIhRulnuv6fbBMIArKBIri0vAmX+Zas9TvL\nCK4egoAiQHGgLKaW7yk6f7JM0NRDUZYJUBZNC9B2TPPR7IK4EBIsQMavTEM8\n6iEIqAauBejOP9nGBLUA1QBVMoABqVrIsIU8v5AXYmTEC3mxT0YaIyklk5pf\nAJBwAV4=\n                 "
              ],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ],
             "Pressed" -> Image[
              CompressedData[
               "\n1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz\nUFAQikHs/zgAHikgeB0uTTzC1PKxLfr3teNw04BsoAguLW9ilL5vnPr3ypG/\nE9L/ZJtAEJANFAGKA2UxtfzYveTvjvlwxcgIKA6URdMCtB1oGlb1UF1XjkBc\nCAkWIOPPw2t/26PwaQHKPrwG1wJ05/9fP/CohyCgGqBKBjAgVQsZtpDnF/JC\njIx4IS/2yUhjJKVkUvMLAMWzMVI=\n                 "
              ],
              "Byte",
              ColorSpace -> "RGB",
              Interleaving -> True
             ]
            },
            Background -> RGBColor[0.921569, 0.341176, 0.105882],
            Method -> "Queued",
            ImageSize -> {All, 25},
            Evaluator -> Automatic
           ],
           {
            "\"Insert table with two columns\"" :> ToExpression[
             "System`ResourceFunction; FunctionResource`DocuToolsTemplate`TableInsert[2]",
             InputForm
            ],
            "\"Insert table with three columns\"" :> ToExpression[
             "System`ResourceFunction; FunctionResource`DocuToolsTemplate`TableInsert[3]",
             InputForm
            ],
            "\"Add a row to the selected table\"" :> ToExpression[
             "System`ResourceFunction; System`FrontEndExecute[{System`FrontEndToken[System`ButtonNotebook[], \"NewRow\"]}]",
             InputForm
            ],
            "\"Sort the selected table\"" :> ToExpression[
             "System`ResourceFunction; FunctionResource`DocuToolsTemplate`TableSort[]",
             InputForm
            ],
            "\"Merge selected tables\"" :> ToExpression[
             "System`ResourceFunction; FunctionResource`DocuToolsTemplate`TableMerge[]",
             InputForm
            ]
           },
           Appearance -> None,
           Method -> "Queued"
          ],
          ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False]
         }
        },
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
        AutoDelete -> False,
        GridBoxBackground -> {
         "Columns" -> {{None}},
         "Rows" -> {RGBColor[0.921569, 0.341176, 0.105882]}
        },
        GridBoxFrame -> {
         "Columns" -> False,
         "RowsIndexed" -> {1 -> RGBColor[0.921569, 0.341176, 0.105882]}
        },
        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "RowsIndexed" -> {1 -> 3}},
        GridBoxSpacings -> {
         "ColumnsIndexed" -> {1 -> 6, 2 -> 1, 3 -> 1, 4 -> 1, 5 -> 1, 6 -> 1, 7 -> 1},
         "Rows" -> {{Automatic}}
        },
        FrameStyle -> RGBColor[0.988235, 0.419608, 0.203922]
       ],
       "Grid"
      ]
     ])
    }
   ],
   Cell[
    StyleData[
     "UsageInputs",
     StyleDefinitions -> StyleData["Input"]
    ],
    CellMargins -> {{66, 10}, {0, 8}},
    StyleKeyMapping -> {"Tab" -> "UsageDescription"},
    Evaluatable -> False,
    CellEventActions -> {
     "ReturnKeyDown" :> With[
      {
       FunctionResourceTools`BuildDefinitionNotebook`Private`nb = Notebooks[EvaluationCell[]]
      },
      SelectionMove[EvaluationCell[], After, Cell];
      NotebookWrite[
       FunctionResourceTools`BuildDefinitionNotebook`Private`nb,
       Cell["", "UsageDescription"],
       All
      ];
      SelectionMove[
       FunctionResourceTools`BuildDefinitionNotebook`Private`nb,
       Before,
       CellContents
      ];
      Null
     ],
     {"KeyDown", "\t"} :> Replace[
      SelectionMove[SelectedNotebook[], After, Cell];
      NotebookFind[
       SelectedNotebook[],
       "TabNext",
       Next,
       CellTags,
       AutoScroll -> True,
       WrapAround -> True
      ],
      _NotebookSelection :> SelectionMove[
       SelectedNotebook[],
       All,
       CellContents,
       AutoScroll -> True
      ]
     ]
    },
    ShowAutoStyles -> False,
    ShowCodeAssist -> False,
    CodeAssistOptions -> {"DynamicHighlighting" -> False},
    LineSpacing -> {1, 3},
    TabSpacings -> {2.5},
    CounterIncrements -> "Text",
    FontFamily -> "Source Sans Pro",
    FontSize -> 15,
    FontWeight -> "Plain"
   ],
   Cell[
    StyleData[
     "UsageDescription",
     StyleDefinitions -> StyleData["Text"]
    ],
    CellMargins -> {{86, 10}, {7, 0}},
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"},
    CellGroupingRules -> "OutputGrouping",
    CellEventActions -> {
     "ReturnKeyDown" :> With[
      {
       FunctionResourceTools`BuildDefinitionNotebook`Private`nb = Notebooks[EvaluationCell[]]
      },
      SelectionMove[EvaluationCell[], After, Cell];
      NotebookWrite[
       FunctionResourceTools`BuildDefinitionNotebook`Private`nb,
       Cell[BoxData[""], "UsageInputs"],
       All
      ];
      SelectionMove[
       FunctionResourceTools`BuildDefinitionNotebook`Private`nb,
       Before,
       CellContents
      ];
      Null
     ],
     {"KeyDown", "\t"} :> Replace[
      SelectionMove[SelectedNotebook[], After, Cell];
      NotebookFind[
       SelectedNotebook[],
       "TabNext",
       Next,
       CellTags,
       AutoScroll -> True,
       WrapAround -> True
      ],
      _NotebookSelection :> SelectionMove[
       SelectedNotebook[],
       All,
       CellContents,
       AutoScroll -> True
      ]
     ]
    },
    ShowAutoSpellCheck -> False
   ],
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]],
    StyleKeyMapping -> { },
    DefaultNewCellStyle -> "Notes",
    ShowAutoSpellCheck -> False,
    GridBoxOptions -> {BaseStyle -> "TableNotes"}
   ],
   Cell[
    StyleData[
     "TableNotes",
     StyleDefinitions -> StyleData["Notes"]
    ],
    CellDingbat -> None,
    CellFrameColor -> RGBColor[0.749, 0.694, 0.553],
    StyleMenuListing -> None,
    ButtonBoxOptions -> {Appearance -> {Automatic, None}},
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906],
     GridBoxAlignment -> {
      "Columns" -> {{Left}},
      "ColumnsIndexed" -> { },
      "Rows" -> {{Baseline}},
      "RowsIndexed" -> { }
     },
     GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}},
     GridDefaultElement -> Cell["\[Placeholder]", "TableText"]
    }
   ],
   Cell[
    StyleData["TableText"],
    DefaultInlineFormatType -> "DefaultInputInlineFormatType",
    AutoQuoteCharacters -> { },
    StyleMenuListing -> None
   ],
   Cell[
    StyleData["Hyperlink"],
    FontColor -> RGBColor[0.921569, 0.341176, 0.105882]
   ],
   Cell[
    StyleData["HyperlinkActive"],
    FontColor -> RGBColor[0.614379, 0.227451, 0.0705882]
   ],
   Cell[
    StyleData["InlineFormula"],
    FontSize -> 0.99*Inherited
   ],
   Cell[
    StyleData["ExampleDelimiter"],
    ShowCellBracket -> Automatic,
    CellMargins -> {{66, 14}, {-5, 0}},
    CellGroupingRules -> {"SectionGrouping", 58},
    ShowCellLabel -> False,
    CellLabelAutoDelete -> True,
    TabFilling -> "\[LongDash]\[NegativeThickSpace]",
    TabSpacings -> {76},
    StyleMenuListing -> None,
    FontFamily -> "Verdana",
    FontSize -> 9,
    FontWeight -> "Plain",
    FontSlant -> "Plain",
    FontColor -> GrayLevel[0.705882]
   ],
   Cell[
    StyleData[
     "ExampleText",
     StyleDefinitions -> StyleData["Text"]
    ]
   ],
   Cell[
    StyleData[
     "PageBreak",
     StyleDefinitions -> StyleData["ExampleDelimiter"]
    ],
    Selectable -> False,
    CellFrame -> {{0, 0}, {1, 0}},
    CellMargins -> {{66, 14}, {15, -5}},
    CellElementSpacings -> {"CellMinHeight" -> 1},
    Evaluatable -> True,
    CellEvaluationFunction -> (($Line = 0; ) &),
    CellFrameColor -> GrayLevel[77/85]
   ],
   Cell[
    StyleData["Subsection"],
    Evaluatable -> True,
    CellEvaluationFunction -> (($Line = 0; ) &),
    ShowCellLabel -> False
   ],
   Cell[
    StyleData["Subsubsection"],
    Evaluatable -> True,
    CellEvaluationFunction -> (($Line = 0; ) &),
    ShowCellLabel -> False
   ]
  },
  Visible -> False,
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (April 19, 2018)",
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"
 ]
]