moleculeLibraryFunctions = {{"isValidLibraryMol", {}, "Boolean", ""}, 
     {"clearConformers", {}, "Void", ""}, {"get3DConformerIndex", {}, 
      Integer, ""}, {"get2DConformerIndex", {}, Integer, ""}, 
     {"createMolFromSmiles", {"UTF8String", Integer}, "RawJSON", 
      "const char *inputString, mint hydrogens"}, {"createMolFromInChI", 
      {"UTF8String", Integer}, "RawJSON", 
      "const char *inputString, int hydrogenLevel"}, 
     {"createMolFromSequence", {"UTF8String", Integer}, "Void", 
      "mint flavor"}, {"atomCount", {"Boolean"}, Integer, 
      "bool explicitOnly"}, {"bondCount", {"Boolean"}, Integer, 
      "bool explicitOnly"}, {"atomPropertyAssociation", {}, "RawJSON", ""}, 
     {"generate2DCoordinates", {"Boolean", Integer, Integer, Integer, 
       "Boolean", "Boolean"}, "Void", "bool canonicalize, mint \
nFlipsPerSample, mint nSamples, mint randomseed, bool permuteDegree4Nodes, \
bool heavyAtomsFirst"}, {"generate2DCoordinatesCoordgen", {"RawJSON"}, 
      "Void", "raw_json params", <|"TemplateFile" -> "None"|>}, 
     {"get2DCoordinates", {}, {Real, 2}, ""}, {"minDistance2D", {}, Real, 
      ""}, {"get3DCoordinates", {}, {Real, 2}, ""}, 
     {"getAll3DCoordinates", {}, {Real, 3}, ""}, {"getPickle", {}, 
      "ByteArray", ""}, {"loadPickle", {"ByteArray"}, "Void", 
      "MRawArray pickle"}, {"getSmiles", {"Boolean", "Boolean", Integer, 
       "Boolean", "Boolean", "Boolean", {Integer, 1}}, "UTF8String", "bool \
doIsomeric, bool doKekule, mint rootedAtom,bool canonical, bool \
allBondsExplicit, bool allHsExplicit, mma::IntMatrixRef atoms"}, 
     {"jsonProperty", {"UTF8String"}, "RawJSON", "const char* propertyID"}, 
     {"createMolWithAtomsAndBonds", {{Integer, 2}, {Integer, 2}}, "Void", 
      "mma::IntMatrixRef atoms, mma::IntMatrixRef bonds"}, 
     {"addCoordinates", {{Real, 2}, "RawJSON"}, Integer, 
      "mma::RealMatrixRef positions,  raw_json params", 
      <|"CanonicalizeConformer" -> False|>}, {"addPropValue", 
      {"UTF8String", "UTF8String"}, "Void", 
      "const char* propName, const char* input"}, 
     {"getPropValue", {"UTF8String"}, "UTF8String", "const char* propName"}, 
     {"rdkitAtomProperty", {Integer, "UTF8String"}, "UTF8String", 
      "const char* propName"}, {"sanitize", {}, "RawJSON", ""}, 
     {"fixValence", {}, "Void", ""}, {"embedMol", {Integer, "RawJSON"}, 
      Integer, "mint method, raw_json opts", <|"MaxIterations" -> _Integer, 
       "NumThreads" -> _Integer, "RandomSeeding" -> _Integer, 
       "ClearConformers" -> True | False, "UseRandomCoordinates" -> 
        True | False, "BoxSizeMultiplier" -> _Real, 
       "RandomNegativeEigenValues" -> True | False, "NumZeroFail" -> 
        _Integer, "CoordMap" -> {{_Integer, {_Real, _Real, _Real}}..}, 
       "OptimizerForceTolerance" -> _Real, "IgnoreSmoothingFailures" -> 
        True | False, "EnforceChirality" -> True | False, 
       "UseExperimentalTorsionAnglePreferences" -> True | False, 
       "UseBasicKnowledge" -> True | False, "Verbose" -> True | False, 
       "BasinThreshold" -> _Real, "PruneRMSThreshold" -> _Real, 
       "OnlyHeavyAtomRMS" -> True | False, "ETversion" -> _Integer, 
       "ConformerCount" -> _Integer, "AlignConformers" -> True | False, 
       "EnergyMinimize" -> True | False|>}, {"getPlotData", {"Boolean"}, 
      "RawJSON", "bool kekulize"}, {"moleculeContainsQ", 
      {"iMolecule", "Boolean"}, "Boolean", 
      "Molecule queryMol, bool useChirality"}, {"findSubstructureMatches", 
      {"iMolecule", "Boolean", "Boolean", Integer}, {Integer, 3}, 
      "Molecule queryMol, bool useChirality, bool uniquify, mint maxMatches"}\
, {"moleculeSubstructureCounts", {{"iMolecule", 1}, "Boolean", "Boolean"}, 
      {Integer, 1}, 
      "std::vector<Molecule> queries, bool useChirality, bool uniquify"}, 
     {"assignStereochemistry", {"Boolean", "Boolean", "Boolean"}, "Void", 
      "bool cleanIt, bool force, bool flagPossibleCenters"}, 
     {"setAtomChirality", {{Integer, 1}}, "Void", "mma::IntTensorRef data"}, 
     {"setBondStereo", {{Integer, 1}}, "Void", "mma::IntTensorRef data"}, 
     {"getChiralElements", {}, "RawJSON", ""}, {"getStereoBonds", {}, 
      {Integer, 2}, ""}, {"createMolFromMolFile", {"UTF8String", "RawJSON"}, 
      "RawJSON", "const char *file, raw_json params", 
      <|"StrictParsing" -> False, "RemoveHydrogens" -> False, 
       "Sanitize" -> True, "File" -> True|>}, {"exportMolFile", {"RawJSON"}, 
      "UTF8String", <|"Dimension" -> 3 | 2 | 1, "Kekulized" -> True | False, 
       "IncludeStereo" -> True | False, "WriteFile" -> _String, 
       "FileName" -> _String|>}, {"createMolFromMol2File", 
      {"UTF8String", "RawJSON"}, "RawJSON", 
      "const char *file, raw_json params", <|"RemoveHydrogens" -> False, 
       "Sanitize" -> True, "File" -> True|>}, {"getMolJSON", {}, 
      "UTF8String", ""}, {"generateResonanceStructures", 
      {"iMolecule", "RawJSON"}, Integer, 
      "Molecule other, ResonanceStructureParams params", 
      <|"KekuleAll" -> True, "AllowChargeSeparation" -> True, 
       "AllowIncompleteOctets" -> True, "UnconstrainedCations" -> True, 
       "UnconstrainedAnions" -> True, "MaxStructs" -> 10|>}, 
     {"takeOwnershipOfResonanceStructure", {"iMolecule", Integer}, "Void", 
      "Molecule resStructHolder, mint structID"}, 
     {"findMCS", {{"iMolecule", 1}, "Boolean", Integer, "Boolean", "Boolean", 
       "Boolean", "Boolean"}, "UTF8String", "std::vector<Molecule> input,  \
bool maximizeBonds,\n\t\t\t\tmint timeout, bool matchValences, bool \
ringMatchesRingOnly,\n\t\t\t\tbool completeRingsOnly, bool matchChiralTag"}, 
     {"nFragments", {}, Integer, ""}, {"connectedComponents", {}, "RawJSON", 
      ""}, {"getAdjacencyMatrix", {"Boolean"}, {Real, 2}, 
      "bool useBondOrder"}, {"replaceSubstructs", {"iMolecule", "iMolecule", 
       "iMolecule", {Integer, 2}, "Boolean", "Boolean", "Boolean"}, Integer, 
      "Molecule mol, Molecule query, const char* replacement, \
mma::IntMatrixRef attachmentPoints, bool replaceAll, bool fixValences, bool \
deleteDuplicates"}, {"replacePart", {"iMolecule", {Integer, 2}, "iMolecule", 
       {Integer, 2}, "Boolean", "Boolean"}, Integer, "Molecule mol, \
mma::IntMatrixRef toReplace, const char* replacement, mma::IntMatrixRef \
attachmentPoints, bool replaceAll, bool fixValences"}, 
     {"getMolAtIdx", {Integer}, "Void", "mint idx"}, 
     {"atomAndBondMatches", {"iMolecule"}, "RawJSON", 
      "Molecule queryMolecule"}, {"getBondsList", {}, {Integer, 2}, ""}, 
     {"getAtomsList", {}, {Integer, 1}, ""}, {"atomRings", {}, "RawJSON", 
      ""}, {"hasImplicitHydrogens", {}, "Boolean", ""}, 
     {"aromaticMoleculeQ", {}, "Boolean", ""}, {"hasQuery", {}, "Boolean", 
      ""}, {"hasAnyHydrogens", {}, "Boolean", ""}, 
     {"createCopy", {"iMolecule", "RawJSON"}, "Void", 
      "Molecule molToCopy, raw_json parameters", <|"QuickCopy" -> True, 
       "MakeEditable" -> True|>}, {"createCopyWithNoHydrogens", 
      {"iMolecule", "Boolean", "Boolean"}, "Void", 
      "Molecule molToCopy, bool keepCoordinates, bool makeExplicit"}, 
     {"createCopyWithAutoHydrogens", {"iMolecule", "Boolean", "Boolean"}, 
      "Void", "Molecule molToCopy, bool keepCoordinates, bool makeExplicit"}, 
     {"createCopyWithAddedHydrogens", {"iMolecule", "Boolean"}, "Void", 
      "Molecule molToCopy, bool keepCoordinates"}, 
     {"createCopyKeepingHydrogens", {"iMolecule", {Integer, 1}, "Boolean", 
       "Boolean"}, "Void", "Molecule molToCopy, mma::IntTensorRef \
atomsToKeep, bool keepCoordinates, bool makeExplicit"}, 
     {"convertHydrogensToHairs", {}, "Void", ""}, 
     {"deleteAtoms", {{Integer, 1}, "RawJSON"}, "Void", 
      "mma::IntTensorRef atoms, raw_json params", 
      <|"RemoveOrphanedHs" -> True, "FillValences" -> True|>}, 
     {"replaceAtoms", {{Integer, 1}, {Integer, 2}, "RawJSON"}, "Void", 
      "mint_vec atomsToDelete, mma::IntMatrixRef newAtoms, raw_json params", 
      <|"AdjustHydrogens" -> True|>}, {"setNames", {"UTF8String"}, "Void", 
      "const char* input"}, {"getNames", {}, "RawJSON", ""}, 
     {"getAllowedValences", {Integer}, "RawJSON", "mint atomicNumber"}, 
     {"rankAtoms", {"RawJSON"}, {Integer, 1}, "const char* parameters", 
      <|"BreakTies" -> True, "IncludeChirality" -> True, 
       "IncludeIsotopes" -> True|>}, {"addBondsDeleteAtoms", 
      {{Integer, 2}, {Integer, 1}, "RawJSON"}, "Void", 
      "mma::IntMatrixRef bonds, mma::IntTensorRef atoms, raw_json params", 
      <|"RemoveHydrogens" -> True|>}, {"deleteBonds", {{Integer, 2}}, "Void", 
      "mma::IntMatrixRef bonds"}, {"getAtomBookmark", {Integer}, Integer, 
      "mint atomId"}, {"renumberAtoms", {{Integer, 1}}, "Void", 
      "mma::IntTensorRef newIndices"}, {"setStereoFrom3D", {}, "Void", ""}, 
     {"initSDFileParser", {"UTF8String", "RawJSON"}, Integer, 
      "const char *file, raw_json params", <|"StrictParsing" -> False, 
       "RemoveHydrogens" -> False, "Sanitize" -> True, "File" -> True|>}, 
     {"clearSDFileParser", {}, "Void", ""}, {"getMolFromSDFile", {Integer}, 
      "ByteArray", "mint idx"}, {"getSDFileText", {Integer}, "UTF8String", 
      "mint idx"}, {"getSDFileProperties", {}, "RawJSON", ""}, 
     {"writeSDFile", {"UTF8String", {"iMolecule", 1}, "RawJSON"}, "Void", 
      "const char* fileName, std::vector<Molecule *> mols, raw_json props"}, 
     {"initializeMMFF", {"RawJSON"}, "Void", "raw_json params", 
      <|"NonBondedThreshold" -> 100., "IgnoreInterfragInteractions" -> 
        False|>}, {"clearMMFF", {}, "Void", ""}, 
     {"calcEnergy", {{Real, 2, "Constant"}}, Real, 
      "mma::RealTensorRef coords"}, {"calcGrad", {{Real, 2}}, {Real, 2}, 
      "mma::RealMatrixRef coords"}, {"minimize", {Integer}, Integer, 
      "mint maxIter"}, {"addDistanceConstraint", {Integer, Integer, Real, 
       Real}, "Void", "mint id1, mint id2, double distance"}, 
     {"addAngleConstraint", {Integer, Integer, Integer, Real, Real}, "Void", 
      "mint id1, mint id2, mint id3, double angle"}, 
     {"addTorsionConstraint", {Integer, Integer, Integer, Integer, Real, 
       Real}, "Void", 
      "mint id1, mint id2, mint id3, mint id4, double angle"}, 
     {"clearConstraints", {}, "Void", ""}, {"insertRectangles", 
      {Integer, Integer, {Integer, 2}, Integer, "RawJSON"}, {Integer, 3}, "mi\
nt width, mint height, mma::IntMatrixRef rectangles, mint method, raw_json \
params", <|"SplitHeuristic" -> 3, "MergeFreeRectangles" -> True, 
       "AllowFlips" -> True|>}, {"kekuleBonds", {}, {Integer, 1}, ""}, 
     {"getPropertyNames", {"RawJSON"}, "RawJSON", "raw_json params", 
      <|"IncludePrivate" -> True, "IncludeComputed" -> True|>}, 
     {"setFlags", {"RawJSON"}, "Void", "raw_json params", 
      <|"AllowValenceErrors" -> True, "Cleanup" -> True, 
       "Properties" -> True, "SymmRings" -> True, "Kekulize" -> True, 
       "SetAromaticity" -> True, "FindRadicals" -> True, 
       "SetConjugation" -> True, "SetHybridization" -> True, 
       "CleanupChirality" -> True, "AdjustHs" -> True|>}, 
     {"getSanitizationFlags", {}, "RawJSON", ""}, {"getBondLengths", 
      {{Integer, 2}}, {Real, 1}, "mma::IntMatrixRef atoms"}, 
     {"getBondAngles", {{Integer, 2}}, {Real, 1}, "mma::IntMatrixRef atoms"}, 
     {"getDihedralAngles", {{Integer, 2}}, {Real, 1}, 
      "mma::IntMatrixRef atoms"}, {"getWilsonAngles", {{Integer, 2}}, 
      {Real, 1}, "mma::IntMatrixRef atoms"}, {"setTorsionAngle", 
      {Integer, Integer, Integer, Integer, Real}, "RawJSON", 
      "mint id1, mint id2, mint id3, mint id4, double value"}, 
     {"setBondAngle", {Integer, Integer, Integer, Real}, "RawJSON", 
      "mint id1, mint id2, mint id3, double value"}, 
     {"setBondLength", {Integer, Integer, Real}, "RawJSON", 
      "mint id1, mint id2, double value"}, {"createMolFromSmarts", 
      {"UTF8String"}, Integer, ""}, {"createQueryMolecule", {"RawJSON"}, 
      "Void", "raw_json data"}, {"jsonProperty3D", {"UTF8String"}, "RawJSON", 
      ""}, {"molImage", {Real, Real, Real}, {Real, 3}, 
      "double embed, double resolution, double rotationAngle"}, 
     {"realMatrixProperty", {"UTF8String"}, {Real, 2}, 
      "const char* property"}, {"realVectorProperty", {"UTF8String"}, 
      {Real, 1}, "const char* property"}, {"intVectorProperty", 
      {"UTF8String"}, {Integer, 1}, "const char* property"}, 
     {"realAtomProperty", {"UTF8String", {Integer, 1}}, {Real, 1}, 
      "const char* property, mma::IntTensorRef atomIds"}, 
     {"intAtomProperty", {"UTF8String", {Integer, 1}}, {Integer, 1}, 
      "const char* property, mma::IntTensorRef atomIds"}, 
     {"boolAtomProperty", {"UTF8String", {Integer, 1}}, "RawJSON", 
      "const char* property, mma::IntTensorRef atomIds"}, 
     {"getBondJSONProperty", {"UTF8String", {Integer, 2}}, "RawJSON", 
      "const char* prop, mma::IntMatrixRef bonds"}, 
     {"standardizeWithRxnSmartsList", {"RawJSON"}, "Void", ""}, 
     {"validProperties", {}, "Boolean", ""}, {"getCenterOfMass", 
      {{Integer, 1}}, {Real, 1}, atoms*mma::IntTensorRef}, 
     {"smilesToCanonicalSmiles", {"UTF8String"}, "UTF8String", 
      "const char* smi"}}
 
molPlotUtilityFunctions = {{"drawMolecule", {"iMolecule"}, "RawJSON", 
      "Molecule molecule"}, {"setOptions", {Integer, Real, Real, Real, 
       "Boolean", "Boolean", "Boolean", "Boolean", "Boolean", "Boolean", 
       {Integer, 1}}, "Void", "int dotsPerAngstrom, double dblBondOffset, \
double dblBondOffsetRing,double dblBondLengthFrac, bool colorDrawing, bool \
labelAtoms, bool showIndices, bool kekulize, bool rotate, bool \
showPhenylCircles", labeledCarbons*mma::IntTensorRef}, 
     {"setHighlights", {{Integer, 2}, {Integer, 1}, "iMolecule"}, "Void", 
      "mma::IntMatrixRef bonds, mma::IntTensorRef atoms, Molecule mol"}}
 
rdFingerprintLibraryFunctions = {{"setSimilarityMeasure", {Integer}, "Void", 
      "mint smindex : \
{Tanimoto,Cosine,Dice,Kulczynski,BraunBlanquet,Sokal,McConnaughey,Asymmetric,\
Russel} "}, {"setFingerprintFunction", {Integer}, "Void", "mint fpindex :  \
{RDKit,AtomPairs,TopologicalTorsions,MACCSKeys,MorganConnectivity,MorganFeatu\
re}"}, {"fingerprintSimilarity", {"iMolecule", "iMolecule"}, Real, 
      "Molecule mol1, Molecule mol2"}, {"buildNearestFunction", 
      {{"iMolecule", 1}, {Integer, 1}}, "Void", 
      "std::vector<Molecule> molList, mma::IntTensorRef indices"}, 
     {"queryNearestFunction", {"iMolecule", Integer}, {Integer, 1}, 
      "Molecule query, mint numReturn"}, {"getFPType", {}, Integer, ""}, 
     {"getNumBits", {}, Integer, ""}, {"getOnBits", {Integer}, {Integer, 1}, 
      "mint which"}}
 
cacheManagerFunctions = {{"setFlag", {}, "Void", ""}}
