@@resource PresenterToolExpressions

(*
	PresenterTools`

	Toolbars:

	ContextMenus:
	"SlideBreakContextMenu"

*)

{
	"TestCell" -> Cell[BoxData["2 + 2"], "Input"],

	(* ActionMenu within 'automatic slide break' cell *)
	"SlideBreakCellButton" ->
		TagBox[
		TagBox[
		TooltipBox[
			ActionMenuBox[
				PaneBox[
					DynamicBox@FEPrivate`ImportImage[FrontEnd`FileName[{"PresenterTools"}, "SlideBreakCellButton.png"]]],
						{
						DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlidePalette"]] :> (
							SelectionMove[ButtonNotebook[], After, ButtonCell, AutoScroll -> False];
							PresenterTools`InsertSlideBreak[EvaluationNotebook[]]
							),
						DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlidePalette"]] :> (
							SelectionMove[ButtonNotebook[], After, ButtonCell, AutoScroll -> False];
							PresenterTools`InsertSlideBreak[EvaluationNotebook[], "IncludeBackground" -> True]
							),
				   		(* RemoveThisSlideBreakMenuItem *)
						DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "RemoveThisSlideBreakMenuItem"]] :> (
							SelectionMove[EvaluationNotebook[], All, ButtonCell, AutoScroll -> False];
							PresenterTools`Private`SelectParentCell[EvaluationNotebook[]];
							PresenterTools`Private`SelectParentCell[EvaluationNotebook[]];
(*							PresenterTools`SelectCellBracket[EvaluationNotebook[]];*)
							PresenterTools`RemoveSlideBreak[EvaluationNotebook[], "Single"];
							SelectionMove[EvaluationNotebook[], Before, Cell, AutoScroll -> False];
							),
						Delimiter,
						(* OpenAutomaticSlideBreakDialogMenuItem *)
						DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OpenAutomaticSlideBreakDialogMenuItem"]] :> (
							(* PresenterTools`AutomaticSlideBreakDialog[EvaluationNotebook[]] *)
							PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SlideBreakDefaults", "UseNotebookPut" -> False]
							)
						},
				Appearance->"Frameless",
				AutoAction->False,
				Background->None,
				ImageSize->{Automatic, Automatic},
				Evaluator->Automatic
				],
			DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSlideBreakOptions"]],
			TooltipDelay->0.25
		], Annotation[#, DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSlideBreakOptions"]], "Tooltip"]&
		], MouseAppearanceTag["LinkHand"]
		],

	(* ActionMenu within 'manual slide break' cell *)
	"ManualSlideBreakCellButton" ->
	TagBox[
		TagBox[
		TooltipBox[
		ActionMenuBox[
		  PaneBox[
		   DynamicBox@FEPrivate`ImportImage[FrontEnd`FileName[{"PresenterTools"}, "SlideBreakCellButton.png"]],
		   		FrameMargins -> {{40, 20}, {Inherited, Inherited}}], {
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlideMenu"]] :> (
					SelectionMove[ButtonNotebook[], After, ButtonCell, AutoScroll -> False];
					PresenterTools`InsertSlideBreak[EvaluationNotebook[]]
					),
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlideWithBackgroundMenu"]] :> (
					SelectionMove[ButtonNotebook[], After, ButtonCell, AutoScroll -> False];
					PresenterTools`InsertSlideBreak[EvaluationNotebook[], "IncludeBackground" -> True]
					),
		   		(* RemoveThisSlideBreakMenuItem *)
		    	DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "RemoveThisSlideBreakMenuItem"]] :>
					(
					SelectionMove[ButtonNotebook[], All, ButtonCell, AutoScroll -> False];
					PresenterTools`Private`SelectParentCell[EvaluationNotebook[]];
(*					PresenterTools`SelectCellBracket[EvaluationNotebook[]];*)
					FrontEndTokenExecute["Clear"]
					),
(*				Delimiter,
		    	"Remove all manual slide breaks":>
					(
					NotebookFind[ButtonNotebook[], "SlideShowNavigationBar", All, CellStyle];
					FrontEndTokenExecute["Clear"]
					),*)
		      	Delimiter,
		      	(* OpenAutomaticSlideBreakDialogMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OpenAutomaticSlideBreakDialogMenuItem"]] :> (
		  			(* PresenterTools`AutomaticSlideBreakDialog[EvaluationNotebook[]] *)
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SlideBreakDefaults", "UseNotebookPut" -> False]
		  			)},
		  Appearance->"Frameless",
		  AutoAction->False,
		  Background->None,
		  ImageSize->{Automatic, Automatic},
		  Evaluator->Automatic
		  ],
			DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSlideBreakOptions"]],
			TooltipDelay->0.25
		], Annotation[#, DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSlideBreakOptions"]], "Tooltip"]&
		], MouseAppearanceTag["LinkHand"]
		],





(*
	New Design from billys
*)
"SlideshowPresentationNavigationBar" ->
  FEPrivate`If[FrontEnd`CurrentValue[FrontEnd`EvaluationNotebook[],
     {TaggingRules, "PresenterSettings", "ShowNavigationBar"}] =!= True,
   Cell["", CellOpen -> False, CellMargins -> {{-1, -1}, {-1, -1}},
    CellElementSpacings -> {"ClosedCellHeight" -> 0}],

Cell[BoxData[TagBox[GridBox[{{
(*
StyleBox["", FontSize -> 9, StripOnInput -> False],
*)
      TemplateBox[{
       "\"\[ThickSpace]\[ThickSpace]\[ThickSpace]\"",
DynamicModuleBox[{$CellContext`cells$$ = {}, $CellContext`tagFind$$ =
   False}, TagBox[
  PaneSelectorBox[{False ->
     DynamicBox[
              PopupMenuBox[
       Dynamic[0,
        With[{$CellContext`nb$ = ButtonNotebook[]},
          SelectionMove[$CellContext`nb$, Before, Notebook,
           AutoScroll -> False];
          If[$CellContext`tagFind$$,
           Do[NotebookFind[$CellContext`nb$, "SlideShowHeader", Next,
             CellTags, AutoScroll -> False], {#}],
           Do[NotebookFind[$CellContext`nb$, "SlideShowNavigationBar",
              Next, CellStyle, AutoScroll -> False], {#}]];

          SelectionMove[$CellContext`nb$, After, Cell,
           AutoScroll -> False];

          NotebookWrite[$CellContext`nb$,
           Cell["", Deletable -> True, ShowCellBracket -> False],
           All]; NotebookDelete[$CellContext`nb$];

          SelectionMove[$CellContext`nb$,
           If[$CellContext`tagFind$$, Previous, Next], Cell];

          SelectionMove[$CellContext`nb$, Before,
           Cell]] &], $CellContext`cells$$,
       ToBoxes[Panel[
         Style[RawBoxes[

                   PaneBox[
                    StyleBox[
             RowBox[{DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterPrefixText"]],
                    DynamicBox[
                CurrentValue[{"CounterValue",
                  "SlideShowNavigationBar"}]],
                    DynamicBox[
                FEPrivate`FrontEndResource["SlideshowToolbarText",
                    "SlideshowToolbarCounterText"]],
                    DynamicBox[
                CurrentValue[{"MaxCounterValue",
                  "SlideShowNavigationBar"}]]}], "ControlStyle", 10],
            Alignment -> Left, ImageSize -> {{100, 200}, All}]],
                  GrayLevel[0.5]],
                 Appearance -> {"Default" -> Image[CompressedData["
              1:\
eJzNlktLAlEUgLVatChs10YCd4IvfL8fiQ8UVJjBwFrESBa5MNAgAxfSpsB2
              4k4UN/4TxX8TrhVO55jCOEHOxFxq8Q0zd84939y5Z+5cQ/\
mBu93TaDSNQzxw
              wtN5vS488yd4Uaw17u9qlZtM7bFyV6n7yvvYeIqcIQcIAOzkK2x33G/\
QarU6
              5AppIe8q01rn1kmcx8iL3++f5fP5Oc/\
zwHGcauRyubnX652Rg1wi77XP55sW
              CgXIZrOQSqUgmUz+SCKRkA3FU0673T4ll8j7hs+\
0pHuxWAwikQiEw2FVoZzR
              aHRJrk294HknnU6v7gWDQaaQS+yNx+Or9kAgwBSpF98BYF0xZ+\
MlqNZpDrDm
              mEMu8XiVeLvdLozH4290Oh05XvF7VjRe+ib7/\
f6Ws9frQSaTUTzeUCgEHo9H
              NoIgwHA4XDkHgwEUi0VZ/\
aR1RbXsdrsVUa1WYTQaQalUkt1H6qVaczqdiqG1
              SEm81IvrJDgcDsW4XC5F8VIvzTmun8yRemnObTYbc/\
6J9xXnaWG1WoElFotl
              QS6R99JgMEzMZjOwRK/XT8gl+\
v8eIW1qNxqNHyaTCdSEcq6dbXJJ9jrkvkCa
DPZXzXXuLedf7Cc/ATG2iL4=
                                  "], "Byte", ColorSpace -> "RGB",
             Interleaving -> True]}]], Appearance -> None,
       ImageSize -> Automatic], SynchronousUpdating -> True],
              True -> DynamicBox[
              PopupMenuBox[
       Dynamic[0,
        With[{$CellContext`nb$ = ButtonNotebook[]},
          SelectionMove[$CellContext`nb$, Before, Notebook,
           AutoScroll -> False];
          If[$CellContext`tagFind$$,
           Do[NotebookFind[$CellContext`nb$, "SlideShowHeader", Next,
             CellTags, AutoScroll -> False], {#}],
           Do[NotebookFind[$CellContext`nb$, "SlideShowNavigationBar",
              Next, CellStyle, AutoScroll -> False], {#}]];

          SelectionMove[$CellContext`nb$, After, Cell,
           AutoScroll -> False];

          NotebookWrite[$CellContext`nb$,
           Cell["", Deletable -> True, ShowCellBracket -> False],
           All]; NotebookDelete[$CellContext`nb$];

          SelectionMove[$CellContext`nb$,
           If[$CellContext`tagFind$$, Previous, Next], Cell];

          SelectionMove[$CellContext`nb$, Before,
           Cell]] &], $CellContext`cells$$,
       ToBoxes[Panel[
         Style[RawBoxes[
                   PaneBox[
                    StyleBox[
             RowBox[{DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterPrefixText"]],
                    DynamicBox[
                CurrentValue[{"CounterValue",
                  "SlideShowNavigationBar"}]],
                    DynamicBox[
                FEPrivate`FrontEndResource["SlideshowToolbarText",
                    "SlideshowToolbarCounterText"]],
               DynamicBox[
                CurrentValue[{"MaxCounterValue",
                  "SlideShowNavigationBar"}]]}], "ControlStyle", 10],
            Alignment -> Left, ImageSize -> {{100, 200}, All}]],
                  GrayLevel[0.8]],
                 Appearance -> {"Default" -> Image[CompressedData["
              1:\
eJzFljlrAkEUgDVJkSLBdOkCCtYWnnjfB6jFihFNEaIxEhADGowBBUmTQFL4
              P6xt7ZRttBRrG8tgrfDyntGwmUY37JDi22N25n3MzJvZ0eYfhLsDlUpV\
O8aL
              cPPkq1ZvnlNn+JKu1O5LleJtrPJYLBWrtvwhFp4jF8gRAgA7+\
a62u95fUKvV
              GuQKaSIfCtPcxNYwzlPkxe12i+\
l0epHL5SCbzSpGKpVaOJ1OkRzkknivsXyY
              yWRAEARIJpOQSCQgHo8rAsWimBaLZUguifcN+\
7mib9FoFMLhMIRCIUWhmJFI
              ZEWubb7g8zs56VsgEOAKuaTeWCy2Lvf7/\
VxhvTgG4PP5uLP1EpTrNAcej4c7
              5JL2V4631+vBeDz+YTQare/dbncfr3ScZfW3UCiAKIowmUx+\
6Pf7QOtQbn+D
              wSDgvrE3rVYLptMpzGaztbdcLu/Vjs0rymWXyyWLTqcD8/\
kc6vX63m1YL+U4
              7lmyoLVHe6qcNqyXctzhcMiG5kxOfdbr9XrBbrdzh/\
XSnNtsNu6wXppzq9XK
              Hcb7imO/xP8U8MRsNi/JJfHm9Hr9wGQyAU90Ot2AXJL/\
7wnSpnKDwfBpNBpB
SSimVqslZ5tczFmH3JdIg8P5qrGJ/cv5H+fJL0Iiv9I=
                                  "], "Byte", ColorSpace -> "RGB",
             Interleaving -> True]}]], Appearance -> None,
       ImageSize -> Automatic], SynchronousUpdating -> True]},
   Dynamic[CurrentValue["MouseOver"]], ImageSize -> Automatic,
           FrameMargins -> 0],
  EventHandlerTag[{"MouseDown" :>
     Module[{$CellContext`cnt$, $CellContext`nb$ =
        InputNotebook[], $CellContext`allcls$, \
$CellContext`ssNavBarCls$, $CellContext`ssNavBarPositions$}, \
$CellContext`cells$$ = {}; $CellContext`allcls$ =
       Cells[$CellContext`nb$]; $CellContext`ssNavBarCls$ =
       Cells[$CellContext`nb$, CellStyle -> "SlideShowNavigationBar",
        CellTags ->
         "SlideShowHeader"]; $CellContext`ssNavBarPositions$ =
       Map[Position[$CellContext`allcls$, #] &, \
$CellContext`ssNavBarCls$]; $CellContext`cnt$ =
       Length[$CellContext`ssNavBarPositions$];
      If[$CellContext`cnt$ > 0, $CellContext`ssNavBarPositions$ =
        Map[First[Flatten[#]] &, $CellContext`ssNavBarPositions$];
       Module[{$CellContext`ssnbPos$ = 0},
        Table[$CellContext`ssnbPos$ =
          Part[$CellContext`ssNavBarPositions$, $CellContext`i];
         AppendTo[$CellContext`cells$$, $CellContext`i ->
           If[Or[And[$CellContext`i < $CellContext`cnt$, \
$CellContext`ssnbPos$ + 1 ===
               Part[$CellContext`ssNavBarPositions$, $CellContext`i +
                 1]], And[$CellContext`i === $CellContext`cnt$,
              Length[$CellContext`allcls$] === \
$CellContext`ssnbPos$]],
            StyleBox[
             ToBoxes[
              StringForm[
               FrontEndResource["SlideshowToolbarText",
                "SlideshowToolbarEmptySlide"], $CellContext`i]],
             FontSlant -> Italic, FontColor -> GrayLevel[0.7]],
            Replace[
             NotebookRead[
              Part[$CellContext`allcls$, $CellContext`ssnbPos$ +
                1]], {Cell[Pattern[$CellContext`str, Blank[String]],
                BlankNullSequence[]] :> $CellContext`str,
              Cell[Alternatives[BoxData, TextData][
                 Pattern[$CellContext`cont, Blank[List]]],
                BlankNullSequence[]] :> RowBox[$CellContext`cont],
              Cell[Alternatives[BoxData, TextData][
                 Pattern[$CellContext`cont, Blank[]]],
                BlankNullSequence[]] :>
               RowBox[{$CellContext`cont}]}]]], {$CellContext`i, \
$CellContext`cnt$}]]]; Null], PassEventsDown -> True,
    EvaluationOrder -> Before, Method -> "Preemptive",
    PassEventsUp -> True}]], DynamicModuleValues :> {}]
},
       "RowDefault"],

      TagBox[GridBox[{{PaneBox[TagBox[GridBox[{{ButtonBox[FrameBox[
                 ItemBox[StyleBox[GraphicsBox[{Thickness[
                      0.07692307692307693], {FaceForm[{RGBColor[0, 0, 0],
                        Opacity[0]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0},
                         {0, 1, 0}}}, {{{0., 0.}, {13., 0.}, {13., 14.},
                         {0., 14.}}}]}, {FaceForm[{RGBColor[1., 1., 1.],
                        Opacity[1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3},
                         {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                          3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0},
                         {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}},
                       {{{8.853500000000002, 3.8535}, {9.048500000000002,
                          3.6585}, {9.048500000000002, 3.3415},
                         {8.853500000000002, 3.1465}, {8.755500000000001,
                          3.0484999999999998}, {8.627500000000001, 2.9995},
                         {8.499500000000003, 2.9995}, {8.372500000000002,
                          2.9995}, {8.244500000000002, 3.0484999999999998},
                         {8.146500000000001, 3.1465}, {4.999500000000003,
                          6.2924999999999995}, {4.999500000000003, 3.4995},
                         {4.999500000000003, 3.2235}, {4.776500000000002,
                          2.9995}, {4.499500000000003, 2.9995},
                         {4.223500000000002, 2.9995}, {3.999500000000003,
                          3.2235}, {3.999500000000003, 3.4995},
                         {3.999500000000003, 10.4995}, {3.999500000000003,
                          10.7765}, {4.223500000000002, 10.9995},
                         {4.499500000000003, 10.9995}, {4.776500000000002,
                          10.9995}, {4.999500000000003, 10.7765},
                         {4.999500000000003, 10.4995}, {4.999500000000003,
                          7.7075}, {8.146500000000001, 10.8535},
                         {8.341500000000002, 11.048499999999999},
                         {8.658500000000002, 11.048499999999999},
                         {8.853500000000002, 10.8535}, {9.048500000000002,
                          10.6585}, {9.048500000000002, 10.3415},
                         {8.853500000000002, 10.1465}, {5.707500000000002,
                          6.999499999999999}}}]}}, AspectRatio -> Automatic,
                    ImageSize -> {13., 14.}, PlotRange -> {{0., 13.},
                      {0., 14.}}], StripOnInput -> False], StripOnInput ->
                   False], Background -> Dynamic[If[Dynamic[FEPrivate`And[CurrentValue["MouseOver"],CurrentValue["NotebookSelected"]]] , RGBColor[0.39215, 0.39215, 0.39215],
                    RGBColor[0.2, 0.2, 0.2]]], FrameStyle -> None,
                 FrameMargins -> {{0.5, 0.5}, {2, 2}}, RoundingRadius -> 3,
                 StripOnInput -> False], ButtonFunction :> FrontEndExecute[
                  FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
                   "ScrollPageFirst"]], Appearance -> {"Default" -> None,
                  "Pressed" -> None}, Tooltip -> Dynamic[
                  FEPrivate`FrontEndResource["SlideshowToolbarText",
                   "TooltipFirstSlide"]], TooltipDelay -> 0.25, Evaluator ->
                 Automatic, Method -> "Preemptive"], ButtonBox[FrameBox[
                 ItemBox[StyleBox[GraphicsBox[{Thickness[
                      0.07692307692307693], {FaceForm[{RGBColor[0., 0, 0],
                        Opacity[0]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0},
                         {0, 1, 0}}}, {{{0., 0.}, {13., 0.}, {13., 14.},
                         {0., 14.}}}]}, {FaceForm[{RGBColor[1., 1., 1.],
                        Opacity[1.]}], FilledCurveBox[{{{1, 4, 3}, {0, 1, 0},
                         {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{8.5, 3.},
                         {8.372, 3.}, {8.244, 3.049}, {8.146, 3.146},
                         {4.646000000000001, 6.646}, {4.451, 6.842}, {4.451,
                          7.1579999999999995}, {4.646000000000001,
                          7.353999999999999}, {8.146, 10.854}, {8.342,
                          11.049}, {8.658, 11.049}, {8.854, 10.854}, {9.049,
                          10.658}, {9.049, 10.341999999999999}, {8.854,
                          10.146}, {5.707, 7.}, {8.854, 3.854}, {9.049,
                          3.658}, {9.049, 3.342}, {8.854, 3.146}, {8.756,
                          3.049}, {8.628, 3.}, {8.5, 3.}}}]}}, AspectRatio ->
                     Automatic, ImageSize -> {13., 14.}, PlotRange ->
                     {{0., 13.}, {0., 14.}}], StripOnInput -> False],
                  StripOnInput -> False], Background -> Dynamic[
                   If[Dynamic[FEPrivate`And[CurrentValue["MouseOver"],CurrentValue["NotebookSelected"]]] , RGBColor[0.39215, 0.39215,
                     0.39215], RGBColor[0.2, 0.2, 0.2]]], FrameStyle -> None,
                 FrameMargins -> {{0.5, 0.5}, {2, 2}}, RoundingRadius -> 3,
                 StripOnInput -> False], ButtonFunction :> FrontEndExecute[
                  FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
                   "ScrollPagePrevious"]], Appearance -> {"Default" -> None,
                  "Pressed" -> None}, Tooltip -> Dynamic[
                  FEPrivate`FrontEndResource["SlideshowToolbarText",
                   "TooltipPreviousSlide"]], TooltipDelay -> 0.25,
                Evaluator -> Automatic, Method -> "Preemptive"], ButtonBox[
                FrameBox[ItemBox[StyleBox[GraphicsBox[{Thickness[
                      0.07692307692307693], {FaceForm[{RGBColor[0, 0, 0],
                        Opacity[0]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0},
                         {0, 1, 0}}}, {{{0., 0.}, {13., 0.}, {13., 14.},
                         {0., 14.}}}]}, {FaceForm[{RGBColor[1., 1., 1.],
                        Opacity[1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3},
                         {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4., 1.},
                         {3.7439999999999998, 1.}, {3.488, 1.098}, {3.293,
                          1.2930000000000001}, {2.902, 1.684}, {2.902,
                          2.316}, {3.293, 2.707}, {7.586, 7.}, {3.293,
                          11.293}, {2.902, 11.684}, {2.902, 12.316}, {3.293,
                          12.706999999999999}, {3.684, 13.097999999999999},
                         {4.316, 13.097999999999999}, {4.707,
                          12.706999999999999}, {9.707, 7.707},
                         {10.097999999999999, 7.316}, {10.097999999999999,
                          6.683999999999999}, {9.707, 6.293}, {4.707,
                          1.2930000000000001}, {4.5120000000000005, 1.098},
                         {4.256, 1.}, {4., 1.}}}]}}, AspectRatio ->
                     Automatic, ImageSize -> {13., 14.}, PlotRange ->
                     {{0., 13.}, {0., 14.}}], StripOnInput -> False],
                  StripOnInput -> False], Background -> Dynamic[
                   If[Dynamic[FEPrivate`And[CurrentValue["MouseOver"],CurrentValue["NotebookSelected"]]] , RGBColor[0.39215, 0.39215,
                     0.39215], RGBColor[0.2, 0.2, 0.2]]], FrameStyle -> None,
                 FrameMargins -> {{0.5, 0.5}, {2, 2}}, RoundingRadius -> 3,
                 StripOnInput -> False], ButtonFunction :> FrontEndExecute[
                  FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
                   "ScrollPageNext"]], Appearance -> {"Default" -> None,
                  "Pressed" -> None}, Tooltip -> Dynamic[
                  FEPrivate`FrontEndResource["SlideshowToolbarText",
                   "TooltipNextSlide"]], TooltipDelay -> 0.25, Evaluator ->
                 Automatic, Method -> "Preemptive"], ButtonBox[FrameBox[
                 ItemBox[StyleBox[GraphicsBox[{Thickness[
                      0.07692307692307693], {FaceForm[{RGBColor[0., 0, 0],
                        Opacity[0]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0},
                         {0, 1, 0}}}, {{{0., 0.}, {13., 0.}, {13., 14.},
                         {0., 14.}}}]}, {FaceForm[{RGBColor[1., 1., 1.],
                        Opacity[1.]}], FilledCurveBox[{{{0, 2, 0}, {1, 3, 3},
                         {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3},
                         {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                          3}}}, {{{9., 10.5}, {9., 3.5}, {9.,
                          3.2239999999999993}, {8.776, 3.}, {8.5, 3.},
                         {8.224, 3.}, {8., 3.2239999999999993}, {8., 3.5},
                         {8., 6.293}, {4.854, 3.146000000000001}, {4.756,
                          3.0489999999999995}, {4.628, 3.}, {4.5, 3.},
                         {4.372000000000001, 3.}, {4.244,
                          3.0489999999999995}, {4.146000000000001,
                          3.146000000000001}, {3.9509999999999996,
                          3.3420000000000005}, {3.9509999999999996,
                          3.6580000000000004}, {4.146000000000001, 3.854},
                         {7.293, 7.}, {4.146000000000001, 10.146},
                         {3.9509999999999996, 10.342}, {3.9509999999999996,
                          10.658}, {4.146000000000001, 10.854},
                         {4.3420000000000005, 11.049}, {4.658, 11.049},
                         {4.854, 10.854}, {8., 7.707}, {8., 10.5}, {8.,
                          10.776}, {8.224, 11.}, {8.5, 11.}, {8.776, 11.},
                         {9., 10.776}, {9., 10.5}}}]}}, AspectRatio ->
                     Automatic, ImageSize -> {13., 14.}, PlotRange ->
                     {{0., 13.}, {0., 14.}}], StripOnInput -> False],
                  StripOnInput -> False], Background -> Dynamic[
                   If[Dynamic[FEPrivate`And[CurrentValue["MouseOver"],CurrentValue["NotebookSelected"]]] , RGBColor[0.39215, 0.39215,
                     0.39215], RGBColor[0.2, 0.2, 0.2]]], FrameStyle -> None,
                 FrameMargins -> {{0.5, 0.5}, {2, 2}}, RoundingRadius -> 3,
                 StripOnInput -> False], ButtonFunction :> FrontEndExecute[
                  FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
                   "ScrollPageLast"]], Appearance -> {"Default" -> None,
                  "Pressed" -> None}, Tooltip -> Dynamic[
                  FEPrivate`FrontEndResource["SlideshowToolbarText",
                   "TooltipLastSlide"]], TooltipDelay -> 0.25, Evaluator ->
                 Automatic, Method -> "Preemptive"]}}, GridBoxAlignment ->
              {"Columns" -> {{Left}}}, AutoDelete -> False,
             GridBoxBackground -> {"Columns" -> {{RGBColor[0.2, 0.2, 0.2]}}},
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
             GridBoxSpacings -> {"Columns" -> {0, {0.5}, 0.}, "Rows" ->
                {0., {0.2}, 0.}}], "Grid"], ContentPadding -> False,
           FrameMargins -> {{0, 0.}, {0, 0}}, ImageMargins ->
            {{0, 0}, {0, 0}}]}}, AutoDelete -> False, GridBoxBackground ->
         {"Columns" -> {{RGBColor[0.2, 0.2, 0.2]}}}, GridBoxItemSize ->
         {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}], "Grid"],
      DynamicBox[ToBoxes[If[TrueQ[CurrentValue[EvaluationNotebook[],
            WindowSize] =!= {Full, Full}], ActionMenu[MouseAppearance[
           Framed[Style[Graphics[{Thickness[0.06666666666666667], {
                FaceForm[{RGBColor[0., 0, 0], Opacity[0]}], FilledCurve[
                 {{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {15., 0.},
                   {15., 12.}, {0., 12.}}}]}, {FaceForm[{RGBColor[1., 1.,
                   1.], Opacity[1.]}], FilledCurve[{{{0, 2, 0}, {0, 1, 0},
                   {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0},
                   {0, 1, 0}, {0, 1, 0}}}, {{{2.5, 8.2}, {12.5, 8.2},
                   {12.5, 9.2}, {2.5, 9.2}}, {{12.5, 6.2}, {2.5, 6.2},
                   {2.5, 5.2}, {12.5, 5.2}}, {{2.5, 3.2}, {12.5, 3.2},
                   {12.5, 2.2}, {2.5, 2.2}}}]}}, AspectRatio -> Automatic,
              ImageSize -> {15., 12.}, PlotRange -> {{0., 15.}, {0., 12.}}],
             Magnification -> 1], Background -> Dynamic[If[Dynamic[FEPrivate`And[CurrentValue["MouseOver"],CurrentValue["NotebookSelected"]]] , RGBColor[0.39215, 0.39215, 0.39215], RGBColor[
                0.2, 0.2, 0.2]]], RoundingRadius -> 3, FrameStyle -> None,
            ImageMargins -> {{0, 20}, {0, 0}}, ContentPadding -> False,
            FrameMargins -> {{2, 2}, {3, 3}}], "LinkHand"],
          {Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "FirstSlideMenuItem"]] :> FrontEndExecute[
             FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPageFirst"]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "PreviousSlideMenuItem"]] :>
            FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPagePrevious"]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "NextSlideMenuItem"]] :>
            FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPageNext"]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "LastSlideMenuItem"]] :>
            FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPageLast"]], Delimiter,
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "NavigationBarMenuItem"]] :> PresenterTools`ToggleNavigationBar[
             FrontEnd`EvaluationNotebook[]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "ToggleStylePaletteMenuItem"]] :>
            FrontEndExecute[{FrontEnd`NotebookOpen[FrontEnd`FindFileOnPath[
                "PresenterToolsStylePalette.nb", "PalettePath"]]}],
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "SideNotesMenuItem"]] :> PresenterTools`OpenPresenterPalette[
             EvaluationNotebook[], "SideNotesPalette"],
				(* SlideOutlinePaletteMenuItem *)
				Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
             Delimiter,
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "ToggleFullScreen"]] :> (CurrentValue[FrontEnd`EvaluationNotebook[
                ], {TaggingRules, "PresenterSettings",
                "ShowToolbar"}] = False;
             PresenterTools`NotebookToggleFullScreenWrapper[FrontEnd`EvaluationNotebook[]]),
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "EndPresentation"]] :> PresenterTools`EndPresentation[FrontEnd`EvaluationNotebook[], "NavBar"], Delimiter,
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "PresentationControlsMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "PresenterControlsPalette"]
              }, Appearance -> "Frameless",
          AutoAction -> False, Background -> None, ImageSize ->
           {Automatic, Automatic},
           Method -> "Queued"], ActionMenu[MouseAppearance[
           Framed[Style[Graphics[{Thickness[0.06666666666666667], {
                FaceForm[{RGBColor[0., 0, 0], Opacity[0]}], FilledCurve[
                 {{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {15., 0.},
                   {15., 12.}, {0., 12.}}}]}, {FaceForm[{RGBColor[1., 1.,
                   1.], Opacity[1.]}], FilledCurve[{{{0, 2, 0}, {0, 1, 0},
                   {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0},
                   {0, 1, 0}, {0, 1, 0}}}, {{{2.5, 8.2}, {12.5, 8.2},
                   {12.5, 9.2}, {2.5, 9.2}}, {{12.5, 6.2}, {2.5, 6.2},
                   {2.5, 5.2}, {12.5, 5.2}}, {{2.5, 3.2}, {12.5, 3.2},
                   {12.5, 2.2}, {2.5, 2.2}}}]}}, AspectRatio -> Automatic,
              ImageSize -> {15., 12.}, PlotRange -> {{0., 15.}, {0., 12.}}],
             Magnification -> 1], Background -> Dynamic[If[Dynamic[FEPrivate`And[CurrentValue["MouseOver"],CurrentValue["NotebookSelected"]]] , RGBColor[0.39215, 0.39215, 0.39215], RGBColor[
                0.2, 0.2, 0.2]]], RoundingRadius -> 3, FrameStyle -> None,
            ImageMargins -> {0}, ContentPadding -> False, FrameMargins ->
             {{2, 2}, {3, 3}}], "LinkHand"],
          {Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "FirstSlideMenuItem"]] :> FrontEndExecute[
             FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPageFirst"]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "PreviousSlideMenuItem"]] :>
            FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPagePrevious"]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "NextSlideMenuItem"]] :>
            FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPageNext"]], Dynamic[FEPrivate`FrontEndResource[
              "PresenterToolStrings", "LastSlideMenuItem"]] :>
            FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[],
              "ScrollPageLast"]], Delimiter,
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "NavigationBarMenuItem"]] :> PresenterTools`ToggleNavigationBar[
             FrontEnd`EvaluationNotebook[]], Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings", "StylePaletteMenuItem"]] :>
            FrontEndExecute[{FrontEnd`NotebookOpen[FrontEnd`FindFileOnPath[
                "PresenterToolsStylePalette.nb", "PalettePath"]]}],
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "SideNotesMenuItem"]] :> PresenterTools`OpenPresenterPalette[
             EvaluationNotebook[], "SideNotesPalette"],
			(* SlideOutlinePaletteMenuItem *)
			Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
				PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
             Delimiter,
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "EndPresentation"]] :> PresenterTools`EndPresentation[FrontEnd`EvaluationNotebook[], "NavBarFullScreen"], Delimiter,
           Dynamic[FEPrivate`FrontEndResource["PresenterToolStrings",
              "PresentationControlsMenuItem"]] :>
				PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "PresenterControlsPalette"]
              }, Appearance -> "Frameless",
          AutoAction -> False, Background -> None, ImageSize ->
           {Automatic, Automatic},
           Method -> "Queued"]], StandardForm]]}},
    GridBoxAlignment -> {"Columns" -> {Left, Center, Right}},
    AutoDelete -> False, GridBoxBackground ->
     {"Columns" -> {{RGBColor[0.2, 0.2, 0.2]}}},
    GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> False},
    GridBoxItemSize -> {"Columns" -> {Scaled[0.3035], Scaled[0.4],
        Scaled[0.3]}}, GridBoxSpacings -> {"Columns" -> {0.35, {0.}, 0.},
      "Rows" -> {0.1, {0.2}, 0.2}}, FrameStyle ->
     Directive[RGBColor[0.2, 0.2, 0.2]]], "Grid"]], FontSize -> 9,
 Background -> RGBColor[0.2, 0.2, 0.2], Magnification -> 1,
 CellFrame -> False, CellMargins -> {{-1, -1}, {0, -1}},
 CellFrameMargins -> {{5, 20}, {0, 0}}, CellFrameColor ->
  RGBColor[0.2, 0.2, 0.2]]
],








"SlideBreakNinePatchAppearance" ->
{"Default" -> Image[CompressedData["
  1:eJztXFtvVFUUbrwnRmMixicgGB9wHvRBSEzMQHzR0seCT1wSCNOiCSUBLTUi
  CWChgA9qYoxPxEv02Qd/gb+BO7SFdmbOFNIWSIzhdtzrzNnTdb6utc8+M4dO
  hXOSz733un5rneXuzCS6Zte+/oGnenp6Drxg/tG/8+AH+/fv/GLzK+bw8dCB
  TwaHKrs3DX1WGazsf2/X00b4psFvBs/0FE/xdP0JGaLn7NmzocW5c+cicBnq
  pbP143rfOGk5NX5STs1esvM9a3Vptfry8oml5Xf5+5y1vmtxs77XtN5IPOw8
  jo+PhxYTExMR7B7lXEaYnJxM6CxE+WQyNtnwPFKcrBifSNYQAWQSV4mv9ZV8
  pNolW57b2rticnkaL6mOVj9Bj+8Y87e4MRvMvaheazvpeB9CP7R3beexXquH
  Emq1WhjUgzCoEeoR6tWkjdWhL8nFuFVBX23mSuSuNs9BfcG2xSHWt2wceZox
  AsZ1gW8zZ9DUV5P1RPGpfsaF58Q6UY7nCPUFDtyumSfZL5ItymXrqCu9xfdn
  /avJfcBW6Z3Wqsn3r/YY+1wLFuIbP86/VV91gRvWbOfxxsyN0KLRaIQzjZlw
  ZqYJOlvYc2ttJPUt/9i3FYfFi3yD2CdIxrC2iTPjkOBlfIMgSPDga8LPcuB8
  uE3QSNQhxeB1I1feD+xNonauj1eqYVGvg4acB/qI/ZV4JrhgH6KzYM84alD7
  IvRAjQ16O4/z8/OhxdzcXBPzzXV2djZaW/pYrkGKxc8ol1aX3yKeMVcpp4sb
  18/OzbbqcuZR6tW4u/ZafzS+0XuYl3Nr9Vr5rVu3VHuKK3Fp5Z2bXSTjvr79
  iXqMeqjHzuPt27fDAgW6jWIeCywnFPNYYDnB/h7ZbR4FChDs/Xjnzp1QQ7c5
  Fnj8YWct73m8efNm9JvVtWvXWr/Ncly9erW1v3LlSkJGq7bnMh6Dy3k87kNy
  7ivFIxvuz30sV4yD3KQ8GjC/xMXG43HtHnNKvcBV44cxtX5LnCQ7+7v59evX
  w2q1Gs1EN+aR8k5PT0e/Ldy/fz8snif7oRmgWaCZSJvJvOfRzuK9e/eIygOD
  fwxmDQKDqsFUzph+BDHzjpsl1nQb9lni5hl72sOW3vkNg3/v3r0bTk1NOWcy
  73mke5nW+Jkw+MvgD4NfFPzs0KWhE9+lztNujP9TjRp+N/jbIDEjWecR7Xzm
  kT4rPHhA12L0/GnwncG3BZ540LxHs0Ez0uk8+oI+v7J5/HUZ9KHA8sAZg2g2
  6HtOu/NIn0OzzCN9r3r48GEYP2eWQR8KLA+cMeh4HrOCvuuz+/Eng1MxTjLQ
  +TSTo82Y4md9xgS/U2DD9dwH5VL+k0oMKxuDXDz3acVvTIjDc42B3MVnDOqU
  fGyPTyu5pD64eiHZSe9U4/OjQTQbNCOdzCPdkb73JOVi9+MPBidiHBf2o2x/
  3LGXVpedtOfn43FujVtarhMOX9SfcORy1YV8UT7KYqNcqlHLORrKnCQOGI/7
  jYZyj6yMZiGaR/ob6jGPYR5/r+F+/N7gqMExWDmOMfkRxU7yk/Q21hFHjqMs
  F/pJfI4p/hhH8k/jymVS7WiLuXzySf3z6Y+La5b3ZTnT99poNug39Hbnkd+R
  PvN4+fJlPo/fGBwy+CoDstgf8rDvhv6wQ592zrtPS13/YUVPsxDNBs1Ip/Po
  i0uXLvF5/NpgxGCYYSTGQbYOw4oYBtsRwXYE9sNK3BElFvpzv88Vf6wN9QeZ
  P7eR8kg9kni68vB+cRutr1J/JR+NN/ZJehdWR3dlR/NIyPLZUZhH+vdiiGFv
  vO5jKwe3GQKbIQckm72OHGiDdppNWi5XHK7Pqy5XHKnHQ46cWq59Odl8aRDN
  xsWLF7t1Px4wGIgxGGMAZFzHUYlhbSvgszslFvfjMQcVGynPHibD/IhKKHPm
  cTCWPe+BXLa+QbDVIPUV68U6keMA+FQUH63+AYcPgWYhl3nMMpuUi32//tRg
  u8E2Bdth3RHvtztstgk2aLtV0O9g+60pcaSYKPPhsyPFR6qL85M4+PDR/Hw4
  S3GRK/ez78zFmUCzkNv96Ps3m3Kx+5G4bo7Rb7AFznxv9VsEPfpxHfr3Q75+
  wYfbY8z+0M0H47n0mF+qA+NhHFe/XLVp9Up9lXoh9Rj7K9lruWk+l/x+vHDh
  Ap9H4tNn0GuwKd73xfteJufnPpBJK+oRfYJfH8vRK9hiPOsj8cW4Gl8pPnLo
  gzgSz95wcV2ox7qQj5SX5/tI6ZerP9xfy2f9aRai2aAZaWce+Z3oez/CPFKN
  G2NsYKtFGc6IsuDPY2xkMbTV2pRZvA1CvLLgg/m4n8RhY6jzxdxlIRb3KUO8
  MqxSTMyv8XWduT3ngDVKsaU+WXxosOTfZ86fP8/nkWpYF2N9jHUCNLmv3hc8
  zrseNu3yTbNZn1McDVib1Hupft9cPrUh3jeIZoP+/zxL9fkR5vEdg7UGpRhv
  sTUNa+GMfnhG+7XMzjdnKfbDWGgjxSuBXynFFjmn5ZXqLClyrUdSb7S8ab78
  XAK/kqB72yCaDZqRLt2PbxisNlglrLjH80pBj7arlbgrFXspZxoP9PW19UGa
  rdYrV31pcbCv9ryyjVirwFfzI/kag67MI/tvZl43WGHwWowVClw6X3SSo1Nu
  WfijLef9KDi+2kb/JI6+NeHegmYhl3nMMp9wP75s8GKBAgYvGWSeR/p+bEF+
  HPQ5lJ+tDdqy+/F5g2cLPPF4Lkbr+wzOj91bXc/SPmGBxxq5PP8BGTs6rA==

      "], "Byte", ColorSpace -> "RGB", Interleaving -> True]},






"AutomaticSlideBreakCell" ->
Cell[BoxData[
DynamicBox[
	If[
       TrueQ[
        And[CurrentValue[EvaluationNotebook[], ScreenStyleEnvironment] === "Slideshow Working",
           CurrentValue[ParentCell[ParentCell[EvaluationCell[]]], PageBreakAbove] === True
           ]
    ],
PanelBox[
   TagBox[GridBox[{
         {
           TagBox[
             TagBox[
               TooltipBox[
                 PaneBox[
                   TemplateBox[{DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterPrefixText"]], "", DynamicBox[
                         CurrentValue[
                           ParentCell[
                             ParentCell[
                               EvaluationCell[]]], {"CounterValue",
              "SlideShowNavigationBar"}]], "", DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterText"]], "",
              DynamicBox[FrontEnd`CurrentValue[{"MaxCounterValue", "SlideShowNavigationBar"}],
            ImageSizeCache -> {6., {1., 8.}}]},
                     "RowDefault"],
                   Alignment -> Center,
                   FrameMargins -> 0,
                   ImageMargins -> {{0, 20}, {0, 8}},
                   ImageSize -> 122],
                 "Automatic slide break",
                 TooltipStyle -> {
                    RoundingRadius -> 3,
          CellFrameColor -> GrayLevel[0.9], CellFrame -> 1,
          CellFrameMargins -> {{7, 7}, {6, 6}}, Background ->
                      GrayLevel[0.95]}],
               Annotation[#, "Automatic slide break", "Tooltip"] & ],
             MouseAppearanceTag["LinkHand"]],
             PaneBox[StyleBox["", FontSize -> 1], ImageSize -> Full, ImageMargins -> {{10, 10}, {0, 0}}, FrameMargins -> 0],
             DynamicBox[FEPrivate`FrontEndResource["PresenterToolExpressions", "SlideBreakCellButton"], ImageSizeCache -> {15., {4., 11.}}]
             }
        },
       AutoDelete -> False,
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}, "ItemsIndexed" -> {{1, 3} -> {Right, Top}}},
       GridBoxFrame -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Top}}},
       GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{-0.25}}}],
     "Grid"],
   Alignment -> Left,
   Appearance ->
{"Default" -> FrontEnd`FileName[{"PresenterTools"}, "SlidebreakBackground.9.png"]
},
   FrameMargins -> {{0, 0}, {0, 0}},
   ImageMargins -> {{0, 0}, {0, 0}},
   ImageSize -> {
       FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], Full}
       ],

(* ELSE *)

	PaneBox["XXXX\[VeryThinNegativeSpace]", Alignment -> Center, ContentPadding -> False,
           FrameMargins -> 0, ImageMargins -> 0, ImageSize -> {1, 1}, Deployed -> True]

]]], "SlideBreakAttachCell"],






"ManualSlideBreakCell" ->
Cell[BoxData[
PanelBox[
   TagBox[GridBox[{
         {
           TagBox[
             TagBox[
               TooltipBox[
                 PaneBox[
                   TemplateBox[{StyleBox["\[FilledSmallCircle]", FontColor -> GrayLevel[0.5]], " ", DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterPrefixText"]], "", DynamicBox[
                         CurrentValue[
                           ParentCell[
                             ParentCell[
                               EvaluationCell[]]], {"CounterValue",
              "SlideShowNavigationBar"}]], "", DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterText"]], "",
              DynamicBox[FrontEnd`CurrentValue[{"MaxCounterValue", "SlideShowNavigationBar"}],
            ImageSizeCache -> {6., {1., 8.}}]},
                     "RowDefault"],
                   Alignment -> Center,
                   FrameMargins -> 0,
                   ImageMargins -> {{0, 20}, {0, 8}},
                   ImageSize -> 122],
                 DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipManualSlideBreak"]],
                 TooltipStyle -> {
                    RoundingRadius -> 3,
          CellFrameColor -> GrayLevel[0.9], CellFrame -> 1,
          CellFrameMargins -> {{7, 7}, {6, 6}}, Background ->
                      GrayLevel[0.95]}],
               Annotation[#, DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipManualSlideBreak"]], "Tooltip"] & ],
             MouseAppearanceTag["LinkHand"]],
             PaneBox[StyleBox["", FontSize -> 1], ImageSize -> Full, ImageMargins -> {{10, 10}, {0, 0}}, FrameMargins -> 0],
             DynamicBox[FEPrivate`FrontEndResource["PresenterToolExpressions", "ManualSlideBreakCellButton"], ImageSizeCache -> {15., {4., 11.}}]
             }
        },
       AutoDelete -> False,
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}, "ItemsIndexed" -> {{1, 3} -> {Right, Top}}},
       GridBoxFrame -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
       GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Top}}},
       GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{-0.25}}}],
     "Grid"],
   Alignment -> Left,
   Appearance ->
{"Default" -> FrontEnd`FileName[{"PresenterTools"}, "SlidebreakBackground.9.png"]
},
   FrameMargins -> {{0, 0}, {0, 0}},
   ImageMargins -> {{0, 0}, {0, 0}},
   ImageSize -> {
       FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], Full}]
], "SlideBreakAttachCell"],







"SlideBreakCell" ->
      PanelBox[
       PaneBox[
        StyleBox["Slide Break" (*
         RowBox[{DynamicBox[FEPrivate`FrontEndResource["SlideshowToolbarText", "SlideshowToolbarCounterPrefixText"]], " ",
           CounterBox["SlideShowNavigationBar"], " ", "Break"}]*), "DialogStyle", LineColor ->
         GrayLevel[0.25], FrontFaceColor -> GrayLevel[0.25], GraphicsColor ->
         GrayLevel[0.25], FontColor -> GrayLevel[0.25], BackFaceColor ->
         GrayLevel[0.25]], ImageSize -> 122, Alignment -> Center], Alignment ->
       Left, Appearance -> FrontEnd`FileName[{"PresenterTools"}, "SlidebreakBackground.9.png"],
       ImageSize -> {
         FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], Full}],




(*****************************

	IMAGE / GRAPHICS

*****************************)

"FirstSlideButton" ->
	FrameBox[
  ItemBox[
   GraphicsBox[
    {Thickness[0.07692307692307693],
     {FaceForm[{RGBColor[0, 0, 0], Opacity[0]}],
      FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 0.}, {13., 0.}, {13., 14.}, {0.,
       14.}}}]},
     {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}],
      FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0,
        1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
       0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4sWu2z7/3aLo0C5289z3y3wO7kDuFQklhx/B
j5fOduGF8znWyESl7OZygKmvfKlmyKHD6dDlmPD0QpOiA0h7cDKHw6MqkXXu
jooOTy8o3f75j93BesuJsn3/FeB8hdbXgTv2IfgV++ZL6dcqwPXH7/LkYfJW
gJtfljHxbc1/YQegLrlWbUk4H6KfG86vtTeN23WS08EF6BwlaWG4+RB5QTj/
INC6u08E4Pw3YJofrh/Gh5kP41uC/aEC5ytuKMqY2KsKNw8irwq3D8aHuQdV
XhiuH8aHmQ/jA0PxYdUVOXh4LAKHu6oDszYwptYpOLiC40XN4f+VipdqgYpw
Pix+YOph8fcPrA7BZwKbowJXHwe2R8VBHGyvmEMR2B3SDgAm2Q4Q
       "]]}},
    AspectRatio->Automatic,
    ImageSize->{13., 14.},
    PlotRange->{{0., 13.}, {0., 14.}}],
   StripOnInput->False],
  Background->Dynamic[
    If[
     CurrentValue["MouseOver"],
     RGBColor[0.39215, 0.39215, 0.39215],
     RGBColor[0.2, 0.2, 0.2]]],
  FrameMargins->{{0.5, 0.5}, {2, 2}},
  FrameStyle->None,
  RoundingRadius->3,
  StripOnInput->False],


"PreviousSlideButton" ->
	FrameBox[
   ItemBox[
     GraphicsBox[
       {Thickness[0.07692307692307693],
         {FaceForm[{RGBColor[0., 0, 0], Opacity[0]}],

     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.,
         0.}, {13., 0.}, {13., 14.}, {0.,
                14.}}}]},
         {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}],

     FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
         3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
                 1, 0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
       1:eJxTTMoPSmVmYGBgBGJxIGZigAFFBwjN4RBhueVE2T4FOH9DUcbEtzUKDoYc
       a2SiUjgcZuQJNR/wUnCI2+XJw6TN6WBwV4WtcaqQgz6YlnJ4/nvlx0tnBR2A
       muxN46ThfJC2Uwtl4OovKN3+WZclCzcPZIv9VlWHk2X75kutV3AAGt4uJqnm
       YN7pmPA0QBHOh6hThKuHiCtB1SH4J8DmqMDVQ+xRcWgXu3nu+2UxqP9k4PKL
       XLd9/nuFD64f7ExnXjhfGeTcPVxw9TD/B/ROB5qsCA+fFce8gU5BhCd6+AIA
       nvB7QA==
              "]]}},
       AspectRatio -> Automatic,
       ImageSize -> {13., 14.},
       PlotRange -> {{0., 13.}, {0., 14.}}],
     StripOnInput -> False],
   Background -> Dynamic[
       If[
         CurrentValue["MouseOver"],
         RGBColor[0.39215, 0.39215, 0.39215],
         RGBColor[0.2, 0.2, 0.2]]],
   FrameMargins -> {{0.5, 0.5}, {2, 2}},
   FrameStyle -> None,
   RoundingRadius -> 3,
   StripOnInput -> False],

"NextSlideButton" ->
	FrameBox[
   ItemBox[
     GraphicsBox[
       {Thickness[0.07692307692307693],
         {FaceForm[{RGBColor[0, 0, 0], Opacity[0]}],

     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.,
         0.}, {13., 0.}, {13., 14.}, {0.,
                14.}}}]},
         {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}],

     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
         3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
       1:eJxTTMoPSmVmYGBgBGJxIGZigAEBBwj9wf7AqYWu2z7zwvmNU527c55zOxxV
       2FCUMfGj/adLvkkCEVwOT5bOPqKw4Yv9vPfLj3mbszsAFf1e+fEXnL/Lk4dJ
       u53JAaaeT3fT3PfLWaF8Oaj5MnD5PSWTJVimqTnA9E98W2NvGqcO5+cLNQOd
       pgFXD3LV70xNB7dtn/9eqeB1kGAJ49M10nK4q8IGdLIgnN8udvPc98tCcPUu
       YFoZKi4HVacC1ScL5yvd/lmXtUcKrr7ypZohh44k3DyY/x1M44BeFYKHzwIp
       faBRgvDwQw9fACYOi8U=
              "]]}},
       AspectRatio -> Automatic,
       ImageSize -> {13., 14.},
       PlotRange -> {{0., 13.}, {0., 14.}}],
     StripOnInput -> False],
   Background -> Dynamic[
       If[
         CurrentValue["MouseOver"],
         RGBColor[0.39215, 0.39215, 0.39215],
         RGBColor[0.2, 0.2, 0.2]]],
   FrameMargins -> {{0.5, 0.5}, {2, 2}},
   FrameStyle -> None,
   RoundingRadius -> 3,
   StripOnInput -> False],

"LastSlideButton" ->
FrameBox[
   ItemBox[
     GraphicsBox[
       {Thickness[0.07692307692307693],
         {FaceForm[{RGBColor[0., 0, 0], Opacity[0]}],
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.,
         0.}, {13., 0.}, {13., 14.}, {0.,
                14.}}}]},
         {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}],
     FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
         1, 0}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
         3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                3}}}, CompressedData["
       1:eJxTTMoPSmVmYGBgBGJlIGZigAElBwit6oDK54Hzp+UJNR84xekQlWJ9379X
       ESrOAaUR/GWzjyhsKFJAk1eA64fxUc1XcKh8qWbIoSPpcFHp9s+6LGGHhF2e
       PEzanA4LpPTvqrAJOxhwrJGJSuFwCOidDjRJCM18BH9jUcbEtzWCcH7C0wtA
       EwXg+g2ApjVOFYCbf+578OOls/kdVEDW7uGC8++BlDnzwtUvct32+e8VPqg7
       ZaHmy8DlZ4D856UC13+ybN98qfUIvnmnY8LTAFW4epAr7beqOkwCUqZxgg5A
       x7SLSao55IOCaaEQnA8LD5h6WHi1i9089/2yHFp4IuQh8aSKFh9qaPGlhhaf
       MHkluH7U9KDqAADB1o8W
              "]]}},
       AspectRatio -> Automatic,
       ImageSize -> {13., 14.},
       PlotRange -> {{0., 13.}, {0., 14.}}],
     StripOnInput -> False],
   Background -> Dynamic[
       If[
         CurrentValue["MouseOver"],
         RGBColor[0.39215, 0.39215, 0.39215],
         RGBColor[0.2, 0.2, 0.2]]],
   FrameMargins -> {{0.5, 0.5}, {2, 2}},
   FrameStyle -> None,
   RoundingRadius -> 3,
   StripOnInput -> False],




(*****************************

	MENUS

*****************************)

"MenuSlideshowPresentation" ->
Cell[
    BoxData[
    DynamicModuleBox[{},
	ActionMenuBox[
		TagBox[
			FrameBox[
				PaneBox[
					DynamicBox[
						FEPrivate`ImportImage[ FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]],
						ImageSizeCache -> {15.`, {5.`, 10.`}}
					], Alignment -> Center, Appearance -> None, ImageSize -> {25, 25}
				], FrameStyle -> None, RoundingRadius -> 3, FrameMargins -> 0, ImageMargins -> {{0, 20}, {0, 5}}
			], MouseAppearanceTag[ "LinkHand"]
		],
			{
				(* "FirstSlideMenuItem" *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "FirstSlideMenuItem"]] :>
					FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPageFirst"]],
				(* PreviousSlideMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "PreviousSlideMenuItem"]] :>
					FrontEndExecute[ FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]],
				(* NextSlideMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "NextSlideMenuItem"]] :>
					FrontEndExecute[ FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPageNext"]],
				(* LastSlideMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "LastSlideMenuItem"]] :>
					FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPageLast"]],
				Delimiter,
				(* NavigationBarMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "NavigationBarMenuItem"]] :>
					PresenterTools`ToggleNavigationBar[FrontEnd`EvaluationNotebook[]]
				,
				(* ToggleStylePaletteMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "ToggleStylePaletteMenuItem"]] :>
					FrontEndExecute[{FrontEnd`NotebookOpen[ FrontEnd`FindFileOnPath["PresenterToolsStylePalette.nb", "PalettePath"]]}],
				(* SideNotesMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SideNotesMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SideNotesPalette"],
				(* SlideOutlinePaletteMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
				Delimiter,
				(* Test for multiple displays
				   *)
(*
				If[PresenterTools`MultipleDisplaysQ[],
					(* SwapScreensMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SwapScreensMenuItem"]] :>
						Null,
				(* ELSE *)
					Nothing
				],
*)
				(* ToggleFullScreen *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "ToggleFullScreen"]] :> (
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = False;
						PresenterTools`NotebookToggleFullScreenWrapper[FrontEnd`EvaluationNotebook[]]
						),
				(* EndPresentation *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "EndPresentation"]] :> (
						SetOptions[FrontEnd`EvaluationNotebook[], ScreenStyleEnvironment -> "Slideshow Working"];
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = True;
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = True;
						),
				Delimiter,
				(* PresentationControlsMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "PresentationControlsMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "PresenterControlsPalette"]
			},
			Appearance -> None, AutoAction -> False, Background -> None, ImageSize -> {Automatic, Automatic},
			Method -> "Queued"
		],
	   Initialization :> (
			Needs["PresenterTools`"];
			PresenterTools`SetEnvironmentTaggingRules[CurrentValue[EvaluationNotebook[], ScreenStyleEnvironment], EvaluationNotebook[]];
		 )]
		]
		],


"MenuSlideshowPresentationFullScreen" ->
Cell[
   BoxData[
   DynamicModuleBox[{},
	ActionMenuBox[
		TagBox[
			FrameBox[
				PaneBox[
					DynamicBox[
						FEPrivate`ImportImage[ FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]],
						ImageSizeCache -> {15.`, {5.`, 10.`}}
					], Alignment -> Center, Appearance -> None, ImageSize -> {25, 25}
				], FrameStyle -> None, RoundingRadius -> 3, FrameMargins -> 0, ImageMargins -> {{0, 20}, {0, 5}}
			], MouseAppearanceTag[ "LinkHand"]
		],
			{
					(* "FirstSlideMenuItem" *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "FirstSlideMenuItem"]] :>
						FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPageFirst"]],
					(* PreviousSlideMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "PreviousSlideMenuItem"]] :>
						FrontEndExecute[ FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPagePrevious"]],
					(* NextSlideMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "NextSlideMenuItem"]] :>
						FrontEndExecute[ FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPageNext"]],
					(* LastSlideMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "LastSlideMenuItem"]] :>
						FrontEndExecute[FrontEnd`FrontEndToken[FrontEnd`ButtonNotebook[], "ScrollPageLast"]],
					Delimiter,
					(* NavigationBarMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "NavigationBarMenuItem"]] :>
						PresenterTools`ToggleNavigationBar[FrontEnd`EvaluationNotebook[]],
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "StylePaletteMenuItem"]] :> FrontEndExecute[{FrontEnd`NotebookOpen[ FrontEnd`FindFileOnPath["PresenterToolsStylePalette.nb", "PalettePath"]]}],
					(* SideNotesMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SideNotesMenuItem"]] :> PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SideNotesPalette"],
					(* SlideOutlinePaletteMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
						PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
					Delimiter,
					(* EndPresentation *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "EndPresentation"]] :> (
						CurrentValue[ FrontEnd`EvaluationNotebook[], WindowSize] = PresenterTools`GetPreviousWindowSize[FrontEnd`EvaluationNotebook[]];
						CurrentValue[ FrontEnd`EvaluationNotebook[], WindowMargins] = CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "WindowMargins"}, Automatic];
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = True;
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = True;
						SetOptions[FrontEnd`EvaluationNotebook[], ScreenStyleEnvironment -> "Slideshow Working"];
						),
					Delimiter,
					(* PresentationControlsMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "PresentationControlsMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "PresenterControlsPalette"]
			},
			Appearance -> None, AutoAction -> False, Background -> None, ImageSize -> {Automatic, Automatic},
			Method -> "Queued"
		],
	   Initialization :> (
			Needs["PresenterTools`"];
			PresenterTools`SetEnvironmentTaggingRules[CurrentValue[EvaluationNotebook[], ScreenStyleEnvironment], EvaluationNotebook[]];
		 )]
		]
		],


"MenuScrollingPresentation" ->
Cell[
  BoxData[
  DynamicModuleBox[{},
	ActionMenuBox[
		TagBox[
			FrameBox[
				PaneBox[
					DynamicBox[
						FEPrivate`ImportImage[ FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]],
						ImageSizeCache->{47., {11., 23.}}
					], Alignment -> Center, Appearance -> None, ImageSize -> {25, 25}
				], FrameStyle -> None, RoundingRadius -> 3, FrameMargins -> 0, ImageMargins -> {{0, 20}, {0, 5}}
			], MouseAppearanceTag[ "LinkHand"]
		],
			{
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "StylePaletteMenuItem"]] :> FrontEndExecute[{FrontEnd`NotebookOpen[ FrontEnd`FindFileOnPath["PresenterToolsStylePalette.nb", "PalettePath"]]}],
				(* SideNotesMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SideNotesMenuItem"]] :> PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SideNotesPalette"],
				(* SlideOutlinePaletteMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
				Delimiter,
				(* ToggleFullScreen *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "ToggleFullScreen"]] :> (
					CurrentValue[ EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = False;
					PresenterTools`NotebookToggleFullScreenWrapper[EvaluationNotebook[]]
					),
				(* EndPresentation *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "EndPresentation"]] :> (
						SetOptions[FrontEnd`EvaluationNotebook[], ScreenStyleEnvironment -> "Slideshow Working"];
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = True;
						CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = True;
						),
				Delimiter,
				(* PresentationControlsMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "PresentationControlsMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "PresenterControlsPalette"]
			},
			Appearance -> None, AutoAction -> False, Background -> None, ImageSize -> {Automatic, Automatic},
			Method -> "Queued"
		],
	   Initialization :> (
			Needs["PresenterTools`"];
			PresenterTools`SetEnvironmentTaggingRules[CurrentValue[EvaluationNotebook[], ScreenStyleEnvironment], EvaluationNotebook[]];
		 )]
		]
		],


"MenuScrollingPresentationFullScreen" ->
Cell[
  BoxData[
  DynamicModuleBox[{},
	ActionMenuBox[
		TagBox[
			FrameBox[
				PaneBox[
					DynamicBox[
						FEPrivate`ImportImage[ FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]],
						ImageSizeCache -> {15.`, {5.`, 10.`}}
					], Alignment -> Center, Appearance -> None, ImageSize -> {25, 25}
				], FrameStyle -> None, RoundingRadius -> 3, FrameMargins -> 0, ImageMargins -> {{0, 20}, {0, 5}}
			], MouseAppearanceTag[ "LinkHand"]
		],
			{
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "StylePaletteMenuItem"]] :> FrontEndExecute[{FrontEnd`NotebookOpen[ FrontEnd`FindFileOnPath["PresenterToolsStylePalette.nb", "PalettePath"]]}],
				(* SideNotesMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SideNotesMenuItem"]] :> PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SideNotesPalette"],
				(* SlideOutlinePaletteMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
				Delimiter,
				(* EndPresentation *)
				(* Test for multiple displays
				   *)
(*
				If[PresenterTools`MultipleDisplaysQ[],
					(* SwapScreensMenuItem *)
					DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SwapScreensMenuItem"]] :>
						Null,
				(* ELSE *)
					Nothing
				],
*)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "EndPresentation"]] :> (
					CurrentValue[ FrontEnd`EvaluationNotebook[], WindowSize] = PresenterTools`GetPreviousWindowSize[FrontEnd`EvaluationNotebook[]];
					CurrentValue[ FrontEnd`EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = True;
					SetOptions[FrontEnd`EvaluationNotebook[], ScreenStyleEnvironment -> "Slideshow Working"];
					),
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "CloseNotebookMenuItem"]] :> (
					NotebookClose[EvaluationNotebook[], Interactive -> True];
					Quiet[DeviceClose["Camera"]]
					)
			},
			Appearance -> None, AutoAction -> False, Background -> None, ImageSize -> {Automatic, Automatic},
			Method -> "Queued"
		],
	   Initialization :> (
			Needs["PresenterTools`"];
			PresenterTools`SetEnvironmentTaggingRules[CurrentValue[EvaluationNotebook[], ScreenStyleEnvironment], EvaluationNotebook[]];
		 )]
		]
		],



"MenuWorkingView" ->
Cell[
  BoxData[
  DynamicModuleBox[{},
	ActionMenuBox[
		TagBox[
			FrameBox[
				PaneBox[
					DynamicBox[
						FEPrivate`ImportImage[ FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]],
						ImageSizeCache -> {15.`, {5.`, 10.`}}
					], Alignment -> Center, Appearance -> None, ImageSize -> {25, 25}
				], FrameStyle -> None, RoundingRadius -> 3, FrameMargins -> 0, ImageMargins -> {{0, 20}, {0, 5}}
			], MouseAppearanceTag[ "LinkHand"]
		],
			{
				"Slideshow Presentation" :> (
					CurrentValue[ EvaluationNotebook[], ScreenStyleEnvironment] = "Slideshow Presentation";
					CurrentValue[ EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = False;
					),
				"Scrolling Presentation" :> (
					SetOptions[EvaluationNotebook[], ScreenStyleEnvironment -> "Scrolling Presentation"];
					CurrentValue[ EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = False;
					),
				"Slideshow Working" :> (
					SetOptions[EvaluationNotebook[], ScreenStyleEnvironment -> "Slideshow Working"];
					CurrentValue[ EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = True;
					),
				Delimiter,
				(* ToggleFullScreen *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "ToggleFullScreen"]] :> (
					CurrentValue[ EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowToolbar"}] = False;
					PresenterTools`NotebookToggleFullScreenWrapper[EvaluationNotebook[]]
					),
				Delimiter,
				(* SideNotesMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "SideNotesMenuItem"]] :> PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "SideNotesPalette"],
				(* SlideOutlinePaletteMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "OutlinePalette"],
				(* PresentationControlsMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "PresentationControlsMenuItem"]] :>
					PresenterTools`OpenPresenterPalette[EvaluationNotebook[], "PresenterControlsPalette"],
				Delimiter,
				(* CloseNotebookMenuItem *)
				DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "CloseNotebookMenuItem"]] :> (
					NotebookClose[EvaluationNotebook[], Interactive -> True];
					Quiet[DeviceClose["Camera"]]
					)
			},
			Appearance -> None, AutoAction -> False, Background -> None, ImageSize -> {Automatic, Automatic},
			Method -> "Queued"
		],
	   Initialization :> (
			Needs["PresenterTools`"];
			PresenterTools`SetEnvironmentTaggingRules[CurrentValue[EvaluationNotebook[], ScreenStyleEnvironment], EvaluationNotebook[]];
		 )]
		]
		],




(*****************************

	TOOLBARS

*****************************)

"PresenterToolsAuthoringToolbar" :>
	FEPrivate`If[FrontEnd`CurrentValue[FrontEnd`EvaluationNotebook[],
							{TaggingRules, "PresenterSettings", "ShowAuthoringToolbar"}] === False,
		Cell["", CellOpen -> False, CellMargins -> {{-1, -1}, {-1, -1}}, CellElementSpacings -> {"ClosedCellHeight" -> 0}],
	(* ELSE *)
Cell[BoxData[
 DynamicModuleBox[{},
  PanelBox[
   TagBox[GridBox[{
      {
       TagBox[
        TooltipBox[
         ActionMenuBox[
          TagBox[
           FrameBox[
            TagBox[GridBox[{
               {
                DynamicBox[FEPrivate`ImportImage[
                  FrontEnd`FileName[{"PresenterTools"}, "InsertSlide.png"]],
                 ImageSizeCache->{24., {7., 13.}}]},
               {
                StyleBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlide"], StandardForm],
                  ImageSizeCache->{56., {15.3203125, 10.634765625}}],
                 StripOnInput->False,
                 TextAlignment->Center,
                 LineSpacing->{0, 15},
                 FontFamily:>CurrentValue["PanelFontFamily"],
                 FontSize->11]}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}],
             "Grid"],
            Alignment->{Center, Center},
            Background->Dynamic[
              If[
               CurrentValue["MouseOver"],
               GrayLevel[0.99],
               GrayLevel[0.95]]],
            FrameMargins->{{0, 0}, {0, 0}},
            FrameStyle->None,
            ImageMargins->0,
            StripOnInput->False],
           MouseAppearanceTag["LinkHand"]], {
          DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlideMenu"]]:>PresenterTools`InsertSlideBreak[
           EvaluationNotebook[]],
          DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "InsertSlideWithBackgroundMenu"]]:>PresenterTools`InsertSlideBreak[
           EvaluationNotebook[], "IncludeBackground" -> True]},
          Appearance->{"Default" -> None, "Pressed" -> None},
          Evaluator->Automatic,
          Method->"Preemptive"],
         DynamicBox[
          ToBoxes[
           FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipInsertSlide"], StandardForm]],
         TooltipDelay->0.25],
        Annotation[#,
         Dynamic[
          FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipInsertSlide"]], "Tooltip"]& ],
       PanelBox[
        PaneSelectorBox[{False->
         PanelBox[
          TagBox[GridBox[{
             {
              TagBox[
               TooltipBox[
                TagBox[
                 FrameBox[
                  DynamicBox[ToBoxes[
                    ActionMenu[
                    Pane[
                    Grid[{{
                    Pane[
                    Style[
                    Dynamic[
                    FEPrivate`If[
                    FEPrivate`SameQ[
                    CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], "CellStyleName"], $Failed], "-",
                    CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], "CellStyleName"]]], 12, FontFamily :> CurrentValue["PanelFontFamily"]], ImageSizeAction -> "Clip", ImageSize -> {110, 16}],
                    Item[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDown.png"]]]], Alignment -> {Right, Center}]}}, Alignment -> {Left, Center}, Spacings -> {0.5, 0},
                    ItemSize -> {{
                    Scaled[0.75],
                    Scaled[0.2]}}], {100, 20}, Alignment -> {Left, Center}, ImageMargins -> 0],
                    PresenterTools`SetCellStyleMenu[
                    EvaluationNotebook[]], Appearance -> None]],
                   ImageSizeCache->{100., {7., 13.}}],
                  Alignment->{Left, Top},
                  Background->GrayLevel[1],
                  ContentPadding->False,
                  FrameMargins->{{10, 0}, {0, 0}},
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->0,
                  RoundingRadius->5,
                  StripOnInput->False],
                 MouseAppearanceTag["LinkHand"]],
                DynamicBox[
                 FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipCellStyle"]],
                TooltipDelay->0.25,
                TooltipStyle->"TextStyling"],
               Annotation[#,
                Dynamic[
                 RawBoxes[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipCellStyle"]]], "Tooltip"]& ],
              TagBox[
               ButtonBox[
                PaneSelectorBox[{True->
                 FrameBox[
                  DynamicBox[ToBoxes[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "StyleUpdate.png"]]]], StandardForm],
                   ImageSizeCache->{17., {5., 11.}}],
                  Background->GrayLevel[0.99],
                  FrameMargins->{{2, 2}, {0, 1}},
                  FrameStyle->GrayLevel[0.7],
                  ImageMargins->0,
                  ImageSize->{Automatic, 20},
                  RoundingRadius->5,
                  StripOnInput->False], False->
                 FrameBox[
                  DynamicBox[ToBoxes[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "StyleUpdateFalse.png"]]]], StandardForm],
                   ImageSizeCache->{17., {5., 11.}}],
                  Background->GrayLevel[0.95],
                  FrameMargins->{{2, 2}, {0, 1}},
                  FrameStyle->GrayLevel[0.95],
                  ImageMargins->0,
                  ImageSize->{Automatic, 20},
                  RoundingRadius->5,
                  StripOnInput->False]}, Dynamic[CurrentValue[
                    EvaluationNotebook[], "SelectionData"]; CurrentValue[
                    EvaluationNotebook[], {"SelectionHasUpdatedStyles", "Absolute"}]],
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageMargins->0],
                Appearance->{"Default" -> None, "Pressed" -> None},
                Background->GrayLevel[0.95],
                ButtonFunction:>With[{$CellContext`cellObj = NotebookSelection[
                    EvaluationNotebook[]], $CellContext`cellStyle = CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], "CellStyleName"]},
                  PresenterTools`UpdateStyleDefinitionsDialog[
                   EvaluationNotebook[], {{$CellContext`cellStyle -> FE`Evaluate[
                    FEPrivate`CellStyleComplement[$CellContext`cellObj,
                    FEPrivate`ResolveCellStyle[$CellContext`cellObj, $CellContext`cellStyle]]]}}, $CellContext`cellStyle]],
                ContentPadding->False,
                Enabled->Dynamic[
                  CurrentValue[
                   EvaluationNotebook[], {"SelectionHasUpdatedStyles", "Absolute"}]],
                Evaluator->Automatic,
                FrameMargins->{{Automatic, Automatic}, {0, 0}},
                ImageMargins->0,
                ImageSize->{Automatic, 22},
                Method->"Preemptive",
                Tooltip->Dynamic[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipApplyCurrentFormatting"]],
                TooltipDelay->0.25],
               MouseAppearanceTag["LinkHand"]],
              TagBox[GridBox[{
                 {
                  TagBox[
                   TooltipBox[
                    TagBox[
                    FrameBox[
                    DynamicBox[ToBoxes[
                    ActionMenu[
                    Pane[
                    Grid[{{
                    Style[
                    Dynamic[
                    AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontFamily]], 12],
                    Item[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDown.png"]]]], Alignment -> {Right, Center}]}}, Alignment -> {Left, Center}, Spacings -> {0.5, 0},
                    ItemSize -> {{
                    Scaled[0.75],
                    Scaled[0.2]}}], {168, 20}, Alignment -> {Left, Center}],
                    PresenterTools`SetFontFamilyMenuList[], Appearance -> None]],
                    ImageSizeCache->{168., {7., 13.}}],
                    Background->GrayLevel[1],
                    FrameMargins->{{10, 0}, {0, 0}},
                    FrameStyle->GrayLevel[0.75],
                    ImageMargins->{{10, 0}, {0, 0}},
                    RoundingRadius->5,
                    StripOnInput->False],
                    MouseAppearanceTag["LinkHand"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontFamily"], StandardForm]],
                    TooltipDelay->0.25,
                    TooltipStyle->"TextStyling"],
                   Annotation[#,
                    Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontFamily"]], "Tooltip"]& ],
                  TagBox[
                   TagBox[
                    TooltipBox[
                    ActionMenuBox[
                    PaneSelectorBox[{True->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDouble.png"]]],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.99],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->None,
                    ImageMargins->0,
                    ImageSize->{17, 20},
                    StripOnInput->False], False->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDouble.png"]],
                    ImageSizeCache->{15., {5., 10.}}],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.95],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->None,
                    ImageMargins->0,
                    ImageSize->{17, 20},
                    StripOnInput->False]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageMargins->0,
                    ImageSize->{17, 20}], {"3":>PresenterTools`SetSelectionOptions["FontSize", 3.,
                    EvaluationNotebook[]], "2":>PresenterTools`SetSelectionOptions["FontSize", 2.,
                    EvaluationNotebook[]], "1":>PresenterTools`SetSelectionOptions["FontSize", 1.,
                    EvaluationNotebook[]], Delimiter,
                    RowBox[{"-", "1"}]:>PresenterTools`SetSelectionOptions["FontSize", -1.,
                    EvaluationNotebook[]],
                    RowBox[{"-", "2"}]:>PresenterTools`SetSelectionOptions["FontSize", -2.,
                    EvaluationNotebook[]],
                    RowBox[{"-", "3"}]:>PresenterTools`SetSelectionOptions["FontSize", -3.,
                    EvaluationNotebook[]]},
                    Appearance->None,
                    ContentPadding->False],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipModifyFontSize"], StandardForm]],
                    TooltipDelay->0.25,
                    TooltipStyle->"TextStyling"],
                    Annotation[#,
                    Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipModifyFontSize"]], "Tooltip"]& ],
                   MouseAppearanceTag["LinkHand"]],
                  TagBox[
                   ButtonBox[
                    PaneSelectorBox[{True->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TextStyleBold.png"]]],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.99],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->Dynamic[
                    If[
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FrontEnd`FontWeight], "Bold"],
                    GrayLevel[0.8],
                    GrayLevel[0.95]]],
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False], False->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TextStyleBold.png"]],
                    ImageSizeCache->{15., {5., 10.}}],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.95],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->Dynamic[
                    If[
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FrontEnd`FontWeight], "Bold"],
                    GrayLevel[0.8],
                    GrayLevel[0.95]]],
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageMargins->0,
                    ImageSize->{17, 23}],
                    Appearance->{"Default" -> None, "Pressed" -> None},
                    ButtonFunction:>PresenterTools`SetSelectionOptions["FontWeight",
                    EvaluationNotebook[]],
                    Evaluator->Automatic,
                    Method->"Preemptive",
                    Tooltip->Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontBold"]],
                    TooltipDelay->0.25],
                   MouseAppearanceTag["LinkHand"]],
                  TagBox[
                   ButtonBox[
                    PaneSelectorBox[{True->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TextStyleItalic.png"]]],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.99],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->Dynamic[
                    If[
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FrontEnd`FontSlant], "Italic"],
                    GrayLevel[0.8],
                    GrayLevel[0.95]]],
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False], False->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TextStyleItalic.png"]],
                    ImageSizeCache->{15., {5., 10.}}],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.95],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->Dynamic[
                    If[
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FrontEnd`FontSlant], "Italic"],
                    GrayLevel[0.8],
                    GrayLevel[0.95]]],
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageMargins->0,
                    ImageSize->{17, 23}],
                    Appearance->{"Default" -> None, "Pressed" -> None},
                    ButtonFunction:>PresenterTools`SetSelectionOptions["FontSlant",
                    EvaluationNotebook[]],
                    Evaluator->Automatic,
                    Method->"Preemptive",
                    Tooltip->Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontItalic"]],
                    TooltipDelay->0.25],
                   MouseAppearanceTag["LinkHand"]],
                  TagBox[
                   ButtonBox[
                    PaneSelectorBox[{True->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TextStyleUnderline.png"]]],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.99],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->Dynamic[
                    If[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FrontEnd`FontVariationsUnderline],
                    GrayLevel[0.8],
                    GrayLevel[0.95]]],
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False], False->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TextStyleUnderline.png"]],
                    ImageSizeCache->{15., {5., 10.}}],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.95],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->Dynamic[
                    If[
                    FrontEnd`CurrentValue[
                    NotebookSelection[
                    FrontEnd`EvaluationNotebook[]], FrontEnd`FontVariationsUnderline],
                    GrayLevel[0.8],
                    GrayLevel[0.95]]],
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageMargins->0,
                    ImageSize->{17, 23}],
                    Appearance->{"Default" -> None, "Pressed" -> None},
                    ButtonFunction:>PresenterTools`SetSelectionOptions["FontUnderline",
                    EvaluationNotebook[]],
                    Evaluator->Automatic,
                    Method->"Preemptive",
                    Tooltip->Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontUnderline"]],
                    TooltipDelay->0.25],
                   MouseAppearanceTag["LinkHand"]],
                  TagBox[
                   TagBox[
                    TooltipBox[
                    ActionMenuBox[
                    PaneSelectorBox[{True->
                    FrameBox[
                    PaneBox[
                    InterpretationBox[Cell[BoxData["A"]],
                    ExpressionCell[$CellContext`A]],
                    Alignment->Dynamic[
                    FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {Center, Bottom}, {Center, Center}]],
                    ImageSize->{20, 20}],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.99],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->None,
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False], False->
                    FrameBox[
                    PaneBox[
                    InterpretationBox[Cell[BoxData["A"]],
                    ExpressionCell[$CellContext`A]],
                    Alignment->Dynamic[
                    FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {Center, Bottom}, {Center, Center}]],
                    ImageSize->{20, 20}],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.95],
                    FrameMargins->{{0, 0}, {0, 0}},
                    FrameStyle->None,
                    ImageMargins->0,
                    ImageSize->{17, 23},
                    StripOnInput->False]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageMargins->0,
                    ImageSize->{17, 23}], {
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\[Checkmark]", ShowContents -> Dynamic[
                    Refresh[AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontColor] === CurrentValue[
                    EvaluationNotebook[], {StyleHints, "ColorSet", "Display1"}], None]], StripOnInput -> False],PanelBox["\" \"", Background :> Dynamic[
                    Refresh[
                    CurrentValue[
                    EvaluationNotebook[], {StyleHints, "ColorSet", "Display1"}], None]], ImageSize -> {31, 15}],"\"Theme color 1\""},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["FontColor", "Display1",
                    EvaluationNotebook[]],
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\[Checkmark]", ShowContents -> Dynamic[
                    Refresh[AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontColor] === CurrentValue[
                    EvaluationNotebook[], {StyleHints, "ColorSet", "Display2"}], None]], StripOnInput -> False],PanelBox["\" \"", Background :> Dynamic[
                    Refresh[
                    CurrentValue[
                    EvaluationNotebook[], {StyleHints, "ColorSet", "Display2"}], None]], ImageSize -> {31, 15}],"\"Theme color 2\""},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["FontColor", "Display2",
                    EvaluationNotebook[]],
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\[Checkmark]", ShowContents -> Dynamic[
                    Refresh[AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontColor] === CurrentValue[
                    EvaluationNotebook[], {StyleHints, "ColorSet", "Display3"}], None]], StripOnInput -> False],PanelBox["\" \"", Background :> Dynamic[
                    Refresh[
                    CurrentValue[
                    EvaluationNotebook[], {StyleHints, "ColorSet", "Display3"}], None]], ImageSize -> {31, 15}],"\"Theme color 3\""},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["FontColor", "Display3",
                    EvaluationNotebook[]], Delimiter,
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\[Checkmark]", ShowContents -> Dynamic[
                    Refresh[AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontColor] === Black, None]], StripOnInput -> False],"\"Black\""},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["FontColor", "Black",
                    EvaluationNotebook[]],
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\[Checkmark]", ShowContents -> Dynamic[
                    Refresh[AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontColor] === Gray, None]], StripOnInput -> False],"\"Gray\""},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["FontColor", "Gray",
                    EvaluationNotebook[]],
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\[Checkmark]", ShowContents -> Dynamic[
                    Refresh[AbsoluteCurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], FontColor] === White, None]], StripOnInput -> False],"\"White\""},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["FontColor", "White",
                    EvaluationNotebook[]], Delimiter, "\<\"Palette...\"\>":>PresenterTools`SetSelectionOptions["FontColor",
                    EvaluationNotebook[]], Delimiter},
                    Appearance->None],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontColor"], StandardForm]],
                    TooltipDelay->0.25,
                    TooltipStyle->"TextStyling"],
                    Annotation[#,
                    Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipFontColor"]], "Tooltip"]& ],
                   MouseAppearanceTag["LinkHand"]],
                  TagBox[
                   ButtonBox[
                    PaneSelectorBox[{True->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "ClearCellFormatting.png"]]],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.99],
                    FrameMargins->{{0, 0}, {1, 3}},
                    FrameStyle->None,
                    ImageMargins->0,
                    StripOnInput->False], False->
                    FrameBox[
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "ClearCellFormatting.png"]],
                    ImageSizeCache->{15., {5., 10.}}],
                    Alignment->{Center, Center},
                    FrameMargins->0,
                    ImageMargins->0],
                    Alignment->{Center, Center},
                    Background->GrayLevel[0.95],
                    FrameMargins->{{0, 0}, {1, 3}},
                    FrameStyle->None,
                    ImageMargins->0,
                    StripOnInput->False]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageSize->{17, 23}],
                    Appearance->{"Default" -> None, "Pressed" -> None},
                    ButtonFunction:>PresenterTools`ClearCellFormatting[
                    EvaluationNotebook[]],
                    Evaluator->Automatic,
                    Method->"Preemptive",
                    Tooltip->Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipClearFormatting"]],
                    TooltipDelay->0.25],
                   MouseAppearanceTag["LinkHand"]]}
                },
                AutoDelete->False,
                FrameStyle->GrayLevel[0.75],
                GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
                GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {2, 0.3, {0.2}}, "Rows" -> {{0}}}],
               "Grid"]},
             {
              TagBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 FrameBox[
                  StyleBox[
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "OpenAutomaticSlideBreakDialog"], StandardForm],
                    ImageSizeCache->{95., {1., 8.}}],
                   StripOnInput->False,
                   ShowStringCharacters->False,
                   FontFamily:>CurrentValue["PanelFontFamily"],
                   FontSize->10],
                  Alignment->{Left, Center},
                  Background->GrayLevel[0.95],
                  FrameMargins->{{8, 6}, {0, 0}},
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->Dynamic[
                    FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0, 0}, {4, 0}}, {{0, 0}, {3, 1}}]],
                  ImageSize->{{100, Automatic}, 24},
                  RoundingRadius->5,
                  StripOnInput->False], True->
                 FrameBox[
                  StyleBox[
                   DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "OpenAutomaticSlideBreakDialog"], StandardForm]],
                   StripOnInput->False,
                   ShowStringCharacters->False,
                   FontFamily:>CurrentValue["PanelFontFamily"],
                   FontSize->10],
                  Alignment->{Left, Center},
                  Background->GrayLevel[0.99],
                  FrameMargins->{{8, 6}, {0, 0}},
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->Dynamic[
                    FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0, 0}, {4, 0}}, {{0, 0}, {3, 1}}]],
                  ImageSize->{{100, Automatic}, 24},
                  RoundingRadius->5,
                  StripOnInput->False]}, Dynamic[
                  FEPrivate`And[
                   CurrentValue["MouseOver"],
                   CurrentValue["NotebookSelected"]]],
                 Alignment->{Left, Top},
                 Background->GrayLevel[0.95],
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageMargins->Dynamic[
                   FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0, 0}, {4, 0}}, {{0, 0}, {3, 1}}]],
                 ImageSize->{{100, Automatic}, 24}],
                Alignment->{Left, Top},
                Appearance->{"Default" -> None, "Pressed" -> None},
                Background->GrayLevel[0.95],
                ButtonFunction:>PresenterTools`OpenPresenterPalette[
                  ButtonNotebook[], "SlideBreakDefaults", "UseNotebookPut" -> False],
                ContentPadding->False,
                Evaluator->Automatic,
                FrameMargins->{{0, 0}, {0, 0}},
                ImageMargins->0,
                Method->"Preemptive"],
               MouseAppearanceTag["LinkHand"]],
              ButtonBox[
               PaneSelectorBox[{True->
                TagBox[
                 FrameBox[
                  DynamicBox[ToBoxes[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "UpdateTrue.png"]]]], StandardForm],
                   ImageSizeCache->{15., {5., 10.}}],
                  Background->GrayLevel[0.99],
                  FrameMargins->{{2, 2}, {1, 1}},
                  FrameStyle->GrayLevel[0.7],
                  ImageMargins->0,
                  ImageSize->{Automatic, 22},
                  RoundingRadius->5,
                  StripOnInput->False],
                 MouseAppearanceTag["LinkHand"]], False->
                FrameBox[
                 DynamicBox[ToBoxes[
                   Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "UpdateFalse.png"]]]], StandardForm],
                  ImageSizeCache->{15., {5., 10.}}],
                 Background->GrayLevel[0.95],
                 FrameMargins->{{2, 2}, {1, 1}},
                 FrameStyle->GrayLevel[0.95],
                 ImageMargins->0,
                 ImageSize->{Automatic, 22},
                 RoundingRadius->5,
                 StripOnInput->False]}, Dynamic[
                 If[
                  FEPrivate`GreaterEqual[FrontEnd`$NotebookVersionNumber, 12],
                  FEPrivate`PresenterToolsRefreshSlideBreakQ[
                   CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "PresenterSettings", "SlideBreakStyles"}, {}], "SlideShowNavigationBar"], CurrentValue[
                    EvaluationNotebook[], "SelectionData"]; PresenterTools`SlideBreakRefreshQ[
                    EvaluationNotebook[]], CurrentValue[
                    EvaluationNotebook[], "SelectionData"]; PresenterTools`SlideBreakRefreshQ[
                    EvaluationNotebook[]]]],
                ContentPadding->False,
                FrameMargins->0,
                ImageMargins->{{2, 0}, {0, 1}}],
               Alignment->Top,
               Appearance->{"Default" -> None, "Pressed" -> None},
               ButtonFunction:>PresenterTools`AddSlideBreakCells[
                 EvaluationNotebook[], "CellStyles" -> CurrentValue[
                   EvaluationNotebook[], {TaggingRules, "PresenterSettings", "SlideBreakStyles"}, {}]],
               Evaluator->Automatic,
               Method->"Preemptive",
               Tooltip->DynamicBox[
                 FEPrivate`FrontEndResource["PresenterToolStrings", "RefreshSlideBreaksTooltip"]]],
              PanelBox[
               TagBox[GridBox[{
                  {
                   DynamicBox[FEPrivate`FrontEndResource["PresenterToolStrings", "CellActionsToolbarLabel"],
                    ImageSizeCache->{55., {1., 8.}}],
                   TagBox[
                    TooltipBox[
                    ActionMenuBox[
                    PaneSelectorBox[{True->
                    TagBox[
                    FrameBox[
                    TagBox[GridBox[{
                    {
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "CellAlignmentLeft.png"]],
                    ImageSizeCache->{15., {5., 10.}}], "\[SpanFromLeft]"},
                    {
                    ItemBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDropDown.png"]],
                    ImageSizeCache->{3., {-1., 4.}}],
                    Alignment->Right,
                    StripOnInput->False], "\[SpanFromLeft]"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {Bottom, Top}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {Automatic, 0}},
                    GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {0, 0, 0}}],
                    "Grid"],
                    Alignment->{Center, Bottom},
                    Background->GrayLevel[0.99],
                    FrameMargins->0,
                    FrameStyle->GrayLevel[0.75],
                    ImageMargins->0,
                    ImageSize->{24, 24},
                    RoundingRadius->3,
                    StripOnInput->False],
                    MouseAppearanceTag["LinkHand"]], False->
                    TagBox[
                    FrameBox[
                    TagBox[GridBox[{
                    {
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "CellAlignmentLeft.png"]],
                    ImageSizeCache->{15., {5., 10.}}], "\[SpanFromLeft]"},
                    {
                    ItemBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDropDown.png"]],
                    ImageSizeCache->{3., {-1., 4.}}],
                    Alignment->Right,
                    StripOnInput->False], "\[SpanFromLeft]"}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {Bottom, Top}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {Automatic, 0}},
                    GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {0, 0, 0}}],
                    "Grid"],
                    Alignment->{Center, Bottom},
                    Background->GrayLevel[0.95],
                    FrameMargins->0,
                    FrameStyle->GrayLevel[0.75],
                    ImageMargins->0,
                    ImageSize->{24, 24},
                    RoundingRadius->3,
                    StripOnInput->False],
                    MouseAppearanceTag["LinkHand"]]}, Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageSize->{24, 24}], {
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\"\[Checkmark]\"", ShowContents -> Dynamic[
                    Refresh[CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], TextAlignment] === Left, None]], StripOnInput -> False],DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResourceString["AlignLeftString"], StandardForm]]},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["TextAlignment", "Left",
                    EvaluationNotebook[]],
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\"\[Checkmark]\"", ShowContents -> Dynamic[
                    Refresh[CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], TextAlignment] === Center, None]], StripOnInput -> False],DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResourceString["AlignCenterString"], StandardForm]]},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["TextAlignment", "Center",
                    EvaluationNotebook[]],
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],StyleBox["\"\[Checkmark]\"", ShowContents -> Dynamic[
                    Refresh[CurrentValue[
                    NotebookSelection[
                    EvaluationNotebook[]], TextAlignment] === Right, None]], StripOnInput -> False],DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResourceString["AlignRightString"], StandardForm]]},
                    "RowWithSeparator"]:>PresenterTools`SetSelectionOptions["TextAlignment", "Right",
                    EvaluationNotebook[]]},
                    Appearance->None],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSetCellAlignment"], StandardForm]],
                    TooltipDelay->0.25,
                    TooltipStyle->"TextStyling"],
                    Annotation[#,
                    Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSetCellAlignment"]], "Tooltip"]& ],
                   FrameBox[
                    TemplateBox[{TagBox[
                    ButtonBox[
                    PaneSelectorBox[{True -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeLeft.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.99], FrameMargins -> 0,
                    ImageMargins -> 0, ImageSize -> {17, 20}], False -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeLeft.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.95], FrameMargins -> 0,
                    ImageMargins -> 0, ImageSize -> {17, 20}]},
                    Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]], ContentPadding -> False, FrameMargins -> 0, ImageSize -> {17, 20}], ButtonFunction :>
                    PresenterTools`SetSelectionOptions["Nudge", "Left",
                    EvaluationNotebook[]], Appearance -> {"Default" -> None, "Pressed" -> None}, Evaluator -> Automatic, FrameMargins -> 0, ImageMargins -> 0,
                    ImageSize -> {23, 22}, Method -> "Preemptive", Tooltip -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipNudgeCellLeft"], StandardForm]], TooltipDelay -> 0.25],
                    MouseAppearanceTag["LinkHand"]],TagBox[
                    ButtonBox[
                    PaneSelectorBox[{True -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeRight.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.99], FrameMargins -> 0,
                    ImageMargins -> 0, ImageSize -> {17, 20}], False -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeRight.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.95], FrameMargins -> 0,
                    ImageMargins -> 0, ImageSize -> {17, 20}]},
                    Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]], ContentPadding -> False, FrameMargins -> 0, ImageSize -> {17, 20}], ButtonFunction :>
                    PresenterTools`SetSelectionOptions["Nudge", "Right",
                    EvaluationNotebook[]], Appearance -> {"Default" -> None, "Pressed" -> None}, Evaluator -> Automatic, FrameMargins -> 0, ImageMargins -> 0,
                    ImageSize -> {23, 22}, Method -> "Preemptive", Tooltip -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipNudgeCellRight"], StandardForm]], TooltipDelay -> 0.25],
                    MouseAppearanceTag["LinkHand"]],TagBox[
                    ButtonBox[
                    PaneSelectorBox[{True -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeUp.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.99], FrameMargins -> 0, ImageMargins ->
                    0, ImageSize -> {17, 20}], False -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeUp.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.95], FrameMargins -> 0, ImageMargins ->
                    0, ImageSize -> {17, 20}]},
                    Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]], ContentPadding -> False, FrameMargins -> 0, ImageSize -> {17, 20}], ButtonFunction :>
                    PresenterTools`SetSelectionOptions["Nudge", "Up",
                    EvaluationNotebook[]], Appearance -> {"Default" -> None, "Pressed" -> None}, Evaluator -> Automatic, FrameMargins -> 0, ImageMargins -> 0,
                    ImageSize -> {23, 22}, Method -> "Preemptive", Tooltip -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipNudgeCellUp"], StandardForm]], TooltipDelay -> 0.25],
                    MouseAppearanceTag["LinkHand"]],TagBox[
                    ButtonBox[
                    PaneSelectorBox[{True -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeDown.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.99], FrameMargins -> 0,
                    ImageMargins -> 0, ImageSize -> {17, 20}], False -> PanelBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeDown.png"]]], Alignment -> {Center, Center}, Background -> GrayLevel[0.95], FrameMargins -> 0,
                    ImageMargins -> 0, ImageSize -> {17, 20}]},
                    Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]], ContentPadding -> False, FrameMargins -> 0, ImageSize -> {17, 20}], ButtonFunction :>
                    PresenterTools`SetSelectionOptions["Nudge", "Down",
                    EvaluationNotebook[]], Appearance -> {"Default" -> None, "Pressed" -> None}, Evaluator -> Automatic, FrameMargins -> 0, ImageMargins -> 0,
                    ImageSize -> {23, 22}, Method -> "Preemptive", Tooltip -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipNudgeCellDown"], StandardForm]], TooltipDelay -> 0.25],
                    MouseAppearanceTag["LinkHand"]]},
                    "RowDefault"],
                    FrameMargins->0,
                    FrameStyle->GrayLevel[0.75],
                    ImageMargins->0,
                    RoundingRadius->3,
                    StripOnInput->False],
                   ItemBox[
                    TemplateBox[{TemplateBox[{2}, "Spacer1"],DynamicBox[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "WindowOptionsToolbarLabel"]],TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Refresh[
                    ActionMenu[
                    PaneSelector[{True -> Framed[
                    Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "WindowSize.png"]]]], SpanFromLeft}, {
                    Item[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDropDown.png"]]]], Alignment -> Right], SpanFromLeft}}, Alignment -> {Center, {Bottom, Top}},
                    Spacings -> {0.5, {0, 0, 0}}, ItemSize -> {Automatic, {Automatic, 0}}], ImageMargins -> 0, FrameMargins -> 0, ImageSize -> {24, 24}, RoundingRadius ->
                    3, Alignment -> {Center, Bottom}, FrameStyle -> GrayLevel[0.75], Background -> GrayLevel[0.99]], False -> Framed[
                    Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "WindowSize.png"]]]], SpanFromLeft}, {
                    Item[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDropDown.png"]]]], Alignment -> Right], SpanFromLeft}}, Alignment -> {Center, {Bottom, Top}},
                    Spacings -> {0.5, {0, 0, 0}}, ItemSize -> {Automatic, {Automatic, 0}}], ImageMargins -> 0, FrameMargins -> 0, ImageSize -> {24, 24}, RoundingRadius ->
                    3, Alignment -> {Center, Bottom}, FrameStyle -> GrayLevel[0.75], Background -> GrayLevel[0.95]]},
                    Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]], ContentPadding -> False, ImageSize -> {24, 24}, FrameMargins -> 0],
                    PresenterTools`NotebookWindowSizeMenu[
                    EvaluationNotebook[]], Appearance -> None], None], StandardForm]],
                    MouseAppearanceTag["LinkHand"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipWindowSize"], StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> "TextStyling"],
                    Annotation[#,
                    Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipWindowSize"]], "Tooltip"]& ],TagBox[
                    TooltipBox[
                    DynamicBox[
                    ToBoxes[
                    Refresh[
                    PresenterTools`WindowElementsMenu[
                    EvaluationNotebook[],
                    MouseAppearance[
                    Framed[
                    Grid[{{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "WindowElements.png"]]]], SpanFromLeft}, {
                    Item[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "TriangleDropDown.png"]]]], Alignment -> Right], SpanFromLeft}}, Alignment -> {Center, {Bottom, Top}},
                    Spacings -> {0.5, {0, 0, 0}}, ItemSize -> {Automatic, {Automatic, 0}}], ImageMargins -> 0, FrameMargins -> 0, ImageSize -> {24, 24}, RoundingRadius ->
                    3, Alignment -> {Center, Bottom}, FrameStyle -> GrayLevel[0.75], Background -> Dynamic[
                    If[
                    Dynamic[
                    FEPrivate`And[
                    CurrentValue["MouseOver"],
                    CurrentValue["NotebookSelected"]]],
                    GrayLevel[0.99],
                    GrayLevel[0.95]]]], "LinkHand"]], None], StandardForm]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipWindowElements"], StandardForm]], TooltipDelay -> 0.25, TooltipStyle -> "TextStyling"],
                    Annotation[#,
                    Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipWindowElements"]], "Tooltip"]& ]},
                    "RowWithSeparator"],
                    Alignment->Left,
                    StripOnInput->False], "\[SpanFromLeft]"}
                 },
                 AutoDelete->False,
                 FrameStyle->GrayLevel[0.575],
                 GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
                 GridBoxFrame->{"Columns" -> None, "Rows" -> None},
                 GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                 GridBoxSpacings->{"Columns" -> {0, 0.25, 0.25, 0.75, 7}, "Rows" -> {{0}}}],
                "Grid"],
               Alignment->{Left, Top},
               Appearance->None,
               Background->GrayLevel[0.95],
               ContentPadding->False,
               FrameMargins->{{Automatic, Automatic}, {12, 0}},
               ImageMargins->{{10, 0}, {1, 0}}]}
            },
            AutoDelete->False,
            FrameStyle->GrayLevel[0.75],
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {Center, Top}},
            GridBoxDividers->{"ColumnsIndexed" -> {3 -> True}, "Rows" -> {{False}}},
            GridBoxFrame->{"Columns" -> None, "Rows" -> None},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> Dynamic[
                GridDump`Restructure[Spacings, {{0, 0, 0.7, {0}},
                  Dynamic[
                   FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0}}, {{0.175}}]]}, "Columns"]], "ColumnsIndexed" -> Dynamic[
                GridDump`Restructure[Spacings, {{0, 0, 0.7, {0}},
                  Dynamic[
                   FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0}}, {{0.175}}]]}, "ColumnsIndexed"]], "Rows" -> Dynamic[
                GridDump`Restructure[Spacings, {{0, 0, 0.7, {0}},
                  Dynamic[
                   FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0}}, {{0.175}}]]}, "Rows"]], "RowsIndexed" -> Dynamic[
                GridDump`Restructure[Spacings, {{0, 0, 0.7, {0}},
                  Dynamic[
                   FEPrivate`If[
                    FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Unix"], {{0}}, {{0.175}}]]}, "RowsIndexed"]]}],
           "Grid"],
          Alignment->{Left, Top},
          Appearance->None,
          Background->GrayLevel[0.95],
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          ImageMargins->0,
          ImageSize->{{500, Automatic}, 66}], True->
         PanelBox[
          TagBox[GridBox[{
             {
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource["PresenterToolStrings", "LockSizeAndPositionLabel"], StandardForm]],
               StripOnInput->False,
               FontFamily:>CurrentValue["PanelFontFamily"],
               FontSize->12]},
             {
              FrameBox[
               TemplateBox[{ButtonBox[
                  PaneSelectorBox[{True -> TagBox[
                    FrameBox[
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "LockToCurrentSizeLabel"], StandardForm]], 11, FontFamily :> CurrentValue["PanelFontFamily"],
                    StripOnInput -> False], FrameMargins -> {{4, 4}, {3, 3}}, ImageMargins -> 0, FrameStyle -> None, RoundingRadius -> 5, Background -> GrayLevel[0.99],
                    StripOnInput -> False],
                    MouseAppearanceTag["LinkHand"]], False -> FrameBox[
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "LockToCurrentSizeLabel"], StandardForm]], 11, FontFamily :> CurrentValue["PanelFontFamily"],
                    StripOnInput -> False], FrameMargins -> {{4, 4}, {3, 3}}, ImageMargins -> 0, FrameStyle -> None, RoundingRadius -> 5, Background -> GrayLevel[0.95],
                    StripOnInput -> False]},
                   Dynamic[CurrentValue[
                    EvaluationNotebook[], "SelectionData"]; MemberQ[
                    CurrentValue[
                    Cells[
                    NotebookSelection[
                    EvaluationNotebook[]]], CellStyle], "ImageSizeLock", 2]], FrameMargins -> 0], ButtonFunction :> PresenterTools`SetLockScaling[
                    EvaluationNotebook[], True], Appearance -> {"Default" -> None, "Pressed" -> None}, Evaluator -> Automatic, Method -> "Preemptive", FrameMargins -> 0],
                 ButtonBox[
                  PaneSelectorBox[{True -> TagBox[
                    FrameBox[
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "ScaleWithScreenSizeLabel"], StandardForm]], 11, FontFamily :> CurrentValue["PanelFontFamily"],
                    StripOnInput -> False], FrameMargins -> {{4, 4}, {3, 3}}, ImageMargins -> 0, FrameStyle -> None, RoundingRadius -> 5, Background -> GrayLevel[0.95],
                    StripOnInput -> False],
                    MouseAppearanceTag["LinkHand"]], False -> FrameBox[
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "ScaleWithScreenSizeLabel"], StandardForm]], 11, FontFamily :> CurrentValue["PanelFontFamily"],
                    StripOnInput -> False], FrameMargins -> {{4, 4}, {3, 3}}, ImageMargins -> 0, FrameStyle -> None, RoundingRadius -> 5, Background -> GrayLevel[0.99],
                    StripOnInput -> False]},
                   Dynamic[CurrentValue[
                    EvaluationNotebook[], "SelectionData"]; MemberQ[
                    CurrentValue[
                    Cells[
                    NotebookSelection[
                    EvaluationNotebook[]]], CellStyle], "ImageSizeLock", 2]], FrameMargins -> 0], ButtonFunction :> PresenterTools`SetLockScaling[
                    EvaluationNotebook[], False], Appearance -> {"Default" -> None, "Pressed" -> None}, Evaluator -> Automatic, Method -> "Preemptive", FrameMargins -> 0]},
                "RowDefault"],
               Alignment->{Center, Center},
               Background->GrayLevel[0.95],
               FrameMargins->0,
               FrameStyle->GrayLevel[0.75],
               ImageMargins->0,
               RoundingRadius->5,
               StripOnInput->False]}
            },
            AutoDelete->False,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {Center, Center}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.75}}}],
           "Grid"],
          Alignment->{Left, Center},
          Appearance->None,
          Background->GrayLevel[0.95],
          FrameMargins->{{0, 0}, {0, 0}},
          ImageMargins->0,
          ImageSize->{{500, Automatic}, 66}]}, Dynamic[
          FEPrivate`If[
           FEPrivate`GreaterEqual[FrontEnd`$NotebookVersionNumber, 12],
           FEPrivate`SameQ[
            FrontEnd`CurrentValue[
             FrontEnd`EvaluationNotebook[], "SelectionType"], "Graphics"],
           FEPrivate`MemberQ[{GraphicsBox, Graphics3DBox},
            FEPrivate`Head[
             FrontEnd`CurrentValue[
              FrontEnd`EvaluationNotebook[], "SelectionData"]]]]],
         Alignment->{Left, Top},
         Background->GrayLevel[0.85],
         ContentPadding->False,
         FrameMargins->0,
         ImageMargins->0,
         ImageSize->{{500, Automatic}, 66}],
        Alignment->{Left, {Center, Top}},
        Appearance->None,
        Background->GrayLevel[0.95],
        ContentPadding->False,
        FrameMargins->0,
        ImageMargins->0,
        ImageSize->{Full, 66}],
       TagBox[GridBox[{
          {
           FrameBox[
            TagBox[GridBox[{
               {
                TagBox[
                 ButtonBox[
                  PaneBox[
                   TagBox[GridBox[{
                    {
                    PaneBox[
                    DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "PresentButton.png"]],
                    ImageSizeCache->{12., {3., 8.}}],
                    FrameMargins->{{1, 1}, {1, 2}}],
                    StyleBox[
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "StartPresentation"], StandardForm],
                    ImageSizeCache->{103., {1., 9.}}],
                    StripOnInput->False,
                    FontFamily:>CurrentValue["PanelFontFamily"],
                    FontSize->12,
                    FontColor->GrayLevel[1]]}
                    },
                    AutoDelete->False,
                    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                    "Grid"],
                   Appearance->None,
                   FrameMargins->{{4, 2}, {2, 0}},
                   ImageMargins->0],
                  Appearance->{"Default" -> None, "Pressed" -> None},
                  ButtonFunction:>PresenterTools`PresentNotebook[],
                  ContentPadding->False,
                  Evaluator->Automatic,
                  Method->"Preemptive",
                  Tooltip->Dynamic[
                    FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipSlidePresentationView"]],
                  TooltipDelay->0.25],
                 MouseAppearanceTag["LinkHand"]],
                TagBox[
                 TooltipBox[
                  TagBox[
                   ActionMenuBox[
                    PaneBox[
                    StyleBox["\<\"\[FilledDownTriangle]\"\>",
                    StripOnInput->False,
                    FontSize->10,
                    FontWeight->"Plain",
                    FontColor->GrayLevel[1]],
                    Alignment->Center,
                    FrameMargins->{{8, 8}, {0, 0}},
                    ImageMargins->0,
                    ImageSize->{Automatic, 19}], {
                    TemplateBox[{StyleBox["\"\[Checkmark] \"", ShowContents -> Dynamic[
                    Refresh[CurrentValue[
                    EvaluationNotebook[], ScreenStyleEnvironment] === "Slideshow Working", None]], StripOnInput -> False],"\"Slideshow Working\""},
                    "RowDefault"]:>(CurrentValue[
                    EvaluationNotebook[], ScreenStyleEnvironment] = "Slideshow Working"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = True; Null), Delimiter,
                    TemplateBox[{StyleBox["\"\[Checkmark] \"", ShowContents -> Dynamic[
                    Refresh[CurrentValue[
                    EvaluationNotebook[], ScreenStyleEnvironment] === "Scrolling Presentation", None]], StripOnInput -> False],"\"Scrolling Presentation\""},
                    "RowDefault"]:>(CurrentValue[
                    EvaluationNotebook[], ScreenStyleEnvironment] = "Scrolling Presentation"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = False; Null),
                    TemplateBox[{StyleBox["\"\[Checkmark] \"", ShowContents -> Dynamic[
                    Refresh[CurrentValue[
                    EvaluationNotebook[], ScreenStyleEnvironment] === "Slideshow Presentation", None]], StripOnInput -> False],"\"Slideshow Presentation\""},
                    "RowDefault"]:>(CurrentValue[
                    EvaluationNotebook[], ScreenStyleEnvironment] = "Slideshow Presentation"; CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "PresenterSettings", "ShowSlideBreaks"}] = False; Null)},
                    Appearance->None],
                   MouseAppearanceTag["LinkHand"]],
                  "\"Additional views\"",
                  TooltipDelay->0.25,
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Additional views", "Tooltip"]& ]}
              },
              AutoDelete->False,
              FrameStyle->GrayLevel[0.75],
              GridBoxDividers->{"ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}},
              GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0.25}}, "Rows" -> {{0}}}],
             "Grid"],
            Alignment->{Center, Center},
            Background->If[
              Dynamic[
               Dynamic[
                FEPrivate`And[
                 CurrentValue["MouseOver"],
                 CurrentValue["NotebookSelected"]]]],
              RGBColor[0.137255, 0.84706, 0.95294],
              RGBColor[0, 0.75294, 0.86665]],
            FrameMargins->0,
            FrameStyle->If[
              Dynamic[
               Dynamic[
                FEPrivate`And[
                 CurrentValue["MouseOver"],
                 CurrentValue["NotebookSelected"]]]],
              RGBColor[0.137255, 0.84706, 0.95294],
              RGBColor[0, 0.75294, 0.86665]],
            ImageMargins->0,
            RoundingRadius->5,
            StripOnInput->False], "\[SpanFromLeft]", "\[SpanFromLeft]"},
          {
           TagBox[
            ButtonBox[
             PaneSelectorBox[{True->
              FrameBox[
               PaneBox[
                DynamicBox[FEPrivate`ImportImage[
                  FrontEnd`FileName[{"PresenterTools"}, "ShowOutlinePalette.png"]]],
                Alignment->{Center, Center},
                FrameMargins->0,
                ImageMargins->0],
               Alignment->{Center, Center},
               Background->GrayLevel[0.99],
               FrameMargins->{{0, 0}, {2, 2}},
               FrameStyle->None,
               ImageMargins->0,
               ImageSize->{23, 23},
               StripOnInput->False], False->
              FrameBox[
               PaneBox[
                DynamicBox[FEPrivate`ImportImage[
                  FrontEnd`FileName[{"PresenterTools"}, "ShowOutlinePalette.png"]],
                 ImageSizeCache->{15., {5., 10.}}],
                Alignment->{Center, Center},
                FrameMargins->0,
                ImageMargins->0],
               Alignment->{Center, Center},
               Background->GrayLevel[0.95],
               FrameMargins->{{0, 0}, {2, 2}},
               FrameStyle->None,
               ImageMargins->0,
               ImageSize->{23, 23},
               StripOnInput->False]}, Dynamic[
               FEPrivate`And[
                CurrentValue["MouseOver"],
                CurrentValue["NotebookSelected"]]],
              ContentPadding->False,
              FrameMargins->0,
              ImageSize->{23, 23}],
             Appearance->{"Default" -> None, "Pressed" -> None},
             ButtonFunction:>PresenterTools`OpenPresenterPalette[
               EvaluationNotebook[], "OutlinePalette"],
             Evaluator->Automatic,
             Method->"Queued",
             Tooltip->Dynamic[
               FEPrivate`FrontEndResource["PresenterToolStrings", "OutlinePaletteButtonTooltip"]],
             TooltipDelay->0.25],
            MouseAppearanceTag["LinkHand"]],
           TagBox[
            ButtonBox[
             PaneSelectorBox[{True->
              FrameBox[
               PaneBox[
                DynamicBox[FEPrivate`ImportImage[
                  FrontEnd`FileName[{"PresenterTools"}, "ShowPresenterNotesPalette.png"]]],
                Alignment->{Center, Center},
                FrameMargins->0,
                ImageMargins->0],
               Alignment->{Center, Center},
               Background->GrayLevel[0.99],
               FrameMargins->{{0, 0}, {0, 0}},
               FrameStyle->None,
               ImageMargins->0,
               ImageSize->{23, 23},
               StripOnInput->False], False->
              FrameBox[
               PaneBox[
                DynamicBox[FEPrivate`ImportImage[
                  FrontEnd`FileName[{"PresenterTools"}, "ShowPresenterNotesPalette.png"]],
                 ImageSizeCache->{15., {5., 10.}}],
                Alignment->{Center, Center},
                FrameMargins->0,
                ImageMargins->0],
               Alignment->{Center, Center},
               Background->GrayLevel[0.95],
               FrameMargins->{{0, 0}, {0, 0}},
               FrameStyle->None,
               ImageMargins->0,
               ImageSize->{23, 23},
               StripOnInput->False]}, Dynamic[
               FEPrivate`And[
                CurrentValue["MouseOver"],
                CurrentValue["NotebookSelected"]]],
              ContentPadding->False,
              FrameMargins->0,
              ImageSize->{23, 23}],
             Appearance->{"Default" -> None, "Pressed" -> None},
             ButtonFunction:>PresenterTools`OpenPresenterPalette[
               EvaluationNotebook[], "SideNotesPalette"],
             Evaluator->Automatic,
             Method->"Queued",
             Tooltip->Dynamic[
               FEPrivate`FrontEndResource["PresenterToolStrings", "SideNotesPaletteButtonTooltip"]],
             TooltipDelay->0.25],
            MouseAppearanceTag["LinkHand"]],
           ItemBox[
            TagBox[
             TagBox[
              TooltipBox[
               ActionMenuBox[
                PaneSelectorBox[{False->
                 FrameBox[
                  PaneBox[
                   DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]],
                    ImageSizeCache->{15., {5., 10.}}],
                   Alignment->{Center, Center},
                   FrameMargins->0,
                   ImageMargins->0],
                  Alignment->{Center, Center},
                  Background->GrayLevel[0.95],
                  FrameMargins->{{0, 0}, {0, 0}},
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->0,
                  ImageSize->{23, 23},
                  RoundingRadius->5,
                  StripOnInput->False], True->
                 FrameBox[
                  PaneBox[
                   DynamicBox[FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "MenuBars.png"]]],
                   Alignment->{Center, Center},
                   FrameMargins->0,
                   ImageMargins->0],
                  Alignment->{Center, Center},
                  Background->GrayLevel[0.99],
                  FrameMargins->{{0, 0}, {0, 0}},
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->0,
                  ImageSize->{23, 23},
                  RoundingRadius->5,
                  StripOnInput->False]}, Dynamic[
                  FEPrivate`And[
                   CurrentValue["MouseOver"],
                   CurrentValue["NotebookSelected"]]],
                 FrameMargins->0,
                 ImageSize->{23, 23}], {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "StylePaletteMenuItem"], StandardForm]]:>FrontEndExecute[{
                  FrontEnd`NotebookOpen[
                   FrontEnd`FindFileOnPath["PresenterToolsStylePalette.nb", "PalettePath"]]}], Delimiter,
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "PresentationControlsMenuItem"], StandardForm]]:>PresenterTools`OpenPresenterPalette[
                 EvaluationNotebook[], "PresenterControlsPalette"],
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "ThemeOptionsMenuItem"], StandardForm]]:>PresenterTools`OpenPresenterPalette[
                 EvaluationNotebook[], "ThemeOptionsPalette"], Delimiter,
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "AddNewStyleLabel"], StandardForm]]:>PresenterTools`OpenPresenterPalette[
                 EvaluationNotebook[], "AddNewStylePalette"], Delimiter,
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource["PresenterToolStrings", "HelpMenuItem"], StandardForm]]:>Documentation`HelpLookup[
                "paclet:guide/PresentationsWithTheWolframSystem"]},
                Appearance->None,
                Method->"Queued"],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipMoreButton"], StandardForm]],
               TooltipDelay->0.25,
               TooltipStyle->"TextStyling"],
              Annotation[#,
               Dynamic[
                FEPrivate`FrontEndResource["PresenterToolStrings", "TooltipMoreButton"]], "Tooltip"]& ],
             MouseAppearanceTag["LinkHand"]],
            Alignment->Right,
            StripOnInput->False]}
         },
         AutoDelete->False,
         FrameStyle->GrayLevel[0.75],
         GridBoxFrame->{"Columns" -> None, "Rows" -> None},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{0.75}}}],
        "Grid"]}
     },
     AutoDelete->False,
     FrameStyle->GrayLevel[0.75],
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
     GridBoxDividers->{"ColumnsIndexed" -> {2 -> True, 3 -> True, 4 -> False}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {2.65, 1.7, 1.7, {2.94}}, "Rows" -> {{0.2}}}],
    "Grid"],
   Background->GrayLevel[0.95],
   ContentPadding->False,
   FrameMargins->{{12, 12}, {1, 5}},
   ImageMargins->0],
  DynamicModuleValues:>{},
  Initialization:>(Needs["PresenterTools`"]; PresenterTools`SetEnvironmentTaggingRules[
     CurrentValue[
      EvaluationNotebook[], ScreenStyleEnvironment],
     EvaluationNotebook[]]; Null)]],
 CellMargins -> 0, CellFrameMargins -> 0, CellContext -> Cell]
]





}




@@resource PresenterToolBitmaps

{}
