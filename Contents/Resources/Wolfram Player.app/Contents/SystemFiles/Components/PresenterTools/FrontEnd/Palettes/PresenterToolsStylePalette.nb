(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     45921,       1101]
NotebookOptionsPosition[     45395,       1079]
NotebookOutlinePosition[     45955,       1103]
CellTagsIndexPosition[     45912,       1100]
MenuPosition->0
WindowTitle->Style Palette
WindowFrame->Palette*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{}, 
  PanelBox[
   TagBox[GridBox[{
      {
       TagBox[
        TagBox[
         TooltipBox[
          ActionMenuBox[
           PanelBox[
            TagBox[GridBox[{
               {
                FrameBox[
                 PaneBox[
                  DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "InsertSlideMiniFill.png"]],
                   ImageSizeCache->{15., {5., 10.}}],
                  Alignment->{Center, Center},
                  FrameMargins->0,
                  ImageMargins->0],
                 Alignment->{Center, Center},
                 Background->None,
                 FrameMargins->{{0, 0}, {2, 2}},
                 FrameStyle->None,
                 ImageMargins->0,
                 StripOnInput->False], 
                PaneBox[
                 StyleBox[
                  DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "PresenterToolStrings", "InsertSlidePalette"], 
                    StandardForm],
                   ImageSizeCache->{85., {1., 9.}}],
                  StripOnInput->False,
                  TextAlignment->Center,
                  FontFamily:>CurrentValue["PanelFontFamily"],
                  FontSize->11],
                 FrameMargins->{{0, 0}, {0, 0}}]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {Center, Baseline}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            Appearance->None,
            Background->Dynamic[
              If[
               CurrentValue["MouseOver"], 
               GrayLevel[0.99], 
               GrayLevel[0.95]]],
            FrameMargins->{{0, 0}, {0, 0}},
            ImageMargins->0,
            ImageSize->{Automatic, 20}], {
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "PresenterToolStrings", "InsertSlideMenu"], StandardForm]]:>
           PresenterTools`InsertSlideBreak[
            InputNotebook[]], 
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "PresenterToolStrings", "InsertSlideWithBackgroundMenu"], 
             StandardForm]]:>PresenterTools`InsertSlideBreak[
            InputNotebook[], "IncludeBackground" -> True]},
           Alignment->Left,
           Appearance->{"Default" -> None, "Pressed" -> None},
           Background->None,
           Evaluator->Automatic,
           Method->"Preemptive"],
          DynamicBox[
           ToBoxes[
            FEPrivate`FrontEndResource[
            "PresenterToolStrings", "TooltipInsertSlide"], StandardForm]],
          TooltipDelay->0.25],
         Annotation[#, 
          Dynamic[
           FEPrivate`FrontEndResource[
           "PresenterToolStrings", "TooltipInsertSlide"]], "Tooltip"]& ],
        MouseAppearanceTag["LinkHand"]]},
      {
       StyleBox[
        DynamicBox[ToBoxes[
          FEPrivate`FrontEndResource[
          "PresenterToolStrings", "StylePaletteLabelCellStyle"], StandardForm],
         ImageSizeCache->{163., {1., 9.}}],
        StripOnInput->False,
        FontFamily:>CurrentValue["PanelFontFamily"],
        FontSize->12,
        FontVariations->{"CapsType"->"AllCaps"},
        FontColor->GrayLevel[0.6]]},
      {
       TemplateBox[{TemplateBox[{2}, "Spacer1"],TagBox[
          TooltipBox[
           TagBox[
            FrameBox[
             DynamicBox[
              ToBoxes[
               ActionMenu[
                Pane[
                 Grid[{{
                    Pane[
                    Style[
                    Dynamic[
                    FEPrivate`If[
                    FEPrivate`MemberQ[{$Failed}, 
                    CurrentValue[
                    NotebookSelection[
                    InputNotebook[]], "CellStyleName"]], "-", 
                    CurrentValue[
                    NotebookSelection[
                    InputNotebook[]], "CellStyleName"]]], 12, FontFamily :> 
                    CurrentValue["PanelFontFamily"]], ImageSizeAction -> 
                    "Clip", ImageSize -> {110, 16}], 
                    Item[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "TriangleDown.png"]]]], Alignment -> {Right, Center}]}}, 
                  Alignment -> {Left, Center}, Spacings -> {0.5, 0}, 
                  ItemSize -> {{
                    Scaled[0.75], 
                    Scaled[0.2]}}], {100, 20}, Alignment -> {Left, Center}], 
                PresenterTools`SetCellStyleMenu[
                 InputNotebook[]], Appearance -> None]]], ImageMargins -> 0, 
             FrameMargins -> {{10, 0}, {0, 0}}, FrameStyle -> GrayLevel[0.75],
              Background -> GrayLevel[1], RoundingRadius -> 5, StripOnInput -> 
             False], 
            MouseAppearanceTag["LinkHand"]], "\"Cell style\"", TooltipDelay -> 
           0.25, LabelStyle -> "TextStyling"], 
          Annotation[#, "Cell style", "Tooltip"]& ],TagBox[
          ButtonBox[
           PaneSelectorBox[{True -> FrameBox[
               DynamicBox[
                FEPrivate`ImportImage[
                 FrontEnd`FileName[{"PresenterTools"}, "StyleUpdate.png"]]], 
               Background -> GrayLevel[0.99], 
               FrameMargins -> {{2, 2}, {1, 1}}, FrameStyle -> GrayLevel[0.7],
                ImageMargins -> 0, ImageSize -> {Automatic, 20}, 
               RoundingRadius -> 5, StripOnInput -> False], False -> 
             FrameBox[
               DynamicBox[
                FEPrivate`ImportImage[
                 
                 FrontEnd`FileName[{"PresenterTools"}, 
                  "StyleUpdateFalse.png"]]], Background -> GrayLevel[0.95], 
               FrameMargins -> {{2, 2}, {1, 1}}, FrameStyle -> 
               GrayLevel[0.95], ImageMargins -> 0, 
               ImageSize -> {Automatic, 20}, RoundingRadius -> 5, 
               StripOnInput -> False]}, 
            Dynamic[
             CurrentValue[
              InputNotebook[], {"SelectionHasUpdatedStyles", "Absolute"}]]], 
           ButtonFunction :> 
           With[{PresenterTools`Toolbars`Private`cellObj = NotebookSelection[
                InputNotebook[]], PresenterTools`Toolbars`Private`cellStyle = 
              CurrentValue[
                NotebookSelection[
                 InputNotebook[]], "CellStyleName"]}, 
             PresenterTools`UpdateStyleDefinitionsDialog[
              
              InputNotebook[], {{
               PresenterTools`Toolbars`Private`cellStyle -> FE`Evaluate[
                  FEPrivate`CellStyleComplement[
                  PresenterTools`Toolbars`Private`cellObj, 
                   FEPrivate`ResolveCellStyle[
                   PresenterTools`Toolbars`Private`cellObj, 
                    PresenterTools`Toolbars`Private`cellStyle]]]}}, 
              PresenterTools`Toolbars`Private`cellStyle]], 
           Appearance -> {"Default" -> None, "Pressed" -> None}, Enabled -> 
           Dynamic[
             CurrentValue[
              InputNotebook[], {"SelectionHasUpdatedStyles", "Absolute"}]], 
           Evaluator -> Automatic, Method -> "Preemptive", Tooltip -> 
           Dynamic[
             FEPrivate`FrontEndResource[
             "PresenterToolStrings", "TooltipApplyCurrentFormatting"]], 
           TooltipDelay -> 0.25], 
          MouseAppearanceTag["LinkHand"]]},
        "RowWithSeparator"]},
      {
       TagBox[
        TooltipBox[
         FrameBox[
          DynamicBox[ToBoxes[
            ActionMenu[
             Pane[
              Grid[{{
                 Dynamic[
                  AbsoluteCurrentValue[
                   NotebookSelection[
                    InputNotebook[]], FontFamily], 
                  BaseStyle -> {FontSize -> 12}], 
                 Item[
                  Dynamic[
                   RawBoxes[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "TriangleDown.png"]]]], Alignment -> {Right, Center}]}}, 
               Alignment -> {Left, Center}, Spacings -> {0.5, 0}, 
               ItemSize -> {{
                  Scaled[0.75], 
                  Scaled[0.2]}}], {160, 16}, Alignment -> {Left, Center}], 
             PresenterTools`SetFontFamilyMenuList[], Appearance -> None]],
           ImageSizeCache->{160., {5., 13.}}],
          Background->GrayLevel[1],
          FrameMargins->{{10, 0}, {2, 0}},
          FrameStyle->GrayLevel[0.75],
          RoundingRadius->5,
          StripOnInput->False],
         DynamicBox[
          ToBoxes[
           FEPrivate`FrontEndResource[
           "PresenterToolStrings", "TooltipFontFamily"], StandardForm]],
         TooltipDelay->0.25],
        Annotation[#, 
         Dynamic[
          FEPrivate`FrontEndResource[
          "PresenterToolStrings", "TooltipFontFamily"]], "Tooltip"]& ]},
      {
       TagBox[GridBox[{
          {
           TagBox[
            TooltipBox[
             ActionMenuBox[
              PaneSelectorBox[{False->
               FrameBox[
                PaneBox[
                 DynamicBox[FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TriangleDouble.png"]],
                  ImageSizeCache->{15., {5., 10.}}],
                 Alignment->{Center, Center},
                 FrameMargins->0,
                 ImageMargins->0],
                Alignment->{Center, Center},
                Background->GrayLevel[0.95],
                FrameMargins->{{0, 0}, {2, 2}},
                FrameStyle->None,
                ImageMargins->0,
                StripOnInput->False], True->
               FrameBox[
                PaneBox[
                 DynamicBox[FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TriangleDouble.png"]]],
                 Alignment->{Center, Center},
                 FrameMargins->0,
                 ImageMargins->0],
                Alignment->{Center, Center},
                Background->GrayLevel[0.99],
                FrameMargins->{{0, 0}, {2, 2}},
                FrameStyle->None,
                ImageMargins->0,
                StripOnInput->False]}, Dynamic[
                CurrentValue["MouseOver"]],
               FrameMargins->0,
               ImageSize->Automatic], {"\<\"+3\"\>":>
              PresenterTools`SetSelectionOptions["FontSize", 3., 
               InputNotebook[]], "\<\"+2\"\>":>
              PresenterTools`SetSelectionOptions["FontSize", 2., 
               InputNotebook[]], "\<\"+1\"\>":>
              PresenterTools`SetSelectionOptions["FontSize", 1., 
               InputNotebook[]], Delimiter, "\<\"-1\"\>":>
              PresenterTools`SetSelectionOptions["FontSize", -1., 
               InputNotebook[]], "\<\"-2\"\>":>
              PresenterTools`SetSelectionOptions["FontSize", -2., 
               InputNotebook[]], "\<\"-3\"\>":>
              PresenterTools`SetSelectionOptions["FontSize", -3., 
               InputNotebook[]]},
              Appearance->None],
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "PresenterToolStrings", "TooltipModifyFontSize"], 
               StandardForm]],
             TooltipDelay->0.25],
            Annotation[#, 
             Dynamic[
              FEPrivate`FrontEndResource[
              "PresenterToolStrings", "TooltipModifyFontSize"]], 
             "Tooltip"]& ], 
           FrameBox[
            ButtonBox[
             TagBox[
              TooltipBox[
               PaneSelectorBox[{False->
                PanelBox[
                 DynamicBox[FEPrivate`ImportImage[
                   FrontEnd`FileName[{"PresenterTools"}, "TextStyleBold.png"]],
                  ImageSizeCache->{15., {5., 10.}}],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.95],
                 FrameMargins->0,
                 ImageMargins->0], True->
                PanelBox[
                 DynamicBox[FEPrivate`ImportImage[
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TextStyleBold.png"]]],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.99],
                 FrameMargins->0,
                 ImageMargins->0]}, Dynamic[
                 CurrentValue["MouseOver"]],
                FrameMargins->0,
                ImageSize->Automatic],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "PresenterToolStrings", "TooltipFontBold"], StandardForm]],
               TooltipDelay->0.25],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "TooltipFontBold"]], "Tooltip"]& ],
             Appearance->{"Default" -> None, "Pressed" -> None},
             
             ButtonFunction:>PresenterTools`SetSelectionOptions[
              "FontWeight", 
               InputNotebook[]],
             Evaluator->Automatic,
             Method->"Preemptive"],
            Appearance->None,
            FrameMargins->0,
            FrameStyle->Dynamic[
              If[CurrentValue[
                 NotebookSelection[
                  InputNotebook[]], FrontEnd`FontWeight] === "Bold", 
               GrayLevel[0.8], 
               GrayLevel[0.95]]],
            ImageMargins->{{0, 0}, {0, 0}},
            StripOnInput->False], 
           FrameBox[
            ButtonBox[
             TagBox[
              TooltipBox[
               PaneSelectorBox[{False->
                PanelBox[
                 DynamicBox[FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TextStyleItalic.png"]],
                  ImageSizeCache->{15., {5., 10.}}],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.95],
                 FrameMargins->0,
                 ImageMargins->0], True->
                PanelBox[
                 DynamicBox[FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TextStyleItalic.png"]]],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.99],
                 FrameMargins->0,
                 ImageMargins->0]}, Dynamic[
                 CurrentValue["MouseOver"]],
                FrameMargins->0,
                ImageSize->Automatic],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "PresenterToolStrings", "TooltipFontItalic"], StandardForm]],
               
               TooltipDelay->0.25],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "TooltipFontItalic"]], "Tooltip"]& ],
             Appearance->{"Default" -> None, "Pressed" -> None},
             ButtonFunction:>PresenterTools`SetSelectionOptions["FontSlant", 
               InputNotebook[]],
             Evaluator->Automatic,
             Method->"Preemptive"],
            Appearance->None,
            FrameMargins->0,
            FrameStyle->Dynamic[
              If[CurrentValue[
                 NotebookSelection[
                  InputNotebook[]], FrontEnd`FontSlant] === "Italic", 
               GrayLevel[0.8], 
               GrayLevel[0.95]]],
            ImageMargins->{{0, 0}, {0, 0}},
            StripOnInput->False], 
           FrameBox[
            ButtonBox[
             TagBox[
              TooltipBox[
               PaneSelectorBox[{False->
                PanelBox[
                 DynamicBox[FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TextStyleUnderline.png"]],
                  ImageSizeCache->{15., {5., 10.}}],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.95],
                 FrameMargins->0,
                 ImageMargins->0], True->
                PanelBox[
                 DynamicBox[FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"PresenterTools"}, 
                    "TextStyleUnderline.png"]]],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.99],
                 FrameMargins->0,
                 ImageMargins->0]}, Dynamic[
                 CurrentValue["MouseOver"]],
                FrameMargins->0,
                ImageSize->Automatic],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "PresenterToolStrings", "TooltipFontUnderline"], 
                 StandardForm]],
               TooltipDelay->0.25],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "TooltipFontUnderline"]], 
               "Tooltip"]& ],
             Appearance->{"Default" -> None, "Pressed" -> None},
             
             ButtonFunction:>PresenterTools`SetSelectionOptions[
              "FontUnderline", 
               InputNotebook[]],
             Evaluator->Automatic,
             Method->"Preemptive"],
            Appearance->None,
            FrameMargins->0,
            FrameStyle->Dynamic[
              If[
               CurrentValue[
                NotebookSelection[
                 InputNotebook[]], FrontEnd`FontVariationsUnderline], 
               GrayLevel[0.8], 
               GrayLevel[0.95]]],
            ImageMargins->{{0, 0}, {0, 0}},
            StripOnInput->False], 
           TagBox[
            TooltipBox[
             ActionMenuBox[
              PaneSelectorBox[{False->
               FrameBox[
                PaneBox[Cell[BoxData[
                  StyleBox["A",
                   FontFamily->"Times",
                   FontSize->12,
                   FontWeight->Bold,
                   FontColor->Dynamic[
                    AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor]]]],ExpressionUUID->
                  "b402c87c-bdac-4b0c-86d1-36b9855c69d1"],
                 Alignment->{Center, Center},
                 ImageSize->{20, 20}],
                Alignment->{Center, Center},
                Background->GrayLevel[0.95],
                FrameMargins->{{0, 0}, {3, 1}},
                FrameStyle->None,
                ImageMargins->0,
                StripOnInput->False], True->
               FrameBox[
                PaneBox[Cell[BoxData[
                  StyleBox["A",
                   FontFamily->"Times",
                   FontSize->12,
                   FontWeight->Bold,
                   FontColor->Dynamic[
                    AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor]]]],ExpressionUUID->
                  "9e737fe4-dfb1-4548-8f97-692447235190"],
                 Alignment->{Center, Center},
                 ImageSize->{20, 20}],
                Alignment->{Center, Center},
                Background->GrayLevel[0.99],
                FrameMargins->{{0, 0}, {3, 1}},
                FrameStyle->None,
                ImageMargins->0,
                StripOnInput->False]}, Dynamic[
                CurrentValue["MouseOver"]],
               FrameMargins->0,
               ImageSize->Automatic], {
              
              TemplateBox[{
               TemplateBox[{2}, "Spacer1"],StyleBox[
                "\"\[Checkmark] \"", ShowContents -> 
                 Dynamic[AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor] === CurrentValue[
                    InputNotebook[], {StyleHints, "ColorSet", "Display1"}]], 
                 StripOnInput -> False],PanelBox[
                "\" \"", ImageSize -> {31, 15}, Background :> Dynamic[
                   CurrentValue[
                    InputNotebook[], {StyleHints, "ColorSet", "Display1"}]]],
                StyleBox["\"Theme color 1\"", StripOnInput -> False]},
               "RowWithSeparator"]:>PresenterTools`SetSelectionOptions[
              "FontColor", "Display1", 
               InputNotebook[]], 
              
              TemplateBox[{
               TemplateBox[{2}, "Spacer1"],StyleBox[
                "\"\[Checkmark] \"", ShowContents -> 
                 Dynamic[AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor] === CurrentValue[
                    InputNotebook[], {StyleHints, "ColorSet", "Display2"}]], 
                 StripOnInput -> False],PanelBox[
                "\" \"", ImageSize -> {31, 15}, Background :> Dynamic[
                   CurrentValue[
                    InputNotebook[], {StyleHints, "ColorSet", "Display2"}]]],
                StyleBox["\"Theme color 2\"", StripOnInput -> False]},
               "RowWithSeparator"]:>PresenterTools`SetSelectionOptions[
              "FontColor", "Display2", 
               InputNotebook[]], 
              
              TemplateBox[{
               TemplateBox[{2}, "Spacer1"],StyleBox[
                "\"\[Checkmark] \"", ShowContents -> 
                 Dynamic[AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor] === CurrentValue[
                    InputNotebook[], {StyleHints, "ColorSet", "Display3"}]], 
                 StripOnInput -> False],PanelBox[
                "\" \"", ImageSize -> {31, 15}, Background :> Dynamic[
                   CurrentValue[
                    InputNotebook[], {StyleHints, "ColorSet", "Display3"}]]],
                StyleBox["\"Theme color 3\"", StripOnInput -> False]},
               "RowWithSeparator"]:>PresenterTools`SetSelectionOptions[
              "FontColor", "Display3", 
               InputNotebook[]], Delimiter, 
              
              TemplateBox[{
               StyleBox[
                "\"\[Checkmark] \"", ShowContents -> 
                 Dynamic[AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor] === Black], StripOnInput -> 
                 False],"\" Black\""},
               "RowDefault"]:>PresenterTools`SetSelectionOptions[
              "FontColor", "Black", 
               InputNotebook[]], 
              
              TemplateBox[{
               StyleBox[
                "\"\[Checkmark] \"", ShowContents -> 
                 Dynamic[AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor] === Gray], StripOnInput -> 
                 False],"\" Gray\""},
               "RowDefault"]:>PresenterTools`SetSelectionOptions[
              "FontColor", "Gray", 
               InputNotebook[]], 
              
              TemplateBox[{
               StyleBox[
                "\"\[Checkmark] \"", ShowContents -> 
                 Dynamic[AbsoluteCurrentValue[
                    NotebookSelection[
                    InputNotebook[]], FontColor] === White], StripOnInput -> 
                 False],"\" White\""},
               "RowDefault"]:>PresenterTools`SetSelectionOptions[
              "FontColor", "White", 
               InputNotebook[]], Delimiter, 
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "TooltipFontColorPalette"], 
                StandardForm]]:>PresenterTools`SetSelectionOptions[
              "FontColor", 
               InputNotebook[]], Delimiter},
              Appearance->None],
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource[
               "PresenterToolStrings", "TooltipFontColor"], StandardForm]],
             TooltipDelay->0.25],
            Annotation[#, 
             Dynamic[
              FEPrivate`FrontEndResource[
              "PresenterToolStrings", "TooltipFontColor"]], "Tooltip"]& ], 
           PanelBox[
            ButtonBox[
             TagBox[
              TooltipBox[
               PaneSelectorBox[{False->
                FrameBox[
                 PaneBox[
                  DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "ClearCellFormatting.png"]],
                   ImageSizeCache->{15., {5., 10.}}],
                  Alignment->{Center, Center},
                  FrameMargins->0,
                  ImageMargins->0],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.95],
                 FrameMargins->{{0, 0}, {2, 2}},
                 FrameStyle->None,
                 ImageMargins->0,
                 StripOnInput->False], True->
                FrameBox[
                 PaneBox[
                  DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "ClearCellFormatting.png"]]],
                  Alignment->{Center, Center},
                  FrameMargins->0,
                  ImageMargins->0],
                 Alignment->{Center, Center},
                 Background->GrayLevel[0.99],
                 FrameMargins->{{0, 0}, {2, 2}},
                 FrameStyle->None,
                 ImageMargins->0,
                 StripOnInput->False]}, Dynamic[
                 CurrentValue["MouseOver"]],
                FrameMargins->0,
                ImageSize->Automatic],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "PresenterToolStrings", "TooltipClearFormatting"], 
                 StandardForm]],
               TooltipDelay->0.25],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "TooltipClearFormatting"]], 
               "Tooltip"]& ],
             Appearance->{"Default" -> None, "Pressed" -> None},
             ButtonFunction:>PresenterTools`ClearCellFormatting[
               InputNotebook[]],
             Evaluator->Automatic,
             Method->"Preemptive"],
            Appearance->None,
            FrameMargins->0,
            ImageMargins->{{0, 0}, {0, 0}}]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {1, 1, 0, 0, 0, 3}, "Rows" -> {{0}}}],
        
        "Grid"]},
      {
       PanelBox[
        TagBox[GridBox[{
           {
            TagBox[
             TooltipBox[
              ActionMenuBox[
               TagBox[
                PaneSelectorBox[{False->
                 FrameBox[
                  TagBox[GridBox[{
                    {
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "CellAlignmentLeft.png"]],
                    ImageSizeCache->{15., {5., 10.}}], "\[SpanFromLeft]"},
                    {
                    ItemBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "TriangleDropDown.png"]],
                    ImageSizeCache->{3., {0., 3.}}],
                    Alignment->Right,
                    StripOnInput->False], "\[SpanFromLeft]"}
                    },
                    AutoDelete->False,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {Bottom, Top}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {Automatic, 0}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.5}}, "Rows" -> {0, 0, 0}}],
                   "Grid"],
                  Alignment->{Center, Bottom},
                  Background->GrayLevel[0.95],
                  FrameMargins->0,
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->0,
                  ImageSize->{24, 24},
                  RoundingRadius->3,
                  StripOnInput->False], True->
                 FrameBox[
                  TagBox[GridBox[{
                    {
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "CellAlignmentLeft.png"]]], "\[SpanFromLeft]"},
                    {
                    ItemBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"PresenterTools"}, 
                    "TriangleDropDown.png"]]],
                    Alignment->Right,
                    StripOnInput->False], "\[SpanFromLeft]"}
                    },
                    AutoDelete->False,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {Bottom, Top}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {Automatic, 0}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.5}}, "Rows" -> {0, 0, 0}}],
                   "Grid"],
                  Alignment->{Center, Bottom},
                  Background->GrayLevel[0.99],
                  FrameMargins->0,
                  FrameStyle->GrayLevel[0.75],
                  ImageMargins->0,
                  ImageSize->{24, 24},
                  RoundingRadius->3,
                  StripOnInput->False]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 FrameMargins->0,
                 ImageSize->Automatic],
                MouseAppearanceTag["LinkHand"]], {
               
               TemplateBox[{
                TemplateBox[{2}, "Spacer1"],StyleBox[
                 "\"\[Checkmark]\"", ShowContents -> Dynamic[CurrentValue[
                    NotebookSelection[
                    InputNotebook[]], TextAlignment] === Left], StripOnInput -> 
                  False],DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResourceString["AlignLeftString"], 
                   StandardForm]]},
                "RowWithSeparator"]:>PresenterTools`SetSelectionOptions[
               "TextAlignment", "Left", 
                InputNotebook[]], 
               
               TemplateBox[{
                TemplateBox[{2}, "Spacer1"],StyleBox[
                 "\"\[Checkmark]\"", ShowContents -> Dynamic[CurrentValue[
                    NotebookSelection[
                    InputNotebook[]], TextAlignment] === Center], 
                  StripOnInput -> False],DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResourceString["AlignCenterString"], 
                   StandardForm]]},
                "RowWithSeparator"]:>PresenterTools`SetSelectionOptions[
               "TextAlignment", "Center", 
                InputNotebook[]], 
               
               TemplateBox[{
                TemplateBox[{2}, "Spacer1"],StyleBox[
                 "\"\[Checkmark]\"", ShowContents -> Dynamic[CurrentValue[
                    NotebookSelection[
                    InputNotebook[]], TextAlignment] === Right], StripOnInput -> 
                  False],DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResourceString["AlignRightString"], 
                   StandardForm]]},
                "RowWithSeparator"]:>PresenterTools`SetSelectionOptions[
               "TextAlignment", "Right", 
                InputNotebook[]]},
               Appearance->None],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "TooltipSetCellAlignment"], 
                StandardForm]],
              TooltipDelay->0.25],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "PresenterToolStrings", "TooltipSetCellAlignment"]], 
              "Tooltip"]& ], 
            FrameBox[
             TemplateBox[{ButtonBox[
                TagBox[
                 PanelBox[
                  DynamicBox[
                   FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeLeft.png"]]], 
                  ImageMargins -> 0, FrameMargins -> 10, 
                  Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.99], 
                    GrayLevel[0.95]]]], 
                 MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                PresenterTools`SetSelectionOptions["Nudge", "Left", 
                  InputNotebook[], "Originator" -> "Palette"], Tooltip -> 
                Dynamic[
                  FEPrivate`FrontEndResource[
                  "PresenterToolStrings", "TooltipNudgeCellLeft"]], 
                TooltipDelay -> 0.25, 
                Appearance -> {"Default" -> None, "Pressed" -> None}, 
                ImageMargins -> 0, ImageSize -> {23, 23}, Evaluator -> 
                Automatic, Method -> "Preemptive"],ButtonBox[
                TagBox[
                 PanelBox[
                  DynamicBox[
                   FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeRight.png"]]],
                   ImageMargins -> 0, FrameMargins -> 10, 
                  Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.99], 
                    GrayLevel[0.95]]]], 
                 MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                PresenterTools`SetSelectionOptions["Nudge", "Right", 
                  InputNotebook[], "Originator" -> "Palette"], Tooltip -> 
                Dynamic[
                  FEPrivate`FrontEndResource[
                  "PresenterToolStrings", "TooltipNudgeCellRight"]], 
                TooltipDelay -> 0.25, 
                Appearance -> {"Default" -> None, "Pressed" -> None}, 
                ImageMargins -> 0, ImageSize -> {23, 23}, Evaluator -> 
                Automatic, Method -> "Preemptive"],ButtonBox[
                TagBox[
                 PanelBox[
                  DynamicBox[
                   FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeUp.png"]]], 
                  ImageMargins -> 0, FrameMargins -> 10, 
                  Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.99], 
                    GrayLevel[0.95]]]], 
                 MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                PresenterTools`SetSelectionOptions["Nudge", "Up", 
                  InputNotebook[], "Originator" -> "Palette"], Tooltip -> 
                Dynamic[
                  FEPrivate`FrontEndResource[
                  "PresenterToolStrings", "TooltipNudgeCellUp"]], 
                TooltipDelay -> 0.25, 
                Appearance -> {"Default" -> None, "Pressed" -> None}, 
                ImageMargins -> 0, ImageSize -> {23, 23}, Evaluator -> 
                Automatic, Method -> "Preemptive"],ButtonBox[
                TagBox[
                 PanelBox[
                  DynamicBox[
                   FEPrivate`ImportImage[
                    FrontEnd`FileName[{"PresenterTools"}, "NudgeDown.png"]]], 
                  ImageMargins -> 0, FrameMargins -> 10, 
                  Alignment -> {Center, Center}, Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.99], 
                    GrayLevel[0.95]]]], 
                 MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                PresenterTools`SetSelectionOptions["Nudge", "Down", 
                  InputNotebook[], "Originator" -> "Palette"], Tooltip -> 
                Dynamic[
                  FEPrivate`FrontEndResource[
                  "PresenterToolStrings", "TooltipNudgeCellDown"]], 
                TooltipDelay -> 0.25, 
                Appearance -> {"Default" -> None, "Pressed" -> None}, 
                ImageMargins -> 0, ImageSize -> {23, 23}, Evaluator -> 
                Automatic, Method -> "Preemptive"]},
              "RowDefault"],
             FrameMargins->0,
             FrameStyle->GrayLevel[0.75],
             ImageMargins->0,
             RoundingRadius->3,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->GrayLevel[0.75],
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          GridBoxFrame->{"Columns" -> None, "Rows" -> None},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {1, 1, 2}, "Rows" -> {{0}}}],
         "Grid"],
        Appearance->None,
        Background->GrayLevel[0.95],
        FrameMargins->0,
        ImageMargins->0]},
      {
       PaneSelectorBox[{True->
        DynamicModuleBox[{PresenterTools`Toolbars`Private`lockGraphic$$}, 
         TagBox[GridBox[{
            {"\<\" \"\>", ""},
            {
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "PresenterToolStrings", "LockSizeAndPositionLabel"], 
                StandardForm]],
              StripOnInput->False,
              FontFamily:>CurrentValue["PanelFontFamily"],
              FontSize->11], "\[SpanFromLeft]"},
            {
             PaneSelectorBox[{True->
              ButtonBox[
               
               TemplateBox[{
                TemplateBox[{2}, "Spacer1"],StyleBox[
                 "\"\[FilledCircle]\"", 12, FontFamily :> 
                  CurrentValue["PanelFontFamily"], FontColor -> 
                  RGBColor[0, 0, 0.8], StripOnInput -> False],StyleBox[
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "PresenterToolStrings", "LockToCurrentSizeLabel"], 
                    StandardForm]], 12, FontFamily :> 
                  CurrentValue["PanelFontFamily"], FontColor -> 
                  GrayLevel[0.5], StripOnInput -> False]},
                "RowWithSeparator"],
               Appearance->{"Default" -> None, "Pressed" -> None},
               ButtonFunction:>PresenterTools`SetLockScaling[
                 InputNotebook[], True],
               Enabled->False,
               Evaluator->Automatic,
               Method->"Preemptive"], False->
              TagBox[
               ButtonBox[
                
                TemplateBox[{
                 TemplateBox[{2}, "Spacer1"],StyleBox[
                  "\"\[FilledCircle]\"", 12, FontFamily :> 
                   CurrentValue["PanelFontFamily"], FontColor -> 
                   GrayLevel[0.75], StripOnInput -> False],StyleBox[
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "PresenterToolStrings", "LockToCurrentSizeLabel"], 
                    StandardForm]], 12, FontFamily :> 
                   CurrentValue["PanelFontFamily"], FontColor -> 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowWithSeparator"],
                Appearance->{"Default" -> None, "Pressed" -> None},
                ButtonFunction:>PresenterTools`SetLockScaling[
                  InputNotebook[], True],
                Enabled->True,
                Evaluator->Automatic,
                Method->"Preemptive"],
               MouseAppearanceTag["LinkHand"]]}, Dynamic[CurrentValue[
                 FrontEnd`InputNotebook[], "SelectionData"]; MemberQ[
                 CurrentValue[
                  Cells[
                   NotebookSelection[
                    FrontEnd`InputNotebook[]]], CellStyle], "ImageSizeLock", 
                 2]]], ""},
            {
             PaneSelectorBox[{True->
              ButtonBox[
               
               TemplateBox[{
                TemplateBox[{2}, "Spacer1"],StyleBox[
                 "\"\[FilledCircle]\"", 12, FontFamily :> 
                  CurrentValue["PanelFontFamily"], FontColor -> 
                  RGBColor[0, 0, 0.8], StripOnInput -> False],StyleBox[
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "PresenterToolStrings", "ScaleWithScreenSizeLabel"], 
                    StandardForm]], 12, FontFamily :> 
                  CurrentValue["PanelFontFamily"], FontColor -> 
                  GrayLevel[0.5], StripOnInput -> False]},
                "RowWithSeparator"],
               Appearance->{"Default" -> None, "Pressed" -> None},
               ButtonFunction:>PresenterTools`SetLockScaling[
                 InputNotebook[], False],
               Enabled->True,
               Evaluator->Automatic,
               Method->"Preemptive"], False->
              TagBox[
               ButtonBox[
                
                TemplateBox[{
                 TemplateBox[{2}, "Spacer1"],StyleBox[
                  "\"\[FilledCircle]\"", 12, FontFamily :> 
                   CurrentValue["PanelFontFamily"], FontColor -> 
                   GrayLevel[0.75], StripOnInput -> False],StyleBox[
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "PresenterToolStrings", "ScaleWithScreenSizeLabel"], 
                    StandardForm]], 12, FontFamily :> 
                   CurrentValue["PanelFontFamily"], FontColor -> 
                   GrayLevel[0.5], StripOnInput -> False]},
                 "RowWithSeparator"],
                Appearance->{"Default" -> None, "Pressed" -> None},
                ButtonFunction:>PresenterTools`SetLockScaling[
                  InputNotebook[], False],
                Enabled->True,
                Evaluator->Automatic,
                Method->"Preemptive"],
               MouseAppearanceTag["LinkHand"]]}, Dynamic[CurrentValue[
                 FrontEnd`InputNotebook[], "SelectionData"]; Not[
                 MemberQ[
                  CurrentValue[
                   Cells[
                    NotebookSelection[
                    FrontEnd`InputNotebook[]]], CellStyle], "ImageSizeLock", 
                  2]]]], ""}
           },
           AutoDelete->False,
           FrameStyle->GrayLevel[0.7],
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
           
           GridBoxDividers->{
            "Columns" -> {{False}}, "RowsIndexed" -> {2 -> True}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{1.}}, "Rows" -> {0, 2, 1, 0}}],
          "Grid"],
         DynamicModuleValues:>{}], False->"\<\" \"\>"}, Dynamic[
         FEPrivate`SameQ[
          FEPrivate`Head[
           FrontEnd`CurrentValue[
            FrontEnd`InputNotebook[], "SelectionData"]], GraphicsBox]],
        ImageSize->Automatic]}
     },
     AutoDelete->False,
     FrameStyle->GrayLevel[0.7],
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
     GridBoxDividers->{"Columns" -> {{False}}, "RowsIndexed" -> {2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{
      "Columns" -> {{2}}, 
       "Rows" -> {0, 1.25, 1.25, 0.5, 0.5, 0.5, 0, 1, 1, 1, 1}}],
    "Grid"],
   Background->GrayLevel[0.95],
   FrameMargins->{{20, 10}, {10, 10}},
   ImageSize->Full],
  DynamicModuleValues:>{},
  Initialization:>(Needs["PresenterTools`"]; 
   PresenterTools`SetEnvironmentTaggingRules[
     CurrentValue[
      InputNotebook[], ScreenStyleEnvironment], 
     InputNotebook[]]; Null)]],ExpressionUUID->"4e74e4de-fed5-4f03-a029-\
a081e4ba011c"]
},
ClosingAutoSave->False,
ClosingSaveDialog->False,
Saveable->False,
WindowSize->All,
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
WindowElements->{},
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource[
  "PresenterToolStrings", "StylePaletteMenuItem"]],
MenuSortingValue->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Palette.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[602, 22, 44789, 1055, 219, InheritFromParent,ExpressionUUID->"4e74e4de-fed5-4f03-a029-a081e4ba011c"]
}
]
*)

(* End of internal cache information *)

