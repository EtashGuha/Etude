(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     14635,        365]
NotebookOptionsPosition[     12041,        295]
NotebookOutlinePosition[     14622,        365]
CellTagsIndexPosition[     14579,        362]
WindowTitle->Choose page number format...
WindowFrame->ModalDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`x$$, $CellContext`i$$, $CellContext`return$$ =
   System`FEDump`$HFReturn, $CellContext`pos$$ = 
  System`FEDump`$HFPosition, $CellContext`page$$ = 
  "Page", $CellContext`data$$ = {{
    Dynamic[
     FEPrivate`FrontEndResource[
     "HeadersFootersDialog", "DecimalNumberLabel"]], Identity}, {
    Dynamic[
     FEPrivate`FrontEndResource[
     "HeadersFootersDialog", "CapsRomanNumberLabel"]], 
    FrontEnd`CapitalRomanNumeral}, {
    Dynamic[
     FEPrivate`FrontEndResource["HeadersFootersDialog", "RomanNumberLabel"]], 
    FrontEnd`RomanNumeral}, {
    Dynamic[
     FEPrivate`FrontEndResource["HeadersFootersDialog", "DashedNumberLabel"]],
     FEPrivate`StringJoin["\[Dash]", 
     FEPrivate`ToString[#], "\[Dash]"]& }, {
    Dynamic[
     FEPrivate`FrontEndResource["HeadersFootersDialog", "WavyNumberLabel"]], 
    FEPrivate`StringJoin["\[Tilde]", 
     FEPrivate`ToString[#], "\[Tilde]"]& }}}, 
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {
           FrameBox[
            
            ListPickerBox[
             Dynamic[{{$CellContext`i$$, $CellContext`x$$}}, {
              Automatic, SelectionMove[
                EvaluationNotebook[], After, Expression]& }], {{1, Identity}->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "HeadersFootersDialog", "DecimalNumberLabel"], StandardForm],
              ImageSizeCache->{93., {1., 9.}}], {
             2, FrontEnd`CapitalRomanNumeral}->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "HeadersFootersDialog", "CapsRomanNumberLabel"], StandardForm],
              ImageSizeCache->{90., {1., 9.}}], {3, FrontEnd`RomanNumeral}->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "HeadersFootersDialog", "RomanNumberLabel"], StandardForm],
              ImageSizeCache->{151., {1., 9.}}], {
             4, FEPrivate`StringJoin["\[Dash]", 
               FEPrivate`ToString[#], "\[Dash]"]& }->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "HeadersFootersDialog", "DashedNumberLabel"], StandardForm],
              ImageSizeCache->{89., {1., 9.}}], {
             5, FEPrivate`StringJoin["\[Tilde]", 
               FEPrivate`ToString[#], "\[Tilde]"]& }->
             DynamicBox[ToBoxes[
               FEPrivate`FrontEndResource[
               "HeadersFootersDialog", "WavyNumberLabel"], StandardForm],
              ImageSizeCache->{117., {1., 9.}}]},
             FrameMargins->{{5, 0}, {0, 0}},
             ImageSize->{200, 200},
             Multiselection->False],
            Background->GrayLevel[1],
            FrameMargins->-1,
            ImageMargins->0,
            StripOnInput->False], 
           PaneBox[
            TagBox[GridBox[{
               {
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "HeadersFootersDialog", "PreviewCodeLabel"], StandardForm],
                 ImageSizeCache->{41., {0., 9.}}]},
               {
                FrameBox[
                 DynamicBox[ToBoxes[
                   Style[
                    Column[
                    Which[
                    MatchQ[$CellContext`x$$, Identity], {"1", "2", "3"}, 
                    MatchQ[$CellContext`x$$, FrontEnd`RomanNumeral], {
                    "i", "ii", "iii"}, 
                    MatchQ[$CellContext`x$$, FrontEnd`CapitalRomanNumeral], {
                    "I", "II", "III"}, True, 
                    ReplaceAll[
                    Map[$CellContext`x$$, {1, 2, 3}], Pattern[$CellContext`y, 
                    Blank[Symbol]] :> If[
                    TrueQ[Context[$CellContext`y] == "FEPrivate`"], 
                    Symbol[
                    SymbolName[$CellContext`y]], $CellContext`y]]]], FontSize -> 
                    Large], StandardForm],
                  ImageSizeCache->{13., {40., 52.}},
                  TrackedSymbols:>{$CellContext`x$$}],
                 Alignment->Center,
                 Background->GrayLevel[1],
                 ImageSize->{200, 115},
                 RoundingRadius->5,
                 StripOnInput->False]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"],
            ImageMargins->{{20, 0}, {5, 0}}]},
          {"\[SpanFromAbove]", 
           PaneBox[
            TagBox[GridBox[{
               {
                ItemBox[
                 DynamicBox[ToBoxes[
                   FEPrivate`FrontEndResource[
                   "HeadersFootersDialog", "FormatCodeLabel"], StandardForm],
                  ImageSizeCache->{67., {1., 9.}}],
                 DefaultBaseStyle->"PanelLabel",
                 StripOnInput->False]},
               {
                
                InputFieldBox[
                 Dynamic[$CellContext`x$$, ($CellContext`x$$ = #; \
$CellContext`i$$ = None)& ],
                 BoxID -> "inputfield",
                 ContinuousAction->True,
                 ImageSize->200]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"],
            ImageMargins->{{20, 0}, {0, 5}}]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
         GridBoxDividers->{
          "Columns" -> {{None}}, "Rows" -> {{False}}, 
           "RowsIndexed" -> {2 -> GrayLevel[0.5]}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       EventHandlerTag[{"UpArrowKeyDown" :> If[
           IntegerQ[$CellContext`i$$], $CellContext`i$$ = 
            Replace[$CellContext`i$$ - 1, 0 -> 5]; $CellContext`x$$ = 
            Part[$CellContext`data$$, $CellContext`i$$, 2]], 
         "DownArrowKeyDown" :> If[
           
           IntegerQ[$CellContext`i$$], $CellContext`i$$ = 
            Mod[$CellContext`i$$, 5] + 1; $CellContext`x$$ = 
            Part[$CellContext`data$$, $CellContext`i$$, 2]], Method -> 
         "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
      "\[SpanFromLeft]"},
     {
      ItemBox[
       TagBox[GridBox[{
          {
           ButtonBox[
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource[
              "HeadersFootersDialog", "SetAsDefaultLabel"], StandardForm],
             ImageSizeCache->{71., {1., 9.}}],
            Appearance->Automatic,
            
            ButtonFunction:>(
             CurrentValue[$FrontEnd, {
               PrivateFrontEndOptions, "DialogSettings", "HeadersFooters", 
                "PageNumberFormat"}] = If["PageNumber" === "Date", 
               
               CounterBox[$CellContext`page$$, 
                CounterFunction -> $CellContext`x$$], 
               Part[
                
                CounterBox[$CellContext`page$$, 
                 CounterFunction -> $CellContext`x$$], 2, 2]]),
            
            Enabled->Dynamic[
             CurrentValue[$FrontEnd, {
                PrivateFrontEndOptions, "DialogSettings", "HeadersFooters", 
                 "PageNumberFormat"}] =!= If["PageNumber" === "Date", 
                
                CounterBox[$CellContext`page$$, 
                 CounterFunction -> $CellContext`x$$], 
                Part[
                 
                 CounterBox[$CellContext`page$$, 
                  CounterFunction -> $CellContext`x$$], 2, 2]]],
            Evaluator->Automatic,
            Method->"Preemptive"]}
         },
         AutoDelete->False,
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Left,
       StripOnInput->False], 
      ItemBox[
       StyleBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "FEExpressions", "ChoiceButtonsOrder"][{
           ButtonBox[
            DynamicBox[
             FEPrivate`FrontEndResourceString["okButtonText"]], 
            ButtonFunction :> (DialogReturn[]; CurrentValue[
                InputNotebook[], {TaggingRules, "Highlight"}] = Inherited; If[
               TrueQ[$CellContext`return$$], CurrentValue[
                 InputNotebook[], $CellContext`pos$$] = RowBox[{
                  CurrentValue[
                   InputNotebook[], $CellContext`pos$$], 
                  
                  CounterBox[$CellContext`page$$, 
                   CounterFunction -> $CellContext`x$$]}], 
               With[{$CellContext`lozange = ReplaceAll[
                   NotebookRead[
                    InputNotebook[]], FrameBox[
                    InterpretationBox[
                    Pattern[$CellContext`lbl$, 
                    Blank[]], 
                    Blank[]]] :> FrameBox[
                    InterpretationBox[$CellContext`lbl$, 
                    
                    CounterBox[$CellContext`page$$, 
                    CounterFunction -> $CellContext`x$$]]]]}, 
                NotebookWrite[
                 InputNotebook[], $CellContext`lozange]]]), Appearance -> 
            "DefaultButton", Evaluator -> Automatic, Method -> "Preemptive"], 
           ButtonBox[
            DynamicBox[
             FEPrivate`FrontEndResourceString["cancelButtonText"]], 
            ButtonFunction :> (DialogReturn[]; CurrentValue[
                InputNotebook[], {TaggingRules, "Highlight"}] = Inherited), 
            Appearance -> "CancelButton", Evaluator -> Automatic, Method -> 
            "Preemptive"]}],
         ImageSizeCache->{192., {20., 26.}}],
        Deployed->True,
        DynamicUpdating->True,
        ButtonBoxOptions->{ImageMargins->{{2, 2}, {10, 10}},
        ImageSize->Dynamic[
          CurrentValue["DefaultButtonSize"]]},
        GridBoxOptions->{AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}],
       Alignment->Right,
       StripOnInput->False]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{},
  Initialization:>({$CellContext`return$$, $CellContext`pos$$} = {
     System`FEDump`$HFReturn, System`FEDump`$HFPosition}; $CellContext`x$$ = 
    If[
      ValueQ[System`FEDump`$PageCounterFunction], 
      System`FEDump`$PageCounterFunction, Identity]; $CellContext`page$$ = If[
      ValueQ[System`FEDump`$PageCounterType], System`FEDump`$PageCounterType, 
      "Page"]; $CellContext`i$$ = First[
      Flatten[{
        Position[
         Part[$CellContext`data$$, All, 2], $CellContext`x$$], 0}]]; Null),
  UnsavedVariables:>{$CellContext`x$$, $CellContext`i$$}]],
 CellMargins->{{8, 8}, {8, 8}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"f62b7f85-f466-4b8f-9558-8c6f00b18749"]
},
Evaluator->"System",
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateCells"} :> (None; {}), {
   "MenuCommand", "SimilarCellBelow"} :> (None; {}), "WindowClose" :> 
  FE`Evaluate[
    FEPrivate`FindAndClickCancelButton[]], "EscapeKeyDown" :> If[
    Not[
     CurrentValue["ShiftKey"]], 
    FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]], PassEventsDown -> True},
WindowSize->All,
WindowMargins->{{729, Automatic}, {Automatic, 370}},
WindowFrame->"ModalDialog",
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["HeadersFootersDialog", "PageNumberWindowTitle"]],
CellContext->"Global`",
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (December 25, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "SystemDialog.nb"]], 
   Cell[
    StyleData["Header"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}]], 
   Cell[
    StyleData["Footer"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}]], 
   Cell[
    StyleData["PageNumber"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}], FontSlant -> Plain], 
   Cell[
    StyleData["Placeholder"], Background -> None, 
    FrameBoxOptions -> {
     Background -> RGBColor[1., 0.9724879835202563, 0.7976806286717022], 
      FrameMargins -> {{5, 5}, {0, 0}}, RoundingRadius -> 5}], 
   Cell[
    StyleData["TextStyleInputField"], 
    CounterBoxOptions -> {
     CounterFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}, 
    ValueBoxOptions -> {
     DisplayFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}, 
    OptionValueBoxOptions -> {
     DisplayFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}], 
   Cell[
    StyleData["SelectionHighlight"], ContextMenu -> None, 
    TooltipBoxOptions -> {TooltipDelay -> Automatic}], 
   Cell[
    StyleData["SelectedHighlight"], ContextMenu -> 
    FEPrivate`FrontEndResource["ContextMenus", "HeadersFooters"]]}, Visible -> 
  False, FrontEndVersion -> 
  "12.0 for Microsoft Windows (64-bit) (December 25, 2018)", StyleDefinitions -> 
  "Default.nb"],
Modal -> True,
Initialization :> FrontEnd`MoveCursorToInputField
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[605, 21, 11432, 272, 269, InheritFromParent,ExpressionUUID->"f62b7f85-f466-4b8f-9558-8c6f00b18749",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

