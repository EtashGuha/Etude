(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     10794,        285]
NotebookOptionsPosition[      9301,        243]
NotebookOutlinePosition[     10782,        285]
CellTagsIndexPosition[     10739,        282]
WindowTitle->GIF Options
WindowFrame->ModalDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {
    ItemBox[GridBox[{
       {
        RowBox[{
         CheckboxBox[Dynamic[
           
           CurrentValue[$FrontEnd, {
            ConversionOptions, "ExportOptions", "GIF", "Interlace"}, False]]],
          "\[InvisibleSpace]", 
         TogglerBox[Dynamic[
           
           CurrentValue[$FrontEnd, {
            ConversionOptions, "ExportOptions", "GIF", "Interlace"}, 
            False]], {True->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFInterlaced"], 
            StandardForm],
           ImageSizeCache->{125., {3., 9.}}], False->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFInterlaced"], 
            StandardForm],
           ImageSizeCache->{125., {3., 9.}}]}, 
          DynamicBox[ToBoxes[
            
            CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Interlace"}, False], 
            StandardForm],
           ImageSizeCache->{26., {0., 9.}}]]}], "\<\"\"\>"},
       {
        RowBox[{
         CheckboxBox[Dynamic[
           
           CurrentValue[$FrontEnd, {
            ConversionOptions, "ExportOptions", "GIF", 
             "ColorReductionDither"}, True]]], "\[InvisibleSpace]", 
         TogglerBox[Dynamic[
           
           CurrentValue[$FrontEnd, {
            ConversionOptions, "ExportOptions", "GIF", 
             "ColorReductionDither"}, True]], {True->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFDithering"], 
            StandardForm],
           ImageSizeCache->{70., {3., 9.}}], False->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFDithering"], 
            StandardForm],
           ImageSizeCache->{70., {3., 9.}}]}, 
          DynamicBox[ToBoxes[
            
            CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", 
              "ColorReductionDither"}, True], StandardForm],
           ImageSizeCache->{24., {0., 9.}}]]}], "\<\"\"\>"},
       {
        RowBox[{
         CheckboxBox[Dynamic[
           FEPrivate`UnsameQ[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Transparency"}], 
            False], FEPrivate`Set[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", 
              "Transparency"}], #]& ]], "\[InvisibleSpace]", 
         TogglerBox[Dynamic[
           FEPrivate`UnsameQ[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Transparency"}], 
            False], FEPrivate`Set[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", 
              "Transparency"}], #]& ], {True->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFTransparency"], 
            StandardForm],
           ImageSizeCache->{163., {3., 9.}}], False->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFTransparency"], 
            StandardForm],
           ImageSizeCache->{163., {3., 9.}}]}, 
          DynamicBox[ToBoxes[
            FEPrivate`UnsameQ[
             
             FrontEnd`CurrentValue[$FrontEnd, {
              ConversionOptions, "ExportOptions", "GIF", "Transparency"}], 
             False], StandardForm], FEPrivate`Set[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Transparency"}], #]& ,
           ImageSizeCache->{26., {0., 9.}}]]}], 
        ColorSetterBox[Dynamic[
          
          CurrentValue[$FrontEnd, {
           ConversionOptions, "ExportOptions", "GIF", "Transparency"}, 
           False]], "Swatch",
         Enabled->Dynamic[
           FEPrivate`UnsameQ[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Transparency"}, 
             False], False]]]},
       {
        RowBox[{
         CheckboxBox[Dynamic[
           FEPrivate`UnsameQ[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Background"}], 
            False], FEPrivate`Set[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", 
              "Background"}], #]& ]], "\[InvisibleSpace]", 
         TogglerBox[Dynamic[
           FEPrivate`UnsameQ[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Background"}], 
            False], FEPrivate`Set[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", 
              "Background"}], #]& ], {True->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFBackground"], 
            StandardForm],
           ImageSizeCache->{159., {3., 9.}}], False->
          DynamicBox[ToBoxes[
            FEPrivate`FrontEndResource["ExportDialogs", "GIFBackground"], 
            StandardForm],
           ImageSizeCache->{159., {3., 9.}}]}, 
          DynamicBox[ToBoxes[
            FEPrivate`UnsameQ[
             
             FrontEnd`CurrentValue[$FrontEnd, {
              ConversionOptions, "ExportOptions", "GIF", "Background"}], 
             False], StandardForm], FEPrivate`Set[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Background"}], #]& ,
           ImageSizeCache->{26., {0., 9.}}]]}], 
        ColorSetterBox[Dynamic[
          
          CurrentValue[$FrontEnd, {
           ConversionOptions, "ExportOptions", "GIF", "Background"}, False]], 
         "Swatch",
         Enabled->Dynamic[
           FEPrivate`UnsameQ[
            
            FrontEnd`CurrentValue[$FrontEnd, {
             ConversionOptions, "ExportOptions", "GIF", "Background"}, False],
             False]]]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     Alignment->Center], "\[SpanFromLeft]"},
   {GridBox[{
      {
       ButtonBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "ImportDialogs", "DefaultsButtonLabel"],
         ImageSizeCache->{121., {3., 9.}}],
        ButtonFunction:>FrontEndExecute[
          FrontEnd`SaveConversionOptions[]]], 
       ButtonBox[
        DynamicBox[FEPrivate`FrontEndResource[
         "ImportDialogs", "RestoreButtonLabel"],
         ImageSizeCache->{97., {1., 9.}}],
        ButtonFunction:>((FEPrivate`Set[
           
           CurrentValue[$FrontEnd, {
            ConversionOptions, "ExportOptions", "GIF"}], {}]; FrontEndExecute[{
            FrontEnd`SaveConversionOptions[]}])& )]}
     }], 
    StyleBox[
     DynamicBox[FEPrivate`FrontEndResource[
      "FEExpressions", "ChoiceButtonsOrder"][{
        ButtonBox[
         DynamicBox[
          FEPrivate`FrontEndResourceString["okButtonText"]], ButtonFunction :> 
         DialogReturn[], Appearance -> "DefaultButton", Evaluator -> 
         Automatic, Method -> "Preemptive"], 
        ButtonBox[
         DynamicBox[
          FEPrivate`FrontEndResourceString["cancelButtonText"]], 
         ButtonFunction :> (FrontEndExecute[
            FrontEnd`RestoreConversionOptions[]]; DialogReturn[]), Appearance -> 
         "CancelButton", Evaluator -> Automatic, Method -> "Preemptive"]}],
      ImageSizeCache->{192., {20., 26.}}],
     Deployed->True,
     DynamicUpdating->True,
     ButtonBoxOptions->{ImageMargins->{{2, 2}, {10, 10}},
     ImageSize->Dynamic[
       CurrentValue["DefaultButtonSize"]]},
     GridBoxOptions->{AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}]}
  },
  AutoDelete->False,
  GridBoxAlignment->{
   "Columns" -> {Left, Right}, "Rows" -> {{Baseline -> Center}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
  GridBoxSpacings->{"Columns" -> {0, 2, 0}, "Rows" -> {0, 1, 0}}]],
 CellMargins->{{8, 8}, {8, 8}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"85d1955b-4b91-48fa-8fce-6c105e2f5f6f"]
},
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {"MenuCommand", "EvaluateCells"} :> 
  FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateNextCell"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], "EscapeKeyDown" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Canceled]), 
  "WindowClose" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Canceled])},
WindowSize->All,
WindowMargins->Automatic,
WindowFrame->"ModalDialog",
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource["ExportDialogs", "GIFLabel"]],
ButtonBoxOptions->{Appearance->Automatic,
BaselinePosition->Axis,
Evaluator->None,
ImageSize->FrontEnd`CurrentValue["DefaultButtonSize"],
Method->"Preemptive"},
CheckboxBoxOptions->{ImageMargins->{{0, 5}, {0, 0}},
ImageSize->Small},
InputFieldBoxOptions->{ContinuousAction->True},
PopupMenuBoxOptions->{BaseStyle->"DialogStyle",
ImageMargins->{{1, 1}, {2, 2}}},
RadioButtonBoxOptions->{ImageMargins->{{1, 5}, {2, 2}},
ImageSize->Small},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"SystemDialog.nb",
Modal -> True
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[588, 21, 8709, 220, 178, InheritFromParent,ExpressionUUID->"85d1955b-4b91-48fa-8fce-6c105e2f5f6f",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

