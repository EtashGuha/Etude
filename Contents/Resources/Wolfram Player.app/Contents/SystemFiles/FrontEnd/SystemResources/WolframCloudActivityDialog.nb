(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     21556,        499]
NotebookOptionsPosition[     19846,        450]
NotebookOutlinePosition[     21544,        499]
CellTagsIndexPosition[     21501,        496]
WindowTitle->Wolfram Cloud Activity
WindowFrame->ModelessDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`sortedTaskData$$, $CellContext`taskdata$$}, 
  DynamicBox[
   ToBoxes[$CellContext`taskdata$$ = $CellContext`sortedTaskData$$[]; Column[{
       $CellContext`taskListing[$CellContext`taskdata$$], 
       Panel[
        $CellContext`cancelAllButton[$CellContext`taskdata$$], \
$CellContext`footerStripeAppearance, Alignment -> {Right, Center}, 
        FrameMargins -> {{15, 15}, {0, 0}}, ImageSize -> {
          Scaled[1], 50}]}, Spacings -> 0], StandardForm]],
  Deinitialization:>(
   CurrentValue[$FrontEnd, {
      "WolframCloudSettings", "ActivityMonitorWindowSize"}] = CurrentValue[
      EvaluationNotebook[], WindowSize]; 
   CurrentValue[$FrontEnd, {
      "WolframCloudSettings", "ActivityMonitorWindowMargins"}] = CurrentValue[
      EvaluationNotebook[], WindowMargins]; Null),
  DynamicModuleValues:>{{
    DownValues[$CellContext`sortedTaskData$$] = {HoldPattern[
         $CellContext`sortedTaskData$$[]] :> 
       Module[{$CellContext`data, $CellContext`pending, $CellContext`queued, \
$CellContext`failed}, $CellContext`data = 
          CurrentValue[
           "WolframCloudActivityQueueStatus"]; {$CellContext`pending, \
$CellContext`queued, $CellContext`failed} = 
          ReplaceAll[{
            "Pending", "Queued", 
             "Failed"}, $CellContext`data]; $CellContext`data = Join[
            
            If[$CellContext`pending === 
             None, {}, {{"Pending", $CellContext`pending}}], 
            Map[{"Queued", #}& , $CellContext`queued], 
            Map[{"Failed", #}& , $CellContext`failed]]; 
         Quiet[$CellContext`data = MapThread[Append, {$CellContext`data, 
              MathLink`CallFrontEnd[
               FrontEnd`WolframCloud`TaskInformation[
                Part[$CellContext`data, All, -1]]]}]]; $CellContext`data = 
          Apply[{#, 
             If[
              MemberQ[#3, "Type" -> "Open"], "Open", 
              "Sync"], #2, #3}& , $CellContext`data, {1}]; 
         SortBy[$CellContext`data, FirstCase[
            Last[#], Blank[]["TimeStamp", 
              Pattern[$CellContext`time, 
               Blank[]]] :> $CellContext`time, Infinity]& ]]}}},
  Initialization:>{$CellContext`taskListing[
      Pattern[$CellContext`taskdata, 
       Blank[]]] := Pane[
      Column[
       If[$CellContext`taskdata === {}, {
         Panel[
          $CellContext`textResource[
          "ActivityNone"], $CellContext`taskRowPanelAppearance, 
          Alignment -> {Center, Center}, BaseStyle -> 
          Flatten[{$CellContext`$defaultStyle, Italic}], ImageSize -> {
            Scaled[1], 40}]}, 
        Map[$CellContext`taskRow, $CellContext`taskdata]], Alignment -> 
       Center, ItemSize -> Fit, Spacings -> 0, BaseStyle -> {"DialogStyle"}], 
      ImageSize -> Dynamic[AbsoluteCurrentValue[
          FrontEnd`EvaluationNotebook[], WindowSize] - {
        0, 50 + FEPrivate`Switch[
          FEPrivate`$OperatingSystem, "MacOSX", 15, "Windows", 15, 
           Blank[], 30] + 3}], Scrollbars -> {False, Automatic}, 
      AppearanceElements -> {}], $CellContext`textResource[
      Pattern[$CellContext`id, 
       Blank[String]]] := Dynamic[
      FEPrivate`FrontEndResource[
      "CloudDialogs", $CellContext`id]], $CellContext`taskRowPanelAppearance = 
    Appearance -> {
      "Default" -> 
       FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
         "Row.9.png"]}, $CellContext`$defaultStyle = {
     "DialogStyle", FontColor -> GrayLevel[0.85]}, $CellContext`taskRow[{
      "Pending", 
       Pattern[$CellContext`type, 
        Blank[]], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      Row[{
        If[$CellContext`type === "Open", 
         $CellContext`textResource["ActivityOpening"], 
         $CellContext`textResource["ActivitySaving"]], ": ", 
        $CellContext`trimTaskName[$CellContext`name]}], 
      $CellContext`CustomAnimator["ProgressBar"], ""], $CellContext`taskRow[{
      "Queued", 
       Pattern[$CellContext`type, 
        Blank[]], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      $CellContext`trimTaskName[$CellContext`name], 
      Style[
       $CellContext`textResource["ActivityWaiting"], Italic], 
      $CellContext`cancelTaskButton[
      "Queued", $CellContext`taskobj]], $CellContext`taskRow[{"Failed", 
       Pattern[$CellContext`type, 
        Blank[]], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := 
    With[{$CellContext`errorcode = 
       FirstCase[$CellContext`taskinfo, ("Error" -> Pattern[$CellContext`i, 
            Blank[Integer]]) :> $CellContext`i, 1000]}, 
      $CellContext`taskRow[{
       "Failed", $CellContext`type, $CellContext`errorcode, \
$CellContext`taskobj, $CellContext`taskinfo}]], $CellContext`taskRow[{
      "Failed", 
       Pattern[$CellContext`type, "Sync"], 
       Pattern[$CellContext`errorcode, 409], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      $CellContext`trimTaskName[$CellContext`name], 
      $CellContext`textResource["ActivityError409"], 
      Grid[{{
         Button[
          $CellContext`textResource["ActivityError409Cancel"], 
          
          FEPrivate`RemoveFailedWolframCloudTask[$CellContext`taskobj], \
$CellContext`taskRowButtonAppearance, FrameMargins -> {{10, 10}, {0, 0}}, 
          BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
          Baseline, ImageSize -> Automatic], 
         Button[
          $CellContext`textResource["ActivityError409Replace"], 
          
          FEPrivate`RestartFailedWolframCloudTask[$CellContext`taskobj, 
           "Overwrite" -> True], $CellContext`taskRowButtonAppearance, 
          FrameMargins -> {{10, 10}, {0, 0}}, 
          BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
          Baseline, ImageSize -> Automatic]}}, BaselinePosition -> {1, 1}], 
      $CellContext`cancelTaskButton[
      "Failed", $CellContext`taskobj]], $CellContext`taskRow[{"Failed", 
       Pattern[$CellContext`type, 
        Blank[]], 
       Pattern[$CellContext`errorcode, 
        Alternatives[1600, 1601, 1602]], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      $CellContext`trimTaskName[$CellContext`name], 
      Switch[{$CellContext`errorcode, $CellContext`type}, {1600, "Open"}, 
       $CellContext`textResource["ActivityError1600Open"], {1600, 
        Blank[]}, 
       $CellContext`textResource["ActivityError1600Save"], {1601, "Open"}, 
       $CellContext`textResource["ActivityError1601Open"], {1601, 
        Blank[]}, 
       $CellContext`textResource["ActivityError1601Save"], {1602 "Open"}, 
       $CellContext`textResource["ActivityError1602Open"], {1602, 
        Blank[]}, 
       $CellContext`textResource["ActivityError1602Save"]], 
      Button[
       $CellContext`textResource["ActivityErrorTryAgain"], 
       FEPrivate`RestartFailedWolframCloudTask[$CellContext`taskobj], \
$CellContext`taskRowButtonAppearance, FrameMargins -> {{10, 10}, {0, 0}}, 
       BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
       Baseline, ImageSize -> Automatic], 
      $CellContext`cancelTaskButton[
      "Failed", $CellContext`taskobj]], $CellContext`taskRow[{"Failed", 
       Pattern[$CellContext`type, 
        Blank[]], 
       Pattern[$CellContext`errorcode, 1603], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      $CellContext`trimTaskName[$CellContext`name], 
      $CellContext`textResource["ActivityError1603"], 
      Button[
       $CellContext`textResource["ActivityErrorLogin"], 
       CloudConnect[
       "RememberMe" -> True], $CellContext`taskRowButtonAppearance, 
       FrameMargins -> {{10, 10}, {0, 0}}, 
       BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
       Baseline, ImageSize -> Automatic, Method -> "Queued"], 
      $CellContext`cancelTaskButton[
      "Failed", $CellContext`taskobj]], $CellContext`taskRow[{"Failed", 
       Pattern[$CellContext`type, "Sync"], 
       Pattern[$CellContext`errorcode, 1700], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      $CellContext`trimTaskName[$CellContext`name], 
      $CellContext`textResource["ActivityError1700Save"], 
      Grid[{{
         Button[
          $CellContext`textResource["ActivityErrorAccountSettings"], 
          SystemOpen[
           FrontEndResourceString[
           "WolframCloudAccountSettingsURL"]], \
$CellContext`taskRowButtonAppearance, FrameMargins -> {{10, 10}, {0, 0}}, 
          BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
          Baseline, ImageSize -> Automatic], 
         Button[
          $CellContext`textResource["ActivityErrorTryAgain"], 
          
          FEPrivate`RestartFailedWolframCloudTask[$CellContext`taskobj], \
$CellContext`taskRowButtonAppearance, FrameMargins -> {{10, 10}, {0, 0}}, 
          BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
          Baseline, ImageSize -> Automatic]}}, BaselinePosition -> {1, 1}], 
      $CellContext`cancelTaskButton[
      "Failed", $CellContext`taskobj]], $CellContext`taskRow[{"Failed", 
       Pattern[$CellContext`type, 
        Blank[]], 
       Pattern[$CellContext`errorcode, 
        Blank[]], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, {
         BlankNullSequence[], "Name" -> Pattern[$CellContext`name, 
           Blank[]], 
         BlankNullSequence[]}]}] := \
$CellContext`taskRowTemplate[$CellContext`type, 
      $CellContext`trimTaskName[$CellContext`name], 
      If[$CellContext`type === "Open", 
       Row[{
         $CellContext`textResource[
         "ActivityGenericOpenError"], $CellContext`errorcode}], 
       Row[{
         $CellContext`textResource[
         "ActivityGenericSaveError"], $CellContext`errorcode}]], 
      Button[
       $CellContext`textResource["ActivityErrorTryAgain"], 
       FEPrivate`RestartFailedWolframCloudTask[$CellContext`taskobj], \
$CellContext`taskRowButtonAppearance, FrameMargins -> {{10, 10}, {0, 0}}, 
       BaseStyle -> $CellContext`$defaultHeavyStyle, BaselinePosition -> 
       Baseline, ImageSize -> Automatic], 
      $CellContext`cancelTaskButton[
      "Failed", $CellContext`taskobj]], $CellContext`taskRow[{
       Pattern[$CellContext`state, 
        Alternatives["Pending", "Queued", "Failed"]], 
       Pattern[$CellContext`taskobj, 
        Blank[]], 
       Pattern[$CellContext`taskinfo, 
        Blank[]]}] := $CellContext`taskRow[{$CellContext`state, \
$CellContext`taskobj, {"Name" -> "-unnamed-"}}], $CellContext`taskRow[
      BlankNullSequence[]] := Sequence[], $CellContext`taskRowTemplate[
      Pattern[$CellContext`type, 
       Blank[]], 
      Pattern[$CellContext`name, 
       Blank[]], 
      Pattern[$CellContext`status, 
       Blank[]], 
      Pattern[$CellContext`close, 
       Blank[]]] := Panel[
      Grid[{{
         $CellContext`imageResource[
          
          If[$CellContext`type === "Open", "ActivityOpening.png", 
           "ActivitySyncing.png"]], $CellContext`name, $CellContext`status, \
$CellContext`close}}, Alignment -> {{Left, Left, Center, Right}, Center}, 
       ItemSize -> {{Full, 
          Scaled[0.7], Fit, Full}}], $CellContext`taskRowPanelAppearance, 
      Alignment -> Center, BaseStyle -> $CellContext`$defaultStyle, 
      FrameMargins -> 10, ImageSize -> 
      Scaled[1]], $CellContext`taskRowTemplate[
      Pattern[$CellContext`type, 
       Blank[]], 
      Pattern[$CellContext`name, 
       Blank[]], 
      Pattern[$CellContext`message, 
       Blank[]], 
      Pattern[$CellContext`actions, 
       Blank[]], 
      Pattern[$CellContext`close, 
       Blank[]]] := Panel[
      Grid[{{
         $CellContext`imageResource[
          
          If[$CellContext`type === "Open", "ActivityOpening.png", 
           "ActivitySyncing.png"]], $CellContext`name, $CellContext`close}, {
         $CellContext`imageResource["ErrorIconTiny.png"], 
         Style[$CellContext`message, "TextStyling", 
          LinebreakAdjustments -> {1., 10, 1, 0, 1}, FontSlant -> 
          "Italic"], $CellContext`actions}}, 
       Alignment -> {{Left, Left, Right}, {Center, Center}}, 
       ItemSize -> {{Full, Fit, Full}}, 
       Spacings -> {Automatic, 1}], $CellContext`taskRowPanelAppearance, 
      Alignment -> Center, BaseStyle -> $CellContext`$defaultStyle, 
      FrameMargins -> 10, ImageSize -> Scaled[1]], $CellContext`imageResource[
      Pattern[$CellContext`id, 
       Blank[String]]] := Dynamic[
      RawBoxes[
       FEPrivate`ImportImage[
        FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, $CellContext`id]]], 
      BaseStyle -> {CacheGraphics -> False}], $CellContext`trimTaskName[
      Pattern[$CellContext`name, 
       Blank[String]]] := Tooltip[
      FE`Evaluate[
       FEPrivate`TruncateStringToWidth[$CellContext`name, "DialogStyle", 
        200]], $CellContext`name, TooltipDelay -> 
      Automatic], $CellContext`trimTaskName[
      CloudObject[
       Pattern[$CellContext`name, 
        Blank[String]], 
       BlankNullSequence[]]] := $CellContext`trimTaskName[$CellContext`name], \
$CellContext`trimTaskName[
      FrontEnd`CloudObject[
       Pattern[$CellContext`name, 
        Blank[String]], 
       BlankNullSequence[]]] := $CellContext`trimTaskName[$CellContext`name], \
$CellContext`trimTaskName[
      Pattern[$CellContext`other, 
       Blank[]]] := $CellContext`trimTaskName[
      ToString[$CellContext`other, InputForm]], $CellContext`CustomAnimator[
     "ProgressBar"] := RawBoxes[
      DynamicModuleBox[{Typeset`var = 0}, 
       OverlayBox[{
         AnimatorBox[
          Dynamic[Typeset`var], {0, 14}, AnimationDirection -> Backward, 
          AppearanceElements -> {}, DefaultDuration -> 1, 
          ImageSize -> {1, 1}], 
         PaneBox[
          DynamicBox[
           FEPrivate`ImportImage[
            
            FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
             "ProgressBar.png"]]], ImageSize -> {
            Scaled[1], 16}, ImageSizeAction -> Clip, ScrollPosition -> 
          Dynamic[{Typeset`var, 0}, Null]], 
         PanelBox[
         "", Appearance -> {
           "Default" -> 
            FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
              "ProgressBarForeground.9.png"]}, ImageSize -> {
            Scaled[1], 16}]}]]], $CellContext`CustomAnimator[
     "ProgressSpinner"] := RawBoxes[
      DynamicModuleBox[{Typeset`var = 0}, 
       OverlayBox[{
         AnimatorBox[
          Dynamic[Typeset`var], {0, 6.283185307179586}, AnimationDirection -> 
          Backward, AppearanceElements -> {}, DefaultDuration -> 1.75, 
          ImageSize -> {1, 1}], 
         GraphicsBox[
          InsetBox[
           DynamicBox[
            FEPrivate`ImportImage[
             
             FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
              "ProgressSpinner.png"]]], {Center, Center}, {Center, Center}, 
           Automatic, 
           Dynamic[{
             Cos[Typeset`var], 
             Sin[Typeset`var]}]], ImageSize -> {100, 100}]}, 
        Alignment -> {Center, Center}]]], $CellContext`cancelTaskButton[
      Pattern[$CellContext`state, 
       Blank[]], 
      Pattern[$CellContext`taskobj, 
       Blank[]]] := Button[
      $CellContext`imageResource["ActivityCancel.png"], 
      If[$CellContext`state === "Failed", 
       FEPrivate`RemoveFailedWolframCloudTask[$CellContext`taskobj], 
       FEPrivate`AbortWolframCloudTask[$CellContext`taskobj]], Appearance -> 
      None, BaseStyle -> {}, ImageSize -> Automatic, Tooltip -> 
      Switch[$CellContext`state, "Pending", 
        $CellContext`textResource["ActivityCancelPending"], "Queued", 
        $CellContext`textResource["ActivityCancelQueued"], "Failed", 
        $CellContext`textResource[
        "ActivityCancelFailed"]]], $CellContext`taskRowButtonAppearance = 
    Appearance -> {
      "Default" -> 
       FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, "GrayButton.9.png"], 
       "Hover" -> FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
         "GrayButtonHover.9.png"], "Pressed" -> 
       FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
         "GrayButtonPressed.9.png"], "Disabled" -> 
       FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, 
         "GrayButtonDisabled.9.png"]}, $CellContext`$defaultHeavyStyle = {
     "DialogStyle", FontColor -> GrayLevel[0.85], 
      Bold}, $CellContext`cancelAllButton[
      Pattern[$CellContext`taskdata, 
       Blank[]]] := Button[
      Dynamic[
       Switch[
        CurrentValue["SynchronizationType"], "Quitting", 
        $CellContext`textResource["ActivityCancelAllQuit"], "LoggingOut", 
        $CellContext`textResource["ActivityCancelAllSignOut"], "Normal", 
        $CellContext`textResource["ActivityCancelAll"]]], 
      FEPrivate`AbortAllWolframCloudTasks[], \
$CellContext`taskRowButtonAppearance, FrameMargins -> {{10, 10}, {0, 0}}, 
      BaseStyle -> $CellContext`$defaultCancelAllStyle, 
      Enabled -> $CellContext`taskdata =!= {}, ImageSize -> 
      Automatic], $CellContext`$defaultCancelAllStyle = {
     "DialogStyle", FontColor -> GrayLevel[0.8500001], 
      Bold}, $CellContext`footerStripeAppearance = 
    Appearance -> {
      "Default" -> 
       FrontEnd`ToFileName[{"Dialogs", "CloudDialogs"}, "Footer.9.png"]}},
  UnsavedVariables:>{$CellContext`taskdata$$}]],
 CellMargins->0,
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"de1860c9-fc25-4ab3-8ca8-0540a19a9239"]
},
Saveable->False,
Evaluator->"System",
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {"MenuCommand", "EvaluateCells"} :> 
  FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateNextCell"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], "EscapeKeyDown" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Canceled]), 
  "WindowClose" :> (FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]; DialogReturn[$Canceled])},
WindowSize->FEPrivate`If[
  FEPrivate`SameQ[
   FrontEnd`CurrentValue[
   FrontEnd`$FrontEnd, {
    "WolframCloudSettings", "ActivityMonitorWindowSize"}], {
   Automatic, Automatic}], {500, 250}, 
  FrontEnd`CurrentValue[
  FrontEnd`$FrontEnd, {"WolframCloudSettings", "ActivityMonitorWindowSize"}]],
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
WindowFrame->"ModelessDialog",
WindowElements->{"StatusArea"},
WindowFrameElements->Dynamic[
  If[
   CurrentValue[
    EvaluationNotebook[], "DialogCanClose"], {"CloseBox", "ResizeArea"}, {
   "ResizeArea"}]],
WindowClickSelect->False,
WindowTitle->FEPrivate`FrontEndResource["CloudDialogs", "ActivityTitle"],
Deployed->True,
CellContext->Notebook,
Magnification->1,
FontColor->GrayLevel[1],
Background->GrayLevel[0.28627450980392155`],
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (January 7, 2019)",
StyleDefinitions->"Dialog.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[602, 21, 19240, 427, 70, InheritFromParent,ExpressionUUID->"de1860c9-fc25-4ab3-8ca8-0540a19a9239",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature 7Jz7uisrGHsrVKOwPtMCwBVb *)
