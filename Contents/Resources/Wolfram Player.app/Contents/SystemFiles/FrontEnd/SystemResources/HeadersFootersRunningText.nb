(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22701,        549]
NotebookOptionsPosition[     20103,        478]
NotebookOutlinePosition[     22688,        549]
CellTagsIndexPosition[     22645,        546]
WindowTitle->Running Text Dialog
WindowFrame->ModalDialog*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 DynamicModuleBox[{$CellContext`style$$ = "Text", $CellContext`length$$ = 
  5, $CellContext`default$$ = "", $CellContext`delimiter$$ = 
  " .,", $CellContext`excluded$$ = {}, $CellContext`first$$ = 
  True, $CellContext`offset$$ = 
  0, $CellContext`cellstyles$$ = {}, $CellContext`return$$ = 
  System`FEDump`$HFReturn, $CellContext`pos$$ = System`FEDump`$HFPosition}, 
  TagBox[GridBox[{
     {
      FrameBox[
       PaneBox[
        TagBox[GridBox[{
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 PaneBox[
                  PaneSelectorBox[{False->Cell[BoxData[
                    FormBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RunningTextPreviewText"],
                    ImageSizeCache->{183.5, {104., 11.}}], TextForm]], 
                    "DialogStyle", "TextStyling",ExpressionUUID->
                    "6a3a4433-540b-4e95-942d-d57ce53ea86e"], True->
                   PaneSelectorBox[{False->
                    DynamicBox[(Cell[
                    BoxData[
                    FormBox[
                    RowBox[#], TextForm]], "DialogStyle", "TextStyling"]& )[
                    Riffle[
                    MapAt[
                    StyleBox[#, Background -> 
                    RGBColor[0.924193, 0.87155, 0.236362]]& , 
                    StringSplit[
                    FE`Evaluate[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RunningTextPreviewText"]]], 
                    Thread[{
                    FE`Evaluate[
                    FEPrivate`RunningTextPreview[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", 
                    "RunningTextPreviewText"], $CellContext`length$$, 
                    " .,", $CellContext`excluded$$]]}]], " "]],
                    ImageSizeCache->{184., {105., 11.}}], True->Cell[BoxData[
                    FormBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RunningTextPreviewText"],
                    ImageSizeCache->{183.5, {104., 11.}}], TextForm]], 
                    "DialogStyle", "TextStyling",
                    Background->RGBColor[0.924193, 0.87155, 0.236362],
                    ExpressionUUID->"d8f0dfcd-9f77-459c-9a74-add51aeba0ce"]}, 
                    Dynamic[All === $CellContext`length$$]]}, 
                   Dynamic[$CellContext`first$$ === True]],
                  ImageSize->{205, {90, 125}},
                  ImageSizeAction->"ShrinkToFit"], 
                 ItemBox["\<\"\"\>",
                  Frame->{{False, True}, {True, True}},
                  StripOnInput->False]}
               },
               AutoDelete->False,
               FrameStyle->GrayLevel[0.65],
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"],
             Alignment->Top,
             ImageSize->{All, 125}]},
           {
            ItemBox[
             GraphicsBox[
              {GrayLevel[0.7], AbsolutePointSize[5], 
               PointBox[{
                Scaled[{0.3, 0.52}], Scaled[{0.4, 0.52}], Scaled[{0.5, 0.52}],
                  Scaled[{0.6000000000000001, 0.52}], Scaled[{0.7, 0.52}]}]},
              AspectRatio->Full,
              ImageSize->{210, 10}],
             ItemSize->{Automatic, Fit},
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 PaneBox[
                  PaneSelectorBox[{False->Cell[BoxData[
                    FormBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RunningTextPreviewText"],
                    ImageSizeCache->{183.5, {104., 11.}}], TextForm]], 
                    "DialogStyle", "TextStyling",ExpressionUUID->
                    "c76db05c-531b-42a1-883d-1c94b49325c4"], True->
                   PaneSelectorBox[{False->
                    DynamicBox[(Cell[
                    BoxData[
                    FormBox[
                    RowBox[#], TextForm]], "DialogStyle", "TextStyling"]& )[
                    Riffle[
                    MapAt[
                    StyleBox[#, Background -> 
                    RGBColor[0.924193, 0.87155, 0.236362]]& , 
                    StringSplit[
                    FE`Evaluate[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RunningTextPreviewText"]]], 
                    Thread[{
                    FE`Evaluate[
                    FEPrivate`RunningTextPreview[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", 
                    "RunningTextPreviewText"], $CellContext`length$$, 
                    " .,", $CellContext`excluded$$]]}]], " "]],
                    ImageSizeCache->{184., {105., 11.}}], True->Cell[BoxData[
                    FormBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "RunningTextPreviewText"],
                    ImageSizeCache->{183.5, {104., 11.}}], TextForm]], 
                    "DialogStyle", "TextStyling",
                    Background->RGBColor[0.924193, 0.87155, 0.236362],
                    ExpressionUUID->"714c4988-c775-4a46-b88f-ec3872135418"]}, 
                    Dynamic[All === $CellContext`length$$]]}, 
                   Dynamic[$CellContext`first$$ === False]],
                  ImageSize->{205, {90, 125}},
                  ImageSizeAction->"ShrinkToFit"], 
                 ItemBox["\<\"\"\>",
                  Frame->{{False, True}, {True, True}},
                  StripOnInput->False]}
               },
               AutoDelete->False,
               FrameStyle->GrayLevel[0.65],
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"],
             Alignment->Bottom,
             ImageSize->{All, 125}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Column"],
        Alignment->Center,
        ImageSize->{All, 280}],
       FrameMargins->10,
       ImageMargins->5,
       StripOnInput->False], 
      StyleBox[
       TagBox[GridBox[{
          {
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "HeadersFootersDialog", "RunningTextCellStyle"], StandardForm],
            ImageSizeCache->{140., {3., 9.}}], 
           DynamicBox[ToBoxes[
             PopupMenu[
              Dynamic[$CellContext`style$$], $CellContext`cellstyles$$, 
              BaseStyle -> "DialogStyle"], StandardForm],
            ImageSizeCache->{45., {8., 18.}}]},
          {
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "HeadersFootersDialog", "RunningTextFirstCell"], StandardForm],
            ImageSizeCache->{152., {3., 9.}}], 
           TagBox[GridBox[{
              {
               TagBox[
                TagBox[GridBox[{
                   {
                    RadioButtonBox[Dynamic[$CellContext`first$$], {True}], 
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "FirstLabel"], StandardForm],
                    ImageSizeCache->{20., {0., 9.}}]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                EventHandlerTag[{
                 "MouseClicked" :> ($CellContext`first$$ = True), Method -> 
                  "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                  True}]], 
               TagBox[
                TagBox[GridBox[{
                   {
                    RadioButtonBox[Dynamic[$CellContext`first$$], {False}], 
                    DynamicBox[ToBoxes[
                    FEPrivate`FrontEndResource[
                    "HeadersFootersDialog", "LastLabel"], StandardForm],
                    ImageSizeCache->{18., {0., 9.}}]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                EventHandlerTag[{
                 "MouseClicked" :> ($CellContext`first$$ = False), Method -> 
                  "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                  True}]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}}],
            "Grid"]},
          {
           PaneBox[
            DynamicBox[ToBoxes[
              FEPrivate`FrontEndResource[
              "HeadersFootersDialog", "RunningTextNumWords"], StandardForm],
             ImageSizeCache->{38., {3., 9.}}],
            BaselinePosition->Bottom], 
           DynamicModuleBox[{$CellContext`numWords2$$ = 5}, 
            TagBox[GridBox[{
               {
                
                RadioButtonBox[
                 Dynamic[$CellContext`length$$ === 
                  All, ($CellContext`length$$ = If[
                    
                    IntegerQ[$CellContext`numWords2$$], \
$CellContext`numWords2$$, $CellContext`numWords2$$ = 2])& ], {False},
                 BaselinePosition->Scaled[0.6]], 
                TagBox[
                 DynamicBox[ToBoxes[
                   FrontEndResource[
                   "HeadersFootersDialog", "RunningTextNumWords2"][
                    PaneSelector[{True -> InputField[
                    Dynamic[$CellContext`numWords2$$, Which[
                    And[
                    IntegerQ[#], 
                    
                    Positive[#]], $CellContext`length$$ = \
($CellContext`numWords2$$ = #), # === Null, $CellContext`numWords2$$ = #]& ], 
                    Number], False -> InputField[
                    Dynamic[$CellContext`numWords2$$, None], Number, Enabled -> 
                    False, BaseStyle -> GrayLevel[0.5]]}, 
                    Dynamic[
                    IntegerQ[$CellContext`length$$]], 
                    BaseStyle -> {
                    InputFieldBoxOptions -> {FieldSize -> {{3, 20}, {1, 
                    DirectedInfinity[1]}}, ContinuousAction -> True}}]], 
                   StandardForm],
                  ImageSizeCache->{113., {6.5, 12.5}}],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> ($CellContext`length$$ = If[
                    
                    IntegerQ[$CellContext`numWords2$$], \
$CellContext`numWords2$$, $CellContext`numWords2$$ = 2; 2]), PassEventsDown -> 
                   True, Method -> "Preemptive", PassEventsUp -> True}]]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            DynamicModuleValues:>{},
            
            Initialization:>($CellContext`numWords2$$ = \
$CellContext`length$$)]},
          {"", 
           TagBox[GridBox[{
              {
               
               RadioButtonBox[
                Dynamic[$CellContext`length$$ === All, ($CellContext`length$$ = 
                 All)& ], {True}], 
               TagBox[
                DynamicBox[ToBoxes[
                  FEPrivate`FrontEndResource[
                  "HeadersFootersDialog", "RunningTextEntireCell"], 
                  StandardForm],
                 ImageSizeCache->{51., {1., 9.}}],
                
                EventHandlerTag[{
                 "MouseClicked" :> ($CellContext`length$$ = All), Method -> 
                  "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                  True}]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]},
          {
           ItemBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "HeadersFootersDialog", "RunningTextExcluded"],
             ImageSizeCache->{113., {20., 26.}}],
            Alignment->Top,
            StripOnInput->False], 
           ItemBox[
            DynamicModuleBox[{$CellContext`ex$$ = RowBox[{}]}, 
             
             InputFieldBox[
              Dynamic[$CellContext`ex$$, 
               Switch[#, 
                "", $CellContext`excluded$$ = {}; $CellContext`ex$$ = Null, 
                Blank[
                String], $CellContext`excluded$$ = {$CellContext`ex$$ = #}, 
                RowBox[{
                  BlankSequence[String]}], $CellContext`excluded$$ = 
                DeleteCases[
                  First[$CellContext`ex$$ = #], 
                  Alternatives[",", " "]]]& ], Boxes,
              BaseStyle->Dynamic[
                If[$CellContext`length$$ =!= All, Automatic, Gray]],
              ContinuousAction->True,
              Enabled->Dynamic[$CellContext`length$$ =!= All],
              FieldSize->{20, {3, 
                 DirectedInfinity[1]}}],
             DynamicModuleValues:>{},
             Initialization:>($CellContext`ex$$ = RowBox[
                Riffle[$CellContext`excluded$$, ","]])],
            Alignment->Top,
            StripOnInput->False]},
          {
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "HeadersFootersDialog", "RunningTextDefault"], StandardForm],
            ImageSizeCache->{60., {1., 9.}}], 
           InputFieldBox[Dynamic[$CellContext`default$$], String,
            BoxID -> "inputfield",
            ContinuousAction->True]},
          {
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource[
             "HeadersFootersDialog", "RunningTextOffset"], StandardForm],
            ImageSizeCache->{59., {3., 9.}}], 
           InputFieldBox[Dynamic[$CellContext`offset$$, If[
              Or[
               IntegerQ[#], # === Null], $CellContext`offset$$ = #]& ], Number,
            FieldSize->{{3, 20}, 1}]},
          {
           ItemBox[
            StyleBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEExpressions", "ChoiceButtonsOrder"][{
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResourceString["okButtonText"]], 
                 ButtonFunction :> (DialogReturn[]; CurrentValue[
                    InputNotebook[], {TaggingRules, "Highlight"}] = Inherited; 
                  If[
                    TrueQ[$CellContext`return$$], CurrentValue[
                    InputNotebook[], $CellContext`pos$$] = RowBox[{
                    CurrentValue[
                    InputNotebook[], $CellContext`pos$$], 
                    Cell[
                    BoxData[
                    FormBox[
                    Apply[DynamicBox[
                    ToBoxes[
                    FEPrivate`RunningText[
                    SlotSequence[1]], 
                    StandardForm]]& , {$CellContext`style$$, \
$CellContext`length$$, $CellContext`default$$, $CellContext`delimiter$$, \
$CellContext`excluded$$, $CellContext`first$$, 
                    Replace[$CellContext`offset$$, Null -> 0]}], 
                    TextForm]]]}], 
                    With[{$CellContext`lozange = ReplaceAll[
                    NotebookRead[
                    InputNotebook[]], FrameBox[
                    InterpretationBox[
                    Pattern[$CellContext`lbl$, 
                    Blank[]], 
                    Blank[]]] :> FrameBox[
                    InterpretationBox[$CellContext`lbl$, 
                    Cell[
                    BoxData[
                    FormBox[
                    Apply[DynamicBox[
                    ToBoxes[
                    FEPrivate`RunningText[
                    SlotSequence[1]], 
                    StandardForm]]& , {$CellContext`style$$, \
$CellContext`length$$, $CellContext`default$$, $CellContext`delimiter$$, \
$CellContext`excluded$$, $CellContext`first$$, 
                    Replace[$CellContext`offset$$, Null -> 0]}], 
                    TextForm]]]]]]}, 
                    NotebookWrite[
                    InputNotebook[], $CellContext`lozange]]]), Appearance -> 
                 "DefaultButton", Evaluator -> Automatic, Method -> 
                 "Preemptive"], 
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResourceString["cancelButtonText"]], 
                 ButtonFunction :> (DialogReturn[]; CurrentValue[
                    InputNotebook[], {TaggingRules, "Highlight"}] = 
                   Inherited), Appearance -> "CancelButton", Evaluator -> 
                 Automatic, Method -> "Preemptive"]}],
              ImageSizeCache->{192., {20., 26.}}],
             Deployed->True,
             DynamicUpdating->True,
             ButtonBoxOptions->{ImageMargins->{{2, 2}, {10, 10}},
             ImageSize->Dynamic[
               CurrentValue["DefaultButtonSize"]]},
             GridBoxOptions->{AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}],
            Alignment->Right,
            StripOnInput->False], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaseStyle->"DialogStyle",
         GridBoxAlignment->{"Columns" -> {Right, Left}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "Columns" -> {{Automatic}}, "Rows" -> {{1.5}}, 
           "RowsIndexed" -> {4 -> Automatic, -2 -> Automatic}}],
        "Grid"],
       StripOnInput->False,
       RadioButtonBoxOptions->{Appearance->Tiny}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  DynamicModuleValues:>{},
  Initialization:>($CellContext`cellstyles$$ = If[
      ValueQ[System`FEDump`$RunningTextStyles], 
      System`FEDump`$RunningTextStyles, {}]; {$CellContext`return$$, \
$CellContext`pos$$} = {
     System`FEDump`$HFReturn, 
      System`FEDump`$HFPosition}; {$CellContext`style$$, \
$CellContext`length$$, $CellContext`default$$, $CellContext`delimiter$$, \
$CellContext`excluded$$, $CellContext`first$$, $CellContext`offset$$} = If[
      ValueQ[System`FEDump`$RunningTextData], 
      System`FEDump`$RunningTextData, {"Text", 5, "", " .,", {}, True, 0}])]],
 CellMargins->{{8, 8}, {8, 8}},
 CellBracketOptions->{"Color"->RGBColor[0.269993, 0.308507, 0.6]},
 CellHorizontalScrolling->True,
 PageBreakAbove->True,
 PageBreakWithin->False,
 ShowAutoStyles->True,
 LineSpacing->{1.25, 0},
 AutoItalicWords->{},
 ScriptMinSize->9,
 ShowStringCharacters->False,
 FontFamily:>CurrentValue["PanelFontFamily"],
 FontSize:>CurrentValue[
  "PanelFontSize"],ExpressionUUID->"e4dcb5ed-b5a5-49e7-a61b-7ebac67a6fa0"]
},
Evaluator->"System",
NotebookEventActions->{"ReturnKeyDown" :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "HandleShiftReturn"} :> FE`Evaluate[
    FEPrivate`FindAndClickDefaultButton[]], {
   "MenuCommand", "EvaluateCells"} :> (None; {}), {
   "MenuCommand", "SimilarCellBelow"} :> (None; {}), "WindowClose" :> 
  FE`Evaluate[
    FEPrivate`FindAndClickCancelButton[]], "EscapeKeyDown" :> If[
    Not[
     CurrentValue["ShiftKey"]], 
    FE`Evaluate[
     FEPrivate`FindAndClickCancelButton[]]], PassEventsDown -> True},
WindowSize->All,
WindowMargins->{{618, Automatic}, {Automatic, 332}},
WindowFrame->"ModalDialog",
WindowTitle->Dynamic[
  FEPrivate`FrontEndResource[
  "HeadersFootersDialog", "RunningTextWindowTitle"]],
CellContext->"Global`",
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (December 25, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "SystemDialog.nb"]], 
   Cell[
    StyleData["Header"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}]], 
   Cell[
    StyleData["Footer"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}]], 
   Cell[
    StyleData["PageNumber"], FontSize -> 
    FrontEnd`CurrentValue[{"ControlsFontSize", Small}], FontSlant -> Plain], 
   Cell[
    StyleData["Placeholder"], Background -> None, 
    FrameBoxOptions -> {
     Background -> RGBColor[1., 0.9724879835202563, 0.7976806286717022], 
      FrameMargins -> {{5, 5}, {0, 0}}, RoundingRadius -> 5}], 
   Cell[
    StyleData["TextStyleInputField"], 
    CounterBoxOptions -> {
     CounterFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}, 
    ValueBoxOptions -> {
     DisplayFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}, 
    OptionValueBoxOptions -> {
     DisplayFunction :> (FEPrivate`StringJoin[
       "\[LeftGuillemet]", #2, "\[RightGuillemet]"]& )}], 
   Cell[
    StyleData["SelectionHighlight"], ContextMenu -> None, 
    TooltipBoxOptions -> {TooltipDelay -> Automatic}], 
   Cell[
    StyleData["SelectedHighlight"], ContextMenu -> 
    FEPrivate`FrontEndResource["ContextMenus", "HeadersFooters"]]}, Visible -> 
  False, FrontEndVersion -> 
  "12.0 for Microsoft Windows (64-bit) (December 25, 2018)", StyleDefinitions -> 
  "Default.nb"],
Modal -> True,
Initialization :> FrontEnd`MoveCursorToInputField
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[596, 21, 19503, 455, 344, InheritFromParent,ExpressionUUID->"e4dcb5ed-b5a5-49e7-a61b-7ebac67a6fa0",
 PageBreakAbove->True,
 PageBreakWithin->False]
}
]
*)

(* End of internal cache information *)

