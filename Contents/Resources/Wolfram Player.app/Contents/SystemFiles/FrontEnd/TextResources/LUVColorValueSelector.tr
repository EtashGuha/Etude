Cell[BoxData[
 DynamicModuleBox[{$CellContext`colorVal$$ = LUVColor[
  0.5, 0.5, 0.5], $CellContext`alpha$$ = 1., $CellContext`vspace$$ = 
  1., $CellContext`hspace$$ = 
  5., $CellContext`btnInsertXpr$$, $CellContext`commaSepColorVals$$, \
$CellContext`$ColorList$$ = {
  "Lightness", "U", "V"}, $CellContext`$ColorSelectorTextResource$$ = 
  "LUVColorValueSelectorStrings", \
$CellContext`$ColorListLenWithAlpha$$ = {
  1 + "Lightness", 1 + "U", 1 + 
   "V"}, $CellContext`$PartColorList$$ = {
  1 -> "Lightness", 2 -> "U", 3 -> 
   "V"}, $CellContext`colorincrementer$$, $CellContext`gimages$$, \
$CellContext`framedGradient$$, $CellContext`showSlider$$ = 
  False, $CellContext`sliderGradients$$}, 
  PanelBox[
   PaneBox[
    DynamicModuleBox[{$CellContext`sliderGradients$$ = Framed[
      Column[{
        Pane[
         Column[{
           Pane[
            Grid[{{
               Pane["", Full], 
               Pane["", Full]}}, Dividers -> {{{
                 Directive[
                  RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
                Scaled[0.49], 
                Scaled[0.5]}, Automatic}], {Full, 6}, 
            Alignment -> {Center, Bottom}], 
           Panel[
            Graphics[
             Raster[CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIAaxcQGzNpYV0WvS7BcIXop+8VPJHiYeoPIiT3fD
Kfv1W7O/LNm3Fi6unVU95U7iBXs57kMO3By74OKlHOIWm/su21uf+R6/uOMQ
XLzA5x13xI1r9ib5ojO+yJ2Ai/MvXPCW1fqWfUTDgZNfL5yFi99nneCjseWu
/cnvCzivXbgIFz8quP3GywUP7AVPuhafPHEFLl47OXK9U+Ej+79WOVKCF67D
xSea7ilr8Hpir3HQe4vJs1tw8Q0GlXGh2s/snxfnuF3jugcX//hRUXX/i+f2
cmL7nkUsfgAXb2dpkV2x+qX9nZLvH564P7J/77p+76nkFfbmy9zE7hW/tt8X
6/nrwqfH9uoPKuve5J2wT/n5p9XY8a09W8Si4oeLn9of+pX0dN/Zi/asUgt3
1gm/t5dhU+a7F/Xcftv24xeEe69B7flgz7z+z/2J4i/tmWsL0t++vgUX/1Wo
Gnb65it7/b/XA1+J3YeLVyu388QsfGNfdN8x7dHEh3Bxw/rlsyTy3tmfEBD4
F9D/2B4AoxC7vA==
              "], {{0, 0}, {1, 0.05}}], AspectRatio -> 
             Full, ImageSize -> {Full, 16}, PlotRangePadding -> 0, 
             ImagePadding -> 0], 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Choosers", "Color"}, 
                "GradientSlider_bg.9.png", CharacterEncoding -> 
                "UTF-8"]}]}, Spacings -> 0, 
          Alignment -> {Automatic, Bottom}], ImageMargins -> 0, 
         FrameMargins -> {{5, 6}, {0, 0}}], 
        Pane[
         Column[{
           Pane[
            Grid[{{
               Pane["", Full], 
               Pane["", Full]}}, Dividers -> {{{
                 Directive[
                  RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
                Scaled[0.49], 
                Scaled[0.5]}, Automatic}], {Full, 6}, 
            Alignment -> {Center, Bottom}], 
           Panel[
            Graphics[
             Raster[CompressedData["
1:eJxF1H9Q03UYB/CxqAjOcCgcySonlMUCgtvkV/agErQ8iENOuFxD5g/ASLqK
1cSTH4YwVGBkAp1tFPMP4A9/DNcIheHUTWEgPzY23GDfMTb2A+bRjtLSZX/4
+Tx377vnef37PPfQuOW5h14gkUh+z8J8lv/757XzzMXmVrEFpLYwQtasgOfO
Fd3s/4lngR+6XIaN4YPIzd36zMgsCwwGxRSFDv6B/BzD82NipAWOcfP9SF4Z
csk6nWrsbwLUD7f5Ik5dRa5kiQ1WDQGC2NPaNEoP8tsxyvqK3wi4kH78262t
bcid4wt5x3kEmmvvB2zLFt+AleGok14Wdt3lbPHuSTWEFL0SbKBi9+aJbe/1
jkNdyb3uKI8ZeU2C5HexcBLyAyjSCQV2upZP4y1Ow5Z/yAmzQux9n4/KNas6
eHy3XpPIxb4+lLzUMKoH5sle5UI89o4z9G94J2ZhU+XTeR0Jezg18bBgvRFS
t7QTIaJ55FLykY3FDSb49MBfFbYk7BB0qfID5xywUsb0YZNzyBVxspULVDO0
UcbChaXY6be0HM+AGfz8zk+n+UzIh3yrK7ezCHitfcZOPYe9LHJNL9MTwK+O
L0neir2gvCXie44FrjyKK8yRG5Hv68h8v2HeAg6a6UFGJvaEmBD/PewFcB/m
N/umHiC/86JKwNQuQH0hpeYzDnYh8zqv+hMrvDO8u49hm0We3nf6wLHrVmCV
DyiKv8Ae35/JL6Ivgjc1e+/dZQNy1b5eVVnbIgiG63qiv8T+lsdYoCHZoDDr
oTrfocd3vF1LuVRsg36LbCiMiz2cLTqSPGqDslaz6O2ZGeTk3JmXWmLtUMW3
bv/wY+znC+2MqSY7SDuWZYHXdMiDTk0UbF62Q+C9tJqY17GXjFRltLKW4FBp
d1BKtRb5d1GNTTskS+Abzem9appGbo82DqU/WQKaXN7pz8QeepDWeTnPAVZP
oL62bgr5zdxqdnuPAxgtKSbO2CTyzX8S0nU+B7ge5zDEr2K/KFBH0HKdwFat
aigfTSB/+kajmehywteBA1VJX91HHmz4ZQfH64RY/RNjPnUc+a3as41du1yQ
sbYn2JSkwXs86v/uoNAFAd4mfUbcCPLi5CJF/5wLVvb/S6etqZEz3W+m/hrt
BlGlVVladQf5o2sHZ09UuKF+7w3HSJ8SeYPEuos95IZNL0u8nUfx/9og2d+0
M2AZft7gT+ZfkSP/DziOsxU=
              "], {{0, 0}, {1, 0.05}}], 
             AspectRatio -> Full, ImageSize -> {Full, 16}, 
             PlotRangePadding -> 0, ImagePadding -> 0], 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Choosers", "Color"}, 
                "GradientSlider_bg.9.png", CharacterEncoding -> 
                "UTF-8"]}]}, Spacings -> 0, 
          Alignment -> {Automatic, Bottom}], ImageMargins -> 0, 
         FrameMargins -> {{5, 6}, {0, 0}}], 
        Pane[
         Column[{
           Pane[
            Grid[{{
               Pane["", Full], 
               Pane["", Full]}}, Dividers -> {{{
                 Directive[
                  RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
                Scaled[0.49], 
                Scaled[0.5]}, Automatic}], {Full, 6}, 
            Alignment -> {Center, Bottom}], 
           Panel[
            Graphics[
             Raster[CompressedData["
1:eJxl03tQ0wUAB3BAwsOwQwhNIaXjAHkdcFTGCXwDFTwUlVGuGzQeopJXEGQ4
RdcwroUhYBIqjE00ns6S6Ex2yCNvFHvI3rCxDLffb+M1xisOJSj6I3Zd37vv
3fc+/39fy8qjHF9nZ2dnv9qg1f6zz0Yu60W/jMLuP5nG4gquBl39v7dWvCvj
ZYzi0o+nbhVF3cK/7mqt8FgfNgrmyQeHZ9IF+CAijOvOsCLVe0PVHvtR1Bob
GuPe+Bl5XknLFP4UenIyyUiVGeHCmgHBnBCZXZN7YbQgbSBWKms2o4Qt7l9e
+hUhKnnXRS8LOmgXHWaYZtAlkoqoMjEYjy+w+qmTYI30rpQcNaNq5n7rM6EU
SqmE01M1geXAm0pGqBldjRzr/YcDGBcVH/ZQjqO6RuEocDYj7fEr1K96ZKCl
3vY67TaOxPaPT+wiTSgOnq3Qlckhy2Ho2ZQxSOiWlZFeE871jj+iJCjQ5p5x
Z/HrUaj+3DfZxDMhtIvLaphVwM+N8cMppRnydPuDTKYJwlmXjVOVSgwLuwTn
3c2w92nypdJX/YvcT4d9VLhX3nSmj2JCvvYY1Q8mFCw0XJbwVdiqj87TVJLY
Kr1eMuJtwuVr3FhjsBptj7SpoVICCe3bnYrWmdBSFHfArUENPutt1d71BMQ7
NugnTCSebZIE+2/WoNRhwFoYY0S/vO9mgJjEnd3TtXKWBjv6RWdcCgzg07Mv
BN0j8c5gtXcLqUHF+zNLgfVPUXlibvvYNyTYguGc8H2DELeJHopFIwj5TMOn
nScRxB5r/Y03CP/WgkLq8O/4i2HpZhwj8cDKoLgvDMKifkl90vUJjtSX0KIO
kIiVm32D9w9hMmGLojlMj+yY+RFuBIkOp58cGNVDkDbSEq+8qQOr74lbjReJ
iQD5/pinQygra0zK2DaEjQdXHHc6kTi36OzUvVOLa+VpXI5MDQPlE8890wSY
4Q7WiI+0qP1cyHser8QN4ZeOJh2B2ZTiUPl3WmzyudsxlSZDqYeh/cU+AksL
Ltv6LFqEvaC7nVzTj0yBM/37NgIuWbLO6EAdcuNiKhn23biSRD0tqSOQHF6X
kZ6tW/vBzHHfevolAqxExR+HODbXhaY+f+soASrH42W91uaFUy6O454EFHPN
Ti2bh9f8W1dxe4rBCEtdYdWuZJvbbXGcy20xwjkkTt1cavP0s6Lp1/ONyLrx
YbRnj83nA5iv8iKNWCJoxtZ5mzfv7vRrcjCCcsirM99fv+bxd8vn4iUGuKVw
Zez3bP43Ejnm8Q==
              "], {{0, 0}, {1, 0.05}}], AspectRatio -> 
             Full, ImageSize -> {Full, 16}, PlotRangePadding -> 0, 
             ImagePadding -> 0], 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Choosers", "Color"}, 
                "GradientSlider_bg.9.png", CharacterEncoding -> 
                "UTF-8"]}]}, Spacings -> 0, 
          Alignment -> {Automatic, Bottom}], ImageMargins -> 0, 
         FrameMargins -> {{5, 6}, {0, 0}}]}, ItemSize -> Automatic, 
       Spacings -> 1.55], FrameStyle -> None]}, 
     TagBox[GridBox[{
        {
         DynamicWrapperBox[
          FrameBox[
           PaneSelectorBox[{False->
            TagBox[GridBox[{
               {
                TagBox[GridBox[{
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 1], 
                    StandardForm],
                    ImageSizeCache->{198., {14., 20.}}],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Lightness"]],
                    StyleBox["\"lg\"", ShowContents -> False, 
                    StripOnInput -> False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    1, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{0.5, 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 1, #, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]],
                    ImageSizeCache->{20., {0., 21.}}], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 1, 0, 1]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    1])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 1, 0, 1])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 1]], {3, 2}], 
                    StandardForm],
                    ImageSizeCache->{20., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 2], 
                    StandardForm],
                    ImageSizeCache->{198., {14., 20.}}],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "U"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = -0.85, \
$CellContext`maxVal$$ = 
                    1.76, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{0.52, 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 2, #, -0.85, 
                    1.76])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]],
                    ImageSizeCache->{20., {0., 21.}}], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 2, -0.85, 1.76]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    2])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 2, -0.85, 
                    1.76])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 2]], {3, 2}], 
                    StandardForm],
                    ImageSizeCache->{20., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 3], 
                    StandardForm],
                    ImageSizeCache->{198., {14., 20.}}],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "V"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = -1.26, \
$CellContext`maxVal$$ = 
                    0.88, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{0.8200000000000001, 0.5}, $CellContext`verticalThumbPos$$ = 
                    
                    0.5, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 3, #, -1.26, 
                    0.88])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]],
                    ImageSizeCache->{20., {0., 21.}}], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 3, -1.26, 0.88]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    3])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 3, -1.26, 
                    0.88])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 3]], {3, 2}], 
                    StandardForm],
                    ImageSizeCache->{20., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {
                TagBox[GridBox[{
                   {
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPadding$\
$ = 0.01, $CellContext`minVal$$ = 0, $CellContext`maxVal$$ = 1}, 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Opacity"]],
                    StyleBox["\"lg\"", ShowContents -> False, 
                    StripOnInput -> False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    OverlayBox[{
                    PaneBox[
                    PanelBox["\<\"\"\>",
                    
                    Appearance->{
                    "Default" -> FrontEnd`FileName[{
                    "Choosers", "Color"}, "OpacitySlider_bg.9.png", 
                    CharacterEncoding -> "UTF-8"]},
                    ImageSize->Full],
                    FrameMargins->{{5, 6}, {0, 0}},
                    ImageSize->{Full, Automatic}], 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{1., 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToAlphaVal$$, \
$CellContext`alphaValToPos$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`alpha$$ = \
$CellContext`posToAlphaVal$$[#, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "OpacityThumb.png"]],
                    ImageSizeCache->{18., {0., 18.}}], 
                    Dynamic[$CellContext`alphaValToPos$$[$CellContext`\
alpha$$, 0, 1]]]},
                    AspectRatio->Full,
                    ImageSize->{Full, 19}],
                    Appearance->None],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToAlphaVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`alphaValToPos$$[
                    Pattern[$CellContext`myalphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`minAlphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxAlphaVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`alphavalRange$ = \
$CellContext`maxAlphaVal$ - $CellContext`minAlphaVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = 
                    Round[$CellContext`maxSliderPos$ - 
                    N[($CellContext`maxAlphaVal$ - \
$CellContext`myalphaVal$)/$CellContext`alphavalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`alphaValToPos$$[$CellContext`alpha$$, 0, 1])]}, Full, 2,
                    Alignment->{Center, Center}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
                    "Column"],
                    ImageSize->200],
                    DynamicModuleValues:>{}], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[$CellContext`alpha$$], {3, 2}], StandardForm],
                    ImageSizeCache->{18., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 8}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {
                PaneBox[
                 ButtonBox[
                  PaneBox[
                   DynamicBox[ToBoxes[
                    If[$CellContext`showSlider$$, 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Basic"]]], 11], 
                    RGBColor[0.27, 0.27, 0.27]], 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Advanced"]]], 
                    11], 
                    RGBColor[0.27, 0.27, 0.27]]], StandardForm],
                    ImageSizeCache->{52., {0., 8.}}],
                   Alignment->{Center, Center},
                   ImageSize->{Full, Full}],
                  
                  Appearance->FEPrivate`FrontEndResource[
                   "FEExpressions", "GrayButtonNinePatchAppearance"],
                  
                  ButtonFunction:>($CellContext`showSlider$$ = 
                   Not[$CellContext`showSlider$$]),
                  Evaluator->Automatic,
                  Method->"Preemptive"],
                 ImageSize->{Automatic, 26}]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{0}}, "Rows" -> {{0.5}}}],
             "Grid"], True->
            TagBox[GridBox[{
               {
                PaneBox[
                 
                 DynamicModuleBox[{$CellContext`defaultcolorvalue$$ = \
$CellContext`colorVal$$}, 
                  
                  ColorSetterBox[
                   Dynamic[$CellContext`defaultcolorvalue$$, \
($CellContext`colorVal$$ = 
                    If[Head[$CellContext`colorVal$$] === Head[#], #, 
                    ColorConvert[
                    If[Head[#] =!= RGBColor, 
                    RGBColor[0., 0., 0.], #], 
                    "LUV"]]; $CellContext`colorVal$$ = 
                    Map[Round[If[Abs[#] < 0.004, 0., #] 100]/
                    100.& , $CellContext`colorVal$$])& ], "Spectrum",
                   ImageSize->{240, 120}],
                  DynamicModuleValues:>{}],
                 Alignment->Left,
                 ImageSize->Full], 
                TagBox[GridBox[{
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 1], 
                    StandardForm]],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Lightness"]],
                    StyleBox["\"lg\"", ShowContents -> False, 
                    StripOnInput -> False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    1, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 1, #, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]]], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 1, 0, 1]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    1])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 1, 0, 1])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 1]], {3, 2}], 
                    StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 2], 
                    StandardForm]],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "U"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = -0.85, \
$CellContext`maxVal$$ = 
                    1.76, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 2, #, -0.85, 
                    1.76])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]]], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 2, -0.85, 1.76]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    2])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 2, -0.85, 
                    1.76])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 2]], {3, 2}], 
                    StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 3], 
                    StandardForm]],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "V"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = -1.26, \
$CellContext`maxVal$$ = 
                    0.88, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 3, #, -1.26, 
                    0.88])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]]], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 3, -1.26, 0.88]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    3])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 3, -1.26, 
                    0.88])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 3]], {3, 2}], 
                    StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {"\<\"\"\>", 
                TagBox[GridBox[{
                   {
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPadding$\
$ = 0.01, $CellContext`minVal$$ = 0, $CellContext`maxVal$$ = 1}, 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Opacity"]],
                    StyleBox["\"lg\"", ShowContents -> False, 
                    StripOnInput -> False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    OverlayBox[{
                    PaneBox[
                    PanelBox["\<\"\"\>",
                    
                    Appearance->{
                    "Default" -> FrontEnd`FileName[{
                    "Choosers", "Color"}, "OpacitySlider_bg.9.png", 
                    CharacterEncoding -> "UTF-8"]},
                    ImageSize->Full],
                    FrameMargins->{{5, 6}, {0, 0}},
                    ImageSize->{Full, Automatic}], 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToAlphaVal$$, \
$CellContext`alphaValToPos$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`alpha$$ = \
$CellContext`posToAlphaVal$$[#, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "OpacityThumb.png"]]], 
                    Dynamic[$CellContext`alphaValToPos$$[$CellContext`\
alpha$$, 0, 1]]]},
                    AspectRatio->Full,
                    ImageSize->{Full, 19}],
                    Appearance->None],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToAlphaVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`alphaValToPos$$[
                    Pattern[$CellContext`myalphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`minAlphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxAlphaVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`alphavalRange$ = \
$CellContext`maxAlphaVal$ - $CellContext`minAlphaVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = 
                    Round[$CellContext`maxSliderPos$ - 
                    N[($CellContext`maxAlphaVal$ - \
$CellContext`myalphaVal$)/$CellContext`alphavalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`alphaValToPos$$[$CellContext`alpha$$, 0, 1])]}, Full, 2,
                    Alignment->{Center, Center}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
                    "Column"],
                    ImageSize->200],
                    DynamicModuleValues:>{}], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[$CellContext`alpha$$], {3, 2}], StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 8}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {
                PaneBox[
                 PaneBox[
                  ButtonBox[
                   PaneBox[
                    DynamicBox[ToBoxes[
                    If[$CellContext`showSlider$$, 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Basic"]]], 11], 
                    RGBColor[0.27, 0.27, 0.27]], 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "Advanced"]]], 
                    11], 
                    RGBColor[0.27, 0.27, 0.27]]], StandardForm]],
                    Alignment->{Center, Center},
                    ImageSize->{Full, Full}],
                   
                   Appearance->FEPrivate`FrontEndResource[
                    "FEExpressions", "GrayButtonNinePatchAppearance"],
                   
                   
                   ButtonFunction:>($CellContext`showSlider$$ = 
                    Not[$CellContext`showSlider$$]),
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  ImageSize->{Automatic, 26}],
                 ImageSize->240], "\<\"\"\>"}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}, Dynamic[$CellContext`showSlider$$],
            ImageSize->Full],
           FrameMargins->{{5, 5}, {0, 0}},
           FrameStyle->None,
           
           StripOnInput->
            False], $CellContext`sliderGradients$$ = \
$CellContext`gimages$$[$CellContext`colorVal$$, {0, -0.85, -1.26}, {
            1, 1.76, 0.88}],
          ImageSizeCache->{260., {102., 107.}},
          
          TrackedSymbols:>{$CellContext`colorVal$$, \
$CellContext`alpha$$}]},
        {
         PanelBox[
          FrameBox[
           TagBox[GridBox[{
              {
               FrameBox[
                FrameBox[
                 GraphicsBox[{InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1: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
K/8BVquSqA==
                    "], {{0, 465}, {465, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSizeRaw->{465, 465},
                    PlotRange->{{0, 465}, {0, 465}}],
                    TraditionalForm], {Center, Center}], InsetBox[
                    DynamicBox[ToBoxes[
                    Graphics[{
                    
                    Append[$CellContext`colorVal$$, \
$CellContext`alpha$$], 
                    Rectangle[]}], TraditionalForm],
                    ImageSizeCache->{180., {0., 179.}}], {
                    Center, Center}]},
                  FrameLabel->{None, None},
                  FrameTicks->{{None, None}, {None, None}},
                  ImageMargins->0,
                  ImagePadding->None,
                  ImageSize->{25.2, 25.2},
                  PlotRangeClipping->True,
                  PlotRangePadding->0],
                 FrameMargins->0,
                 FrameStyle->GrayLevel[1],
                 StripOnInput->False],
                FrameMargins->0,
                FrameStyle->RGBColor[0.8, 0.8, 0.8],
                StripOnInput->False], 
               FrameBox[
                TagBox[GridBox[{
                   {
                    ButtonBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", 
                    "cancelButtonText"],
                    ImageSizeCache->{36., {1., 8.}}],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{Full, Full}],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "FEExpressions", "GrayButtonNinePatchAppearance"],
                    
                    ButtonFunction:>NotebookDelete[
                    EvaluationCell[]],
                    Evaluator->Automatic,
                    ImageSize->{70, 26},
                    Method->"Preemptive"], 
                    ButtonBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "LUVColorValueSelectorStrings", "okButtonText"],
                    ImageSizeCache->{16., {1., 8.}}],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->GrayLevel[1],
                    FrontFaceColor->GrayLevel[1],
                    BackFaceColor->GrayLevel[1],
                    GraphicsColor->GrayLevel[1],
                    FontColor->GrayLevel[1]],
                    Alignment->{Center, Center},
                    ImageSize->{Full, Full}],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "FEExpressions", 
                    "OrangeButtonNinePatchAppearance"],
                    ButtonFunction:>(FrontEndExecute[{
                    FrontEnd`NotebookApply[
                    FrontEnd`InputNotebook[], 
                    If[$CellContext`alpha$$ == 1., 
                    $CellContext`btnInsertXpr$$[$CellContext`colorVal$\
$], 
                    $CellContext`btnInsertXpr$$[$CellContext`colorVal$\
$, $CellContext`alpha$$]], Placeholder]}]; NotebookDelete[
                    EvaluationCell[]]),
                    Evaluator->Automatic,
                    ImageSize->{70, 26},
                    Method->"Preemptive"]}
                  },
                  AutoDelete->False,
                  
                  GridBoxAlignment->{
                   "Columns" -> {Left, Right}, "Rows" -> {{Center}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                Alignment->{Right, Center},
                FrameMargins->0,
                FrameStyle->None,
                ImageSize->Full,
                StripOnInput->False]}
             },
             AutoDelete->False,
             
             GridBoxAlignment->{
              "Columns" -> {{Right}}, "Rows" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}}],
            "Grid"],
           FrameMargins->{{5, 5}, {0, 0}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->{Automatic, Center},
          
          Appearance->{
           "Default" -> 
            FrontEnd`FileName[{"Choosers", "Color"}, 
              "ColorPickerFooter_bg.9.png", CharacterEncoding -> 
              "UTF-8"]},
          ImageSize->All]}
       },
       BaseStyle->"DialogStyle",
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{None}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
         "RowsIndexed" -> {2 -> 2, -2 -> 1, -3 -> 2, -4 -> 2}}],
      "Column"],
     DynamicModuleValues:>{}],
    ImageSize->Dynamic[
      FEPrivate`If[$CellContext`showSlider$$, 520, 260]]],
   Appearance->{
    "Default" -> 
     FrontEnd`FileName[{"Choosers", "Color"}, "ColorPicker_bg.9.png", 
       CharacterEncoding -> "UTF-8"]},
   FrameMargins->{{0, 0}, {0, 5}}],
  DynamicModuleValues:>{},
  Initialization:>(If[
     TrueQ[
     0 <= FrontEnd`Private`$ColorSelectorInitialAlpha <= 
      1], $CellContext`alpha$$ = 
      FrontEnd`Private`$ColorSelectorInitialAlpha; 
     ClearAll[
      FrontEnd`Private`$ColorSelectorInitialAlpha], \
$CellContext`alpha$$ = 1.]; 
   If[Head[FrontEnd`Private`$ColorSelectorInitialColor] === 
     LUVColor, $CellContext`colorVal$$ = 
      FrontEnd`Private`$ColorSelectorInitialColor; 
     ClearAll[
      FrontEnd`Private`$ColorSelectorInitialColor], \
$CellContext`colorVal$$ = Apply[LUVColor, 
       Table[0.5, {
         
         Length[{
          "Lightness", "U", "V"}]}]]]; $CellContext`showSlider$$ = 
    False; If[
     TrueQ[
     FrontEnd`Private`$ColorSelectorUseMakeBoxes], \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`head, 
         Blank[]][
         Pattern[$CellContext`args, 
          BlankNullSequence[]]]] := MakeBoxes[
        $CellContext`head[$CellContext`args]]; \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`head, 
         Blank[]][
         Pattern[$CellContext`args, 
          BlankNullSequence[]]], 
        Pattern[$CellContext`alpha, 
         Blank[]]] := MakeBoxes[
        $CellContext`head[$CellContext`args, $CellContext`alpha]]; 
     ClearAll[
      FrontEnd`Private`$ColorSelectorUseMakeBoxes], \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`colorHD, 
         Blank[String]], 
        Pattern[$CellContext`formattedColorVals, 
         Blank[]]] := BoxData[
        RowBox[{$CellContext`colorHD, "[", 
          RowBox[$CellContext`formattedColorVals], 
          "]"}]]; $CellContext`btnInsertXpr$$[
        Pattern[$CellContext`mycolorVal$, 
         Blank[]]] := $CellContext`btnInsertXpr$$[
        ToString[
         Head[$CellContext`mycolorVal$]], 
        $CellContext`commaSepColorVals$$[$CellContext`mycolorVal$]]; \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`mycolorVal$, 
         Blank[]], 
        Pattern[$CellContext`alpha$, 
         Blank[]]] := $CellContext`btnInsertXpr$$[
        ToString[
         Head[$CellContext`mycolorVal$]], 
        $CellContext`commaSepColorVals$$[$CellContext`mycolorVal$, \
$CellContext`alpha$]]]; $CellContext`commaSepColorVals$$[
      Pattern[$CellContext`mycolorVal, 
       Blank[]]] := Riffle[
      Table[
       ToString[
        Part[$CellContext`mycolorVal, $CellContext`i]], \
{$CellContext`i, 
        Length[$CellContext`mycolorVal]}], 
      ","]; $CellContext`commaSepColorVals$$[
      Pattern[$CellContext`mycolorVal$, 
       Blank[]], 
      Pattern[$CellContext`alpha$, 
       Blank[]]] := Join[
      $CellContext`commaSepColorVals$$[$CellContext`mycolorVal$], {
      ",", 
       ToString[$CellContext`alpha$]}]; \
$CellContext`colorincrementer$$[
      Pattern[$CellContext`mycolorVal, 
       RGBColor[
        BlankSequence[]]], 
      Pattern[$CellContext`newColorVal, 
       Blank[]], 
      Pattern[$CellContext`gpart, 
       Blank[Integer]]] := 
    MapAt[$CellContext`newColorVal& , $CellContext`mycolorVal, \
$CellContext`gpart]; $CellContext`colorincrementer$$[
      Pattern[$CellContext`mycolorVal, 
       Blank[][
        BlankSequence[]]], 
      Pattern[$CellContext`newColorVal, 
       Blank[]], 
      Pattern[$CellContext`gpart, 
       Blank[Integer]]] := ColorConvert[
      MapAt[$CellContext`newColorVal& , $CellContext`mycolorVal, \
$CellContext`gpart], "RGB"]; $CellContext`framedGradient$$[
      Pattern[$CellContext`gradImg$, 
       Blank[]]] := 
    Panel[$CellContext`gradImg$, 
      Appearance -> {
       "Default" -> 
        FrontEnd`FileName[{"Choosers", "Color"}, 
          "GradientSlider_bg.9.png", CharacterEncoding -> 
          "UTF-8"]}]; $CellContext`framedGradient$$[
      Pattern[$CellContext`gradImg$, 
       Blank[]], "ticks"] := Pane[
      Column[{
        Pane[
         Grid[{{
            Pane["", Full], 
            Pane["", Full]}}, Dividers -> {{{
              Directive[
               RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
             Scaled[0.49], 
             Scaled[0.5]}, Automatic}], {Full, 6}, 
         Alignment -> {Center, Bottom}], 
        $CellContext`framedGradient$$[$CellContext`gradImg$]}, 
       Spacings -> 0, Alignment -> {Automatic, Bottom}], ImageMargins -> 
      0, FrameMargins -> {{5, 6}, {0, 0}}]; $CellContext`gimages$$[
      Pattern[$CellContext`mycolorVal$, 
       Blank[][
        BlankSequence[]]], 
      Pattern[$CellContext`gminVals$, 
       Blank[]], 
      Pattern[$CellContext`gmaxVals$, 
       Blank[]], 
      Pattern[$CellContext`imgHt$, 
       Blank[]]] := With[{$CellContext`stepSz$ = 0.05}, 
      Framed[
       Column[
        Map[$CellContext`framedGradient$$[#, "ticks"]& , 
         Table[
          Graphics[
           Raster[
            Developer`ToPackedArray[{
              ReplaceAll[
               Table[
                $CellContext`colorincrementer$$[$CellContext`\
mycolorVal$, $CellContext`x, $CellContext`i], {$CellContext`x, 
                 Part[$CellContext`gminVals$, $CellContext`i], 
                 
                 Part[$CellContext`gmaxVals$, $CellContext`i], \
$CellContext`stepSz$}], RGBColor -> List]}], {{0, 0}, {
             1, $CellContext`stepSz$}}], AspectRatio -> Full, 
           ImageSize -> {Full, $CellContext`imgHt$}, PlotRangePadding -> 
           0, ImagePadding -> 0], {$CellContext`i, 
           Length[$CellContext`gminVals$]}]], ItemSize -> Automatic, 
        Spacings -> 1.55], FrameStyle -> 
       None]]; $CellContext`gimages$$[
      Pattern[$CellContext`mycolorVal$, 
       PatternTest[
        Blank[][
         BlankSequence[]], Length[#] < 4& ]], 
      Pattern[$CellContext`gminVals$, 
       Blank[]], 
      Pattern[$CellContext`gmaxVals$, 
       Blank[]]] := $CellContext`gimages$$[$CellContext`mycolorVal$, \
$CellContext`gminVals$, $CellContext`gmaxVals$, 
      16]; $CellContext`gimages$$[
      Pattern[$CellContext`mycolorVal$, 
       PatternTest[
        Blank[][
         BlankSequence[]], Length[#] >= 4& ]], 
      Pattern[$CellContext`gminVals$, 
       Blank[]], 
      Pattern[$CellContext`gmaxVals$, 
       Blank[]]] := $CellContext`gimages$$[$CellContext`mycolorVal$, \
$CellContext`gminVals$, $CellContext`gmaxVals$, 17]; Null)]],
 Editable->False,
 Selectable->False,
 CellContext->Cell,
 Magnification->1.,
 CellTags->"CodeAssistAttachedCell"]

