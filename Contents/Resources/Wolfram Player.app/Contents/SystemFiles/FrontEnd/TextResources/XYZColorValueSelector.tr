Cell[BoxData[
 DynamicModuleBox[{$CellContext`colorVal$$ = XYZColor[
  0.5, 0.5, 0.5], $CellContext`alpha$$ = 1., $CellContext`vspace$$ = 
  1., $CellContext`hspace$$ = 
  5., $CellContext`btnInsertXpr$$, $CellContext`commaSepColorVals$$, \
$CellContext`$ColorList$$ = {
  "X", "Y", "Z"}, $CellContext`$ColorSelectorTextResource$$ = 
  "XYZColorValueSelectorStrings", \
$CellContext`$ColorListLenWithAlpha$$ = {
  1 + "X", 1 + "Y", 1 + "Z"}, $CellContext`$PartColorList$$ = {
  1 -> "X", 2 -> "Y", 3 -> 
   "Z"}, $CellContext`colorincrementer$$, $CellContext`gimages$$, \
$CellContext`framedGradient$$, $CellContext`showSlider$$ = 
  False, $CellContext`sliderGradients$$}, 
  PanelBox[
   PaneBox[
    DynamicModuleBox[{$CellContext`sliderGradients$$ = Framed[
      Column[{
        Pane[
         Column[{
           Pane[
            Grid[{{
               Pane["", Full], 
               Pane["", Full]}}, Dividers -> {{{
                 Directive[
                  RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
                Scaled[0.49], 
                Scaled[0.5]}, Automatic}], {Full, 6}, 
            Alignment -> {Center, Bottom}], 
           Panel[
            Graphics[
             Raster[CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIAaxYeDzXYdXE5a8t/fsaLgv5/vSHibeaKliyvD+
nb2tvuDSfXEI8WjfRQr7jd/ZN3PeK/QrQIiLe1jt8Sp6a8/P8SXnXCNC/Pip
n9u5V72xN3U+usduMkJcLUl/W+Ct1/benjrt85cgxD9LzVfxZXpt7xGW//HD
1pf298yfLI5OPWufaJTDxK74yl671FnB+PhLe+1Xiyvu/rtnH33k+rJQ05f2
N7rPm6fdeGmvOiG4+pLJE3unYxvFztq+sDcMWh/d9fKl/a7/QUwrzj23PyOy
sH+FxXP7Pybf1s3/9dJeeWNujen5V/ZXb5YGrVR+Zp+qahSyjPuV/cn/n+cu
yHlrf2dqwIrHv5/Yt4Xm5c6TeWWffp33buHh9/aCnxr/5ex9bL/vkalMh+4r
qPs/2IdtObLtQtIje/+8aY3Jdgjxn/FPLwk+eWB/b4nSPgN/hPjGz3wmYZn3
7EO2fvn4Ph4hXlGRW/mk9pb9pu0bbBYWIMTfHfr17+Haq/ZOLO17XRoR4kal
itmPuc7Zb682m3xr4it7AMNKzgg=
              "], {{0, 0}, {1, 0.05}}], 
             AspectRatio -> Full, ImageSize -> {Full, 16}, 
             PlotRangePadding -> 0, ImagePadding -> 0], 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Choosers", "Color"}, 
                "GradientSlider_bg.9.png", CharacterEncoding -> 
                "UTF-8"]}]}, Spacings -> 0, 
          Alignment -> {Automatic, Bottom}], ImageMargins -> 0, 
         FrameMargins -> {{5, 6}, {0, 0}}], 
        Pane[
         Column[{
           Pane[
            Grid[{{
               Pane["", Full], 
               Pane["", Full]}}, Dividers -> {{{
                 Directive[
                  RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
                Scaled[0.49], 
                Scaled[0.5]}, Automatic}], {Full, 6}, 
            Alignment -> {Center, Bottom}], 
           Panel[
            Graphics[
             Raster[CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIAaxIeCDPYzFvU2t/dW/1/bo4sf3z46rPYsp3s5y
r2j2bEzx4j7d046Zr+3VS3SbN/x8Dxe/zbTeL9fstf1+Xw1+4fPv7FvypsSd
ObnJnqO46ZAU82v7j17NbuumvLWfoyWwgHPqNfspfluOu51/Zb/r9twkFo83
9vb8B1jz796zV7jKcvPtrFf2/I7Hbz54+sreTSVVOq3xkf3iX40ePGmv7H0f
BTSzZb2011txpfsyx1P7lebvbeYZAM35H8S04txz+zMiC/tXWDy3/2Pybd38
Xy/t/Y3DdSq4n9lnBYYek9V+aT95iVQaz5GX9h4BrAp3hZ/Y/4xuqZz3/pX9
uqdZX+/3vLS/+8vvCfflh/ZLDG8UyU14Yy/o8my7aChQn3aAu4DLPftlgf9N
K4Tf2fdunXBmhcxL+yDzs5eKvK7bZ+6fqTW/7r39rhdaQlMev7DXyV+9n7v0
ODz85tq2KF1a+QIeXjDxk1eifGPzMcVPWe+ZpG+CKb4u8Pocpx/PMcSPHNDd
2b/7uT0A4MjDdA==
              "], {{0, 0}, {1, 0.05}}], AspectRatio -> 
             Full, ImageSize -> {Full, 16}, PlotRangePadding -> 0, 
             ImagePadding -> 0], 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Choosers", "Color"}, 
                "GradientSlider_bg.9.png", CharacterEncoding -> 
                "UTF-8"]}]}, Spacings -> 0, 
          Alignment -> {Automatic, Bottom}], ImageMargins -> 0, 
         FrameMargins -> {{5, 6}, {0, 0}}], 
        Pane[
         Column[{
           Pane[
            Grid[{{
               Pane["", Full], 
               Pane["", Full]}}, Dividers -> {{{
                 Directive[
                  RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
                Scaled[0.49], 
                Scaled[0.5]}, Automatic}], {Full, 6}, 
            Alignment -> {Center, Bottom}], 
           Panel[
            Graphics[
             Raster[CompressedData["
1:eJxTTMoPSmVmYGBgBGJBIAax15Z7Tj0e/MY+xTzE9untZ/YMUKB781zx31ev
7X+/j//n+BQhnqTGy6vc8Np+isHL4zPfPbN3Xt250GjtRftTE26qSQu/tm/J
EVj45vsze+/pzAdzu2/apxQInD66+JX9x7KnE6wYn9tfXXj2xC2D+/bfcoNe
/jd8ZV++I31eM9dze/Mns/SLHz+0NzV89HzR3pf2j5LbLhwXfm6/uTL5SOnt
x/aMJufkW9xe2kusUtBjl31uz96Wz2ox66n930sN9iVnXthrvGXd56gGNH/x
McUevef2guHJvXb+L+ynfvraVq7/3P7NKekd9xe+sN/1P4hpxbnn9mdEFvav
sHhu/8fk27r5v17a/2hlNszzem5/sXjFvSuOz+05d1h/S7N9bV+QdfC166Fn
9kaq86r+AOUzXAK3L859Yz/37L0pN02f2esms2bJhzy3r+K/4/2j963981Nb
/h1b8tRecXfQZtvY5/bWt4Pqyhe8s9/Qn7R1Dt9Te1/rNzHhac/tRW0/7zq9
7L09a2ZZzbWiJ/aH52vm5uQ/h4bzB3sA/QjN/w==
              
              "], {{0, 0}, {1, 0.05}}], AspectRatio -> Full, 
             ImageSize -> {Full, 16}, PlotRangePadding -> 0, 
             ImagePadding -> 0], 
            Appearance -> {
             "Default" -> 
              FrontEnd`FileName[{"Choosers", "Color"}, 
                "GradientSlider_bg.9.png", CharacterEncoding -> 
                "UTF-8"]}]}, Spacings -> 0, 
          Alignment -> {Automatic, Bottom}], ImageMargins -> 0, 
         FrameMargins -> {{5, 6}, {0, 0}}]}, ItemSize -> Automatic, 
       Spacings -> 1.55], FrameStyle -> None]}, 
     TagBox[GridBox[{
        {
         DynamicWrapperBox[
          FrameBox[
           PaneSelectorBox[{False->
            TagBox[GridBox[{
               {
                TagBox[GridBox[{
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 1], 
                    StandardForm],
                    ImageSizeCache->{198., {14., 20.}}],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "X"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    0.97, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{0.52, 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 1, #, 0, 
                    0.97])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]],
                    ImageSizeCache->{20., {0., 21.}}], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 1, 0, 0.97]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    1])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 1, 0, 0.97])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 1]], {3, 2}], 
                    StandardForm],
                    ImageSizeCache->{20., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 2], 
                    StandardForm],
                    ImageSizeCache->{198., {14., 20.}}],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Y"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    1, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{0.5, 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 2, #, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]],
                    ImageSizeCache->{20., {0., 21.}}], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 2, 0, 1]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    2])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 2, 0, 1])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 2]], {3, 2}], 
                    StandardForm],
                    ImageSizeCache->{20., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 3], 
                    StandardForm],
                    ImageSizeCache->{198., {14., 20.}}],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Z"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    0.83, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{0.6, 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 3, #, 0, 
                    0.83])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]],
                    ImageSizeCache->{20., {0., 21.}}], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 3, 0, 0.83]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    3])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 3, 0, 0.83])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 3]], {3, 2}], 
                    StandardForm],
                    ImageSizeCache->{20., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {
                TagBox[GridBox[{
                   {
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPadding$\
$ = 0.01, $CellContext`minVal$$ = 0, $CellContext`maxVal$$ = 1}, 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Opacity"]],
                    StyleBox["\"lg\"", ShowContents -> False, 
                    StripOnInput -> False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    OverlayBox[{
                    PaneBox[
                    PanelBox["\<\"\"\>",
                    
                    Appearance->{
                    "Default" -> FrontEnd`FileName[{
                    "Choosers", "Color"}, "OpacitySlider_bg.9.png", 
                    CharacterEncoding -> "UTF-8"]},
                    ImageSize->Full],
                    FrameMargins->{{5, 6}, {0, 0}},
                    ImageSize->{Full, Automatic}], 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$ = \
{1., 0.5}, $CellContext`verticalThumbPos$$ = 
                    0.5, $CellContext`posToAlphaVal$$, \
$CellContext`alphaValToPos$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`alpha$$ = \
$CellContext`posToAlphaVal$$[#, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], RectangleBox[{0, 0}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "OpacityThumb.png"]],
                    ImageSizeCache->{18., {0., 18.}}], 
                    Dynamic[$CellContext`alphaValToPos$$[$CellContext`\
alpha$$, 0, 1]]]},
                    AspectRatio->Full,
                    ImageSize->{Full, 19}],
                    Appearance->None],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToAlphaVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`alphaValToPos$$[
                    Pattern[$CellContext`myalphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`minAlphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxAlphaVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`alphavalRange$ = \
$CellContext`maxAlphaVal$ - $CellContext`minAlphaVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = 
                    Round[$CellContext`maxSliderPos$ - 
                    N[($CellContext`maxAlphaVal$ - \
$CellContext`myalphaVal$)/$CellContext`alphavalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`alphaValToPos$$[$CellContext`alpha$$, 0, 1])]}, Full, 2,
                    Alignment->{Center, Center}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
                    "Column"],
                    ImageSize->200],
                    DynamicModuleValues:>{}], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[$CellContext`alpha$$], {3, 2}], StandardForm],
                    ImageSizeCache->{18., {0., 7.}}],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 8}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {
                PaneBox[
                 ButtonBox[
                  PaneBox[
                   DynamicBox[ToBoxes[
                    If[$CellContext`showSlider$$, 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Basic"]]], 11], 
                    RGBColor[0.27, 0.27, 0.27]], 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Advanced"]]], 
                    11], 
                    RGBColor[0.27, 0.27, 0.27]]], StandardForm],
                    ImageSizeCache->{52., {0., 8.}}],
                   Alignment->{Center, Center},
                   ImageSize->{Full, Full}],
                  
                  Appearance->FEPrivate`FrontEndResource[
                   "FEExpressions", "GrayButtonNinePatchAppearance"],
                  
                  ButtonFunction:>($CellContext`showSlider$$ = 
                   Not[$CellContext`showSlider$$]),
                  Evaluator->Automatic,
                  Method->"Preemptive"],
                 ImageSize->{Automatic, 26}]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Center}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{0}}, "Rows" -> {{0.5}}}],
             "Grid"], True->
            TagBox[GridBox[{
               {
                PaneBox[
                 
                 DynamicModuleBox[{$CellContext`defaultcolorvalue$$ = \
$CellContext`colorVal$$}, 
                  
                  ColorSetterBox[
                   Dynamic[$CellContext`defaultcolorvalue$$, \
($CellContext`colorVal$$ = 
                    If[Head[$CellContext`colorVal$$] === Head[#], #, 
                    ColorConvert[
                    If[Head[#] =!= RGBColor, 
                    RGBColor[0., 0., 0.], #], 
                    "XYZ"]]; $CellContext`colorVal$$ = 
                    Map[Round[If[Abs[#] < 0.004, 0., #] 100]/
                    100.& , $CellContext`colorVal$$])& ], "Spectrum",
                   ImageSize->{240, 120}],
                  DynamicModuleValues:>{}],
                 Alignment->Left,
                 ImageSize->Full], 
                TagBox[GridBox[{
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 1], 
                    StandardForm]],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "X"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    0.97, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 1, #, 0, 
                    0.97])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]]], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 1, 0, 0.97]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    1])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 1, 0, 0.97])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 1]], {3, 2}], 
                    StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 2], 
                    StandardForm]],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Y"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    1, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 2, #, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]]], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 2, 0, 1]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    2])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 2, 0, 1])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 2]], {3, 2}], 
                    StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]},
                   {
                    OverlayBox[{
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Part[$CellContext`sliderGradients$$, 1, 1, 3], 
                    StandardForm]],
                    FrameMargins->{{0, 0}, {0, 4}},
                    FrameStyle->None,
                    StripOnInput->False], 
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Z"]],StyleBox[
                    "\"lg\"", ShowContents -> False, StripOnInput -> 
                    False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    
                    DynamicModuleBox[{$CellContext`panelSz$$ = {
                    200, Automatic}, $CellContext`minVal$$ = 
                    0, $CellContext`maxVal$$ = 
                    0.83, $CellContext`colorArg$$, \
$CellContext`newVal$$}, 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToColorVal$$, \
$CellContext`colorValToPos$$, $CellContext`colorUpdate$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`colorVal$$ = \
$CellContext`colorUpdate$$[$CellContext`colorVal$$, 3, #, 0, 
                    0.83])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "GradientSliderThumb.png"]]], 
                    Dynamic[$CellContext`colorValToPos$$[$CellContext`\
colorVal$$, 3, 0, 0.83]], {Center, Top}]},
                    AspectRatio->Full,
                    ImagePadding->{{5, 5}, {20, 0}},
                    ImageSize->{
                    Scaled[1], 19},
                    PlotRangePadding->{0.02, 0.02}],
                    Appearance->None,
                    FrameMargins->0],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToColorVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`colorValToPos$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`minColorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxColorVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`colorvalRange$ = \
$CellContext`maxColorVal$ - $CellContext`minColorVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = \
$CellContext`maxSliderPos$ - Round[
                    
                    N[($CellContext`maxColorVal$ - 
                    Part[$CellContext`mycolorVal$, 
                    3])/$CellContext`colorvalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`colorUpdate$$[
                    Pattern[$CellContext`mycolorVal$, 
                    Blank[]], 
                    Pattern[$CellContext`mypart$, 
                    Blank[]], 
                    Pattern[$CellContext`newVal$, 
                    Blank[]], 
                    Pattern[$CellContext`min$, 
                    Blank[]], 
                    Pattern[$CellContext`max$, 
                    Blank[]]] := 
                    MapAt[$CellContext`posToColorVal$$[$CellContext`\
newVal$, $CellContext`min$, $CellContext`max$]& , \
$CellContext`mycolorVal$, $CellContext`mypart$]; \
$CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`colorValToPos$$[$CellContext`colorVal$$, 3, 0, 0.83])],
                    DynamicModuleValues:>{}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
                    "Column"]}, Full, 2,
                    Alignment->Left,
                    ImageSize->200], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[
                    Part[$CellContext`colorVal$$, 3]], {3, 2}], 
                    StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 9}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  GridBoxAlignment->{"Columns" -> {{Left}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {"\<\"\"\>", 
                TagBox[GridBox[{
                   {
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPadding$\
$ = 0.01, $CellContext`minVal$$ = 0, $CellContext`maxVal$$ = 1}, 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    StyleBox[
                    StyleBox[
                    TemplateBox[{DynamicBox[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Opacity"]],
                    StyleBox["\"lg\"", ShowContents -> False, 
                    StripOnInput -> False]},
                    "RowDefault"],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]]},
                    {
                    OverlayBox[{
                    PaneBox[
                    PanelBox["\<\"\"\>",
                    
                    Appearance->{
                    "Default" -> FrontEnd`FileName[{
                    "Choosers", "Color"}, "OpacitySlider_bg.9.png", 
                    CharacterEncoding -> "UTF-8"]},
                    ImageSize->Full],
                    FrameMargins->{{5, 6}, {0, 0}},
                    ImageSize->{Full, Automatic}], 
                    
                    DynamicModuleBox[{$CellContext`sliderThumbPos$$, \
$CellContext`verticalThumbPos$$, $CellContext`posToAlphaVal$$, \
$CellContext`alphaValToPos$$}, 
                    
                    LocatorPaneBox[
                    Dynamic[$CellContext`sliderThumbPos$$, \
($CellContext`sliderThumbPos$$ = #; $CellContext`alpha$$ = \
$CellContext`posToAlphaVal$$[#, 0, 1])& ], 
                    GraphicsBox[
                    {Opacity[0], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], InsetBox[
                    DynamicBox[FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Choosers", "Color"}, 
                    "OpacityThumb.png"]]], 
                    Dynamic[$CellContext`alphaValToPos$$[$CellContext`\
alpha$$, 0, 1]]]},
                    AspectRatio->Full,
                    ImageSize->{Full, 19}],
                    Appearance->None],
                    DynamicModuleValues:>{},
                    Initialization:>($CellContext`posToAlphaVal$$[
                    Pattern[$CellContext`thumPos, 
                    Blank[]], 
                    Pattern[$CellContext`min, 
                    Blank[]], 
                    Pattern[$CellContext`max, 
                    Blank[]]] := 
                    Module[{$CellContext`valRange = $CellContext`max - \
$CellContext`min, $CellContext`value}, $CellContext`value = 
                    Round[$CellContext`min + $CellContext`valRange 
                    Part[$CellContext`thumPos, 1], 
                    0.01]; $CellContext`value = 
                    Which[$CellContext`value <= $CellContext`min, \
$CellContext`min, $CellContext`value >= $CellContext`max, \
$CellContext`max, 
                    True, $CellContext`value]]; \
$CellContext`alphaValToPos$$[
                    Pattern[$CellContext`myalphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`minAlphaVal$, 
                    Blank[]], 
                    Pattern[$CellContext`maxAlphaVal$, 
                    Blank[]]] := 
                    Module[{$CellContext`alphavalRange$ = \
$CellContext`maxAlphaVal$ - $CellContext`minAlphaVal$, \
$CellContext`value$, $CellContext`maxSliderPos$ = 
                    1}, $CellContext`value$ = 
                    Round[$CellContext`maxSliderPos$ - 
                    N[($CellContext`maxAlphaVal$ - \
$CellContext`myalphaVal$)/$CellContext`alphavalRange$], 
                    0.01]; {$CellContext`value$, \
$CellContext`verticalThumbPos$$}]; $CellContext`verticalThumbPos$$ = 
                    0.5; $CellContext`sliderThumbPos$$ = \
$CellContext`alphaValToPos$$[$CellContext`alpha$$, 0, 1])]}, Full, 2,
                    Alignment->{Center, Center}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0}}}],
                    "Column"],
                    ImageSize->200],
                    DynamicModuleValues:>{}], 
                    FrameBox[
                    FrameBox[
                    PaneBox[
                    StyleBox[
                    DynamicBox[ToBoxes[
                    NumberForm[
                    N[$CellContext`alpha$$], {3, 2}], StandardForm]],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontSize->9,
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{36, 16}],
                    Background->RGBColor[0.96, 0.96, 0.96],
                    FrameMargins->0,
                    FrameStyle->RGBColor[0.8, 0.8, 0.8],
                    StripOnInput->False],
                    FrameMargins->{{0, 0}, {0, 8}},
                    FrameStyle->None,
                    StripOnInput->False]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{0.5}}}],
                 "Grid"]},
               {
                PaneBox[
                 PaneBox[
                  ButtonBox[
                   PaneBox[
                    DynamicBox[ToBoxes[
                    If[$CellContext`showSlider$$, 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Basic"]]], 11], 
                    RGBColor[0.27, 0.27, 0.27]], 
                    Style[
                    Style[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "Advanced"]]], 
                    11], 
                    RGBColor[0.27, 0.27, 0.27]]], StandardForm]],
                    Alignment->{Center, Center},
                    ImageSize->{Full, Full}],
                   
                   Appearance->FEPrivate`FrontEndResource[
                    "FEExpressions", "GrayButtonNinePatchAppearance"],
                   
                   
                   ButtonFunction:>($CellContext`showSlider$$ = 
                    Not[$CellContext`showSlider$$]),
                   Evaluator->Automatic,
                   Method->"Preemptive"],
                  ImageSize->{Automatic, 26}],
                 ImageSize->240], "\<\"\"\>"}
              },
              AutoDelete->False,
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"]}, Dynamic[$CellContext`showSlider$$],
            ImageSize->Full],
           FrameMargins->{{5, 5}, {0, 0}},
           FrameStyle->None,
           
           StripOnInput->
            False], $CellContext`sliderGradients$$ = \
$CellContext`gimages$$[$CellContext`colorVal$$, {0, 0, 0}, {
            0.97, 1, 0.83}],
          ImageSizeCache->{260., {102., 107.}},
          
          TrackedSymbols:>{$CellContext`colorVal$$, \
$CellContext`alpha$$}]},
        {
         PanelBox[
          FrameBox[
           TagBox[GridBox[{
              {
               FrameBox[
                FrameBox[
                 GraphicsBox[{InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1: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
K/8BVquSqA==
                    "], {{0, 465}, {465, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSizeRaw->{465, 465},
                    PlotRange->{{0, 465}, {0, 465}}],
                    TraditionalForm], {Center, Center}], InsetBox[
                    DynamicBox[ToBoxes[
                    Graphics[{
                    
                    Append[$CellContext`colorVal$$, \
$CellContext`alpha$$], 
                    Rectangle[]}], TraditionalForm],
                    ImageSizeCache->{180., {0., 179.}}], {
                    Center, Center}]},
                  FrameLabel->{None, None},
                  FrameTicks->{{None, None}, {None, None}},
                  ImageMargins->0,
                  ImagePadding->None,
                  ImageSize->{25.2, 25.2},
                  PlotRangeClipping->True,
                  PlotRangePadding->0],
                 FrameMargins->0,
                 FrameStyle->GrayLevel[1],
                 StripOnInput->False],
                FrameMargins->0,
                FrameStyle->RGBColor[0.8, 0.8, 0.8],
                StripOnInput->False], 
               FrameBox[
                TagBox[GridBox[{
                   {
                    ButtonBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", 
                    "cancelButtonText"],
                    ImageSizeCache->{36., {1., 8.}}],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->RGBColor[0.27, 0.27, 0.27],
                    FrontFaceColor->RGBColor[0.27, 0.27, 0.27],
                    BackFaceColor->RGBColor[0.27, 0.27, 0.27],
                    GraphicsColor->RGBColor[0.27, 0.27, 0.27],
                    FontColor->RGBColor[0.27, 0.27, 0.27]],
                    Alignment->{Center, Center},
                    ImageSize->{Full, Full}],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "FEExpressions", "GrayButtonNinePatchAppearance"],
                    
                    ButtonFunction:>NotebookDelete[
                    EvaluationCell[]],
                    Evaluator->Automatic,
                    ImageSize->{70, 26},
                    Method->"Preemptive"], 
                    ButtonBox[
                    PaneBox[
                    StyleBox[
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "XYZColorValueSelectorStrings", "okButtonText"],
                    ImageSizeCache->{16., {1., 8.}}],
                    StripOnInput->False,
                    FontSize->11],
                    StripOnInput->False,
                    LineColor->GrayLevel[1],
                    FrontFaceColor->GrayLevel[1],
                    BackFaceColor->GrayLevel[1],
                    GraphicsColor->GrayLevel[1],
                    FontColor->GrayLevel[1]],
                    Alignment->{Center, Center},
                    ImageSize->{Full, Full}],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "FEExpressions", 
                    "OrangeButtonNinePatchAppearance"],
                    ButtonFunction:>(FrontEndExecute[{
                    FrontEnd`NotebookApply[
                    FrontEnd`InputNotebook[], 
                    If[$CellContext`alpha$$ == 1., 
                    $CellContext`btnInsertXpr$$[$CellContext`colorVal$\
$], 
                    $CellContext`btnInsertXpr$$[$CellContext`colorVal$\
$, $CellContext`alpha$$]], Placeholder]}]; NotebookDelete[
                    EvaluationCell[]]),
                    Evaluator->Automatic,
                    ImageSize->{70, 26},
                    Method->"Preemptive"]}
                  },
                  AutoDelete->False,
                  
                  GridBoxAlignment->{
                   "Columns" -> {Left, Right}, "Rows" -> {{Center}}},
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.7}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                Alignment->{Right, Center},
                FrameMargins->0,
                FrameStyle->None,
                ImageSize->Full,
                StripOnInput->False]}
             },
             AutoDelete->False,
             
             GridBoxAlignment->{
              "Columns" -> {{Right}}, "Rows" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}}],
            "Grid"],
           FrameMargins->{{5, 5}, {0, 0}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->{Automatic, Center},
          
          Appearance->{
           "Default" -> 
            FrontEnd`FileName[{"Choosers", "Color"}, 
              "ColorPickerFooter_bg.9.png", CharacterEncoding -> 
              "UTF-8"]},
          ImageSize->All]}
       },
       BaseStyle->"DialogStyle",
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{None}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}, 
         "RowsIndexed" -> {2 -> 2, -2 -> 1, -3 -> 2, -4 -> 2}}],
      "Column"],
     DynamicModuleValues:>{}],
    ImageSize->Dynamic[
      FEPrivate`If[$CellContext`showSlider$$, 520, 260]]],
   Appearance->{
    "Default" -> 
     FrontEnd`FileName[{"Choosers", "Color"}, "ColorPicker_bg.9.png", 
       CharacterEncoding -> "UTF-8"]},
   FrameMargins->{{0, 0}, {0, 5}}],
  DynamicModuleValues:>{},
  Initialization:>(If[
     TrueQ[
     0 <= FrontEnd`Private`$ColorSelectorInitialAlpha <= 
      1], $CellContext`alpha$$ = 
      FrontEnd`Private`$ColorSelectorInitialAlpha; 
     ClearAll[
      FrontEnd`Private`$ColorSelectorInitialAlpha], \
$CellContext`alpha$$ = 1.]; 
   If[Head[FrontEnd`Private`$ColorSelectorInitialColor] === 
     XYZColor, $CellContext`colorVal$$ = 
      FrontEnd`Private`$ColorSelectorInitialColor; 
     ClearAll[
      FrontEnd`Private`$ColorSelectorInitialColor], \
$CellContext`colorVal$$ = Apply[XYZColor, 
       Table[0.5, {
         Length[{"X", "Y", "Z"}]}]]]; $CellContext`showSlider$$ = 
    False; If[
     TrueQ[
     FrontEnd`Private`$ColorSelectorUseMakeBoxes], \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`head, 
         Blank[]][
         Pattern[$CellContext`args, 
          BlankNullSequence[]]]] := MakeBoxes[
        $CellContext`head[$CellContext`args]]; \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`head, 
         Blank[]][
         Pattern[$CellContext`args, 
          BlankNullSequence[]]], 
        Pattern[$CellContext`alpha, 
         Blank[]]] := MakeBoxes[
        $CellContext`head[$CellContext`args, $CellContext`alpha]]; 
     ClearAll[
      FrontEnd`Private`$ColorSelectorUseMakeBoxes], \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`colorHD, 
         Blank[String]], 
        Pattern[$CellContext`formattedColorVals, 
         Blank[]]] := BoxData[
        RowBox[{$CellContext`colorHD, "[", 
          RowBox[$CellContext`formattedColorVals], 
          "]"}]]; $CellContext`btnInsertXpr$$[
        Pattern[$CellContext`mycolorVal$, 
         Blank[]]] := $CellContext`btnInsertXpr$$[
        ToString[
         Head[$CellContext`mycolorVal$]], 
        $CellContext`commaSepColorVals$$[$CellContext`mycolorVal$]]; \
$CellContext`btnInsertXpr$$[
        Pattern[$CellContext`mycolorVal$, 
         Blank[]], 
        Pattern[$CellContext`alpha$, 
         Blank[]]] := $CellContext`btnInsertXpr$$[
        ToString[
         Head[$CellContext`mycolorVal$]], 
        $CellContext`commaSepColorVals$$[$CellContext`mycolorVal$, \
$CellContext`alpha$]]]; $CellContext`commaSepColorVals$$[
      Pattern[$CellContext`mycolorVal, 
       Blank[]]] := Riffle[
      Table[
       ToString[
        Part[$CellContext`mycolorVal, $CellContext`i]], \
{$CellContext`i, 
        Length[$CellContext`mycolorVal]}], 
      ","]; $CellContext`commaSepColorVals$$[
      Pattern[$CellContext`mycolorVal$, 
       Blank[]], 
      Pattern[$CellContext`alpha$, 
       Blank[]]] := Join[
      $CellContext`commaSepColorVals$$[$CellContext`mycolorVal$], {
      ",", 
       ToString[$CellContext`alpha$]}]; \
$CellContext`colorincrementer$$[
      Pattern[$CellContext`mycolorVal, 
       RGBColor[
        BlankSequence[]]], 
      Pattern[$CellContext`newColorVal, 
       Blank[]], 
      Pattern[$CellContext`gpart, 
       Blank[Integer]]] := 
    MapAt[$CellContext`newColorVal& , $CellContext`mycolorVal, \
$CellContext`gpart]; $CellContext`colorincrementer$$[
      Pattern[$CellContext`mycolorVal, 
       Blank[][
        BlankSequence[]]], 
      Pattern[$CellContext`newColorVal, 
       Blank[]], 
      Pattern[$CellContext`gpart, 
       Blank[Integer]]] := ColorConvert[
      MapAt[$CellContext`newColorVal& , $CellContext`mycolorVal, \
$CellContext`gpart], "RGB"]; $CellContext`framedGradient$$[
      Pattern[$CellContext`gradImg$, 
       Blank[]]] := 
    Panel[$CellContext`gradImg$, 
      Appearance -> {
       "Default" -> 
        FrontEnd`FileName[{"Choosers", "Color"}, 
          "GradientSlider_bg.9.png", CharacterEncoding -> 
          "UTF-8"]}]; $CellContext`framedGradient$$[
      Pattern[$CellContext`gradImg$, 
       Blank[]], "ticks"] := Pane[
      Column[{
        Pane[
         Grid[{{
            Pane["", Full], 
            Pane["", Full]}}, Dividers -> {{{
              Directive[
               RGBColor[0.8, 0.8, 0.8]]}}, None}, ItemSize -> {{
             Scaled[0.49], 
             Scaled[0.5]}, Automatic}], {Full, 6}, 
         Alignment -> {Center, Bottom}], 
        $CellContext`framedGradient$$[$CellContext`gradImg$]}, 
       Spacings -> 0, Alignment -> {Automatic, Bottom}], ImageMargins -> 
      0, FrameMargins -> {{5, 6}, {0, 0}}]; $CellContext`gimages$$[
      Pattern[$CellContext`mycolorVal$, 
       Blank[][
        BlankSequence[]]], 
      Pattern[$CellContext`gminVals$, 
       Blank[]], 
      Pattern[$CellContext`gmaxVals$, 
       Blank[]], 
      Pattern[$CellContext`imgHt$, 
       Blank[]]] := With[{$CellContext`stepSz$ = 0.05}, 
      Framed[
       Column[
        Map[$CellContext`framedGradient$$[#, "ticks"]& , 
         Table[
          Graphics[
           Raster[
            Developer`ToPackedArray[{
              ReplaceAll[
               Table[
                $CellContext`colorincrementer$$[$CellContext`\
mycolorVal$, $CellContext`x, $CellContext`i], {$CellContext`x, 
                 Part[$CellContext`gminVals$, $CellContext`i], 
                 
                 Part[$CellContext`gmaxVals$, $CellContext`i], \
$CellContext`stepSz$}], RGBColor -> List]}], {{0, 0}, {
             1, $CellContext`stepSz$}}], AspectRatio -> Full, 
           ImageSize -> {Full, $CellContext`imgHt$}, PlotRangePadding -> 
           0, ImagePadding -> 0], {$CellContext`i, 
           Length[$CellContext`gminVals$]}]], ItemSize -> Automatic, 
        Spacings -> 1.55], FrameStyle -> 
       None]]; $CellContext`gimages$$[
      Pattern[$CellContext`mycolorVal$, 
       PatternTest[
        Blank[][
         BlankSequence[]], Length[#] < 4& ]], 
      Pattern[$CellContext`gminVals$, 
       Blank[]], 
      Pattern[$CellContext`gmaxVals$, 
       Blank[]]] := $CellContext`gimages$$[$CellContext`mycolorVal$, \
$CellContext`gminVals$, $CellContext`gmaxVals$, 
      16]; $CellContext`gimages$$[
      Pattern[$CellContext`mycolorVal$, 
       PatternTest[
        Blank[][
         BlankSequence[]], Length[#] >= 4& ]], 
      Pattern[$CellContext`gminVals$, 
       Blank[]], 
      Pattern[$CellContext`gmaxVals$, 
       Blank[]]] := $CellContext`gimages$$[$CellContext`mycolorVal$, \
$CellContext`gminVals$, $CellContext`gmaxVals$, 17]; Null)]],
 Editable->False,
 Selectable->False,
 CellContext->Cell,
 Magnification->1.,
 CellTags->"CodeAssistAttachedCell"]

