{

(****************************)
(* Example:   ToonExample     *)
(****************************)

"ToonProgram" :>  FEPrivate`AddSurfaceAppearanceDefinition[<|"Name" -> "ToonExample", 
  "Attributes" -> <|
    "position"->"ATTRIB_VERTEX", 
    "normal"->"ATTRIB_NORMAL"
  |>,
   "Parameters" -> <|
    "WVPMatrix"->{"worldViewProjectionMatrix", Automatic, "WORLDVIEWPROJECTIONMATRIX"},
    "WVITMatrix"->{"worldViewITMatrix", Automatic, "WORLDVIEWITMATRIX"},
    "AmbientColor"->{"uAmbientColor", RGBColor[{0.25,0.25,0.25,1}], "COLOR"},
    "LightingDirection"->{"uLightingDirection", {1,1,1}, "NUMBER3"},
    "DirectionalColor"->{"uDirectionalColor", RGBColor[{0.5,0.5,0.5,1}], "COLOR"},
    "ToonColor1"->{"toonColor1", RGBColor[{0.804,0.796,0.807,1.0}], "COLOR"},
    "ToonColor2"->{"toonColor2", RGBColor[{0.4,0.4,0.8,1.0}], "COLOR"},
    "ToonColor3"->{"toonColor3", RGBColor[{0.2,0.2,0.4,1.0}], "COLOR"},
    "ToonColor4"->{"toonColor4", RGBColor[{0.086,0.094,0.07,1.0}], "COLOR"}  
  |>,
  "ShaderPrograms" -> <|
  "GLFragmentProgram" ->"varying float intensity; uniform vec4 toonColor1; uniform vec4 toonColor2; uniform vec4 toonColor3; uniform vec4 toonColor4; void main() {  if(intensity > 0.95) gl_FragColor = toonColor1;  else if(intensity > 0.35)  gl_FragColor = toonColor2; else if(intensity > 0.05)  gl_FragColor = toonColor3; else  gl_FragColor = toonColor4;}",
  "GLVertexProgram" ->"attribute vec4 position; attribute vec4 normal; uniform mat4 worldViewProjectionMatrix; uniform mat4 worldViewITMatrix; uniform vec4 uAmbientColor; uniform vec3 uLightingDirection; uniform vec4 uDirectionalColor; varying float intensity; void main() { gl_Position = worldViewProjectionMatrix * position; vec4 TransformedNormal = worldViewITMatrix * normal; vec3 lightDir = normalize(uLightingDirection); intensity = dot(normalize(TransformedNormal.xyz), lightDir); }"
  |>
|>]


(*****************************************)
(*   Others       *)
(*****************************************)

}
